{"version":3,"sources":["webpack:///./src/connect.tsx","webpack:///./src/components/DelimiterInput.tsx","webpack:///./src/components/NewlineDropdown.tsx","webpack:///./src/components/ProgressBar.tsx","webpack:///./src/components/BottomBar.tsx","webpack:///./src/components/ParserOutputBox.tsx","webpack:///./src/components/StoredComponent.tsx","webpack:///./src/components/MenuBar.tsx","webpack:///./src/components/EncodingDropdownOptions.ts","webpack:///./src/components/EncodingDropdown.tsx"],"names":["__webpack_require__","d","__webpack_exports__","connect","react__WEBPACK_IMPORTED_MODULE_0__","_Store__WEBPACK_IMPORTED_MODULE_1__","Component","props","Consumer","store","Object","assign","DropdownOptionKey","DelimiterInputComponent","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","dropdownOnChange","_","option","_dropdownToString","dropdownToString","_defineProperty","autoDetect","comma","space","tab","other","setState","otherSelected","key","onChange","getErrorMessage","value","showLengthError","length","t","state","_stringToDropdownKey",","," ","\t","DropdownOptionsNoAutoDetect","text","AutoDetectOption","showAutoDetect","_dropdownOptions","concat","_inherits","delimiter","codePoint","c","charCodeAt","toString","toUpperCase","padStart","_this2","customInput","className","_style_css__WEBPACK_IMPORTED_MODULE_3__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_1__","description","onGetErrorMessage","deferredValidationTime","placeholder","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_2__","label","options","responsiveMode","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_4__","large","selectedKey","showCustomInput","delimitersInDropdown","push","includes","DelimiterInput","react_i18next__WEBPACK_IMPORTED_MODULE_5__","NewlineDropdownComponent","autoDetectOption","_Parser__WEBPACK_IMPORTED_MODULE_3__","AutoDetect","newlineSequeneceMenu","CRLF","CR","LF","_options","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_1__","NewlineDropdown","react_i18next__WEBPACK_IMPORTED_MODULE_4__","ProgressBarComponent","apply","arguments","_style_css__WEBPACK_IMPORTED_MODULE_4__","contents","progress","show","variant","stopLink","percentComplete","percent","aborting","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_3__","onClick","ProgressBar","BottomBar","_style_css__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","_Pages__WEBPACK_IMPORTED_MODULE_5__","react_i18next__WEBPACK_IMPORTED_MODULE_6__","to","about","ParserOutputBox","_Store__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","parserOutput","type","hidden","info","output","rows","multiline","spellCheck","readOnly","error","StoredComponent","namespace","defaultState","saveKeys","_namespace","_saveKeys","_initialSave","localStorage","_save","loadedState","loadState","_arr2","entries","_i2","entry","substring","JSON","parse","children","_get","prototype","_typeof","saveState","save","setItem","clear","_arr","_i","stringify","MenuBar","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_Pages__WEBPACK_IMPORTED_MODULE_2__","react_i18next__WEBPACK_IMPORTED_MODULE_3__","items","name","iconProps","iconName","import","export","EncodingDropdownOptions","EncodingDropdown_EncodingDropdownComponent","EncodingDropdownComponent","_toConsumableArray","react","Dropdown","EncodingDropdown","es"],"mappings":"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","file":"export~import.74773cdbe6288b677cd2.js","sourcesContent":["import * as React from 'react';\nimport {Context, Store} from './Store';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect<P extends {store: Store}>(Component: React.ComponentClass): any {\n    // eslint-disable-next-line react/display-name\n    return (props: Pick<P, Exclude<keyof P, 'store'>>) => {\n        return (\n            <Context.Consumer>\n                {(store: Store) => <Component {...props} store={store}/>}\n            </Context.Consumer>\n        );\n    };\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {BaseProps} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\n\nexport enum DropdownOptionKey {autoDetect, comma, space, tab, other}\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    showLengthError: boolean;\n}\n\ninterface State {\n    otherSelected: boolean;\n}\n\nexport class DelimiterInputComponent extends React.Component<Props, State> {\n    public constructor(props) {\n        super(props);\n        this.state = {otherSelected: false};\n\n        this._stringToDropdownKey = {\n            '\\u002c': DropdownOptionKey.comma,\n            '\\u0020': DropdownOptionKey.space,\n            '\\u0009': DropdownOptionKey.tab,\n        };\n\n        const DropdownOptionsNoAutoDetect: IDropdownOption[] = [\n            {\n                key: DropdownOptionKey.comma,\n                text: 'Comma (U+002C)',\n            },\n            {\n                key: DropdownOptionKey.space,\n                text: 'Space (U+0020)',\n            },\n            {\n                key: DropdownOptionKey.tab,\n                text: 'Tab (U+0009)',\n            },\n            {\n                key: DropdownOptionKey.other,\n                text: props.t('Other'),\n            },\n        ];\n\n        const AutoDetectOption: IDropdownOption = {\n            key: DropdownOptionKey.autoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._stringToDropdownKey[''] = DropdownOptionKey.autoDetect;\n            this._dropdownOptions = [AutoDetectOption, ...DropdownOptionsNoAutoDetect];\n        } else {\n            this._dropdownOptions = DropdownOptionsNoAutoDetect;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const customInput = (\n            <div className={style.smallDivider}>\n                <TextField\n                    className={style.monospace}\n                    value={this.props.value}\n                    onChange={(_, value) => this.props.onChange(value)}\n                    description={DelimiterInputComponent.description(this.props.value)}\n                    onGetErrorMessage={this.getErrorMessage}\n                    deferredValidationTime={1}\n                    placeholder={t('Enter custom delimiter')}\n                />\n            </div>\n        );\n\n        return (\n            <>\n                <Dropdown\n                    label={t('Delimiter')}\n                    options={this._dropdownOptions}\n                    responsiveMode={ResponsiveMode.large}\n                    selectedKey={this.selectedKey()}\n                    onChange={this.dropdownOnChange}\n                />\n                {this.showCustomInput() ? customInput : null}\n            </>\n        );\n    }\n\n    private static description(delimiter: string): string {\n        if (delimiter.length == 1) {\n            return DelimiterInputComponent.codePoint(delimiter);\n        } else {\n            return '';\n        }\n    }\n\n    private static codePoint(c: string): string {\n        return 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n    private readonly _stringToDropdownKey: {[key: string]: DropdownOptionKey};\n\n    private showCustomInput(): boolean {\n        if (this.state.otherSelected) {\n            return true;\n        }\n\n        const delimitersInDropdown = ['\\u002c', '\\u0020', '\\u0009'];\n        if (this.props.showAutoDetect) {\n            delimitersInDropdown.push('');\n        }\n        return !delimitersInDropdown.includes(this.props.value);\n    }\n\n    private selectedKey(): DropdownOptionKey {\n        if (this.state.otherSelected) {\n            return DropdownOptionKey.other;\n        }\n\n        if (this.props.value in this._stringToDropdownKey) {\n            return this._stringToDropdownKey[this.props.value];\n        } else {\n            return DropdownOptionKey.other;\n        }\n    }\n\n    private dropdownOnChange = (_, option: IDropdownOption) => {\n        const dropdownToString = {\n            [DropdownOptionKey.autoDetect]: '',\n            [DropdownOptionKey.comma]: '\\u002c',\n            [DropdownOptionKey.space]: '\\u0020',\n            [DropdownOptionKey.tab]: '\\u0009',\n            [DropdownOptionKey.other]: '',\n        };\n\n        this.setState({otherSelected: option.key === DropdownOptionKey.other});\n        this.props.onChange(dropdownToString[option.key]);\n    }\n\n    private getErrorMessage = (value: string) => {\n        if (this.props.showLengthError && value.length > 1) {\n            return this.props.t('Delimiter length must be 0 or 1');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport const DelimiterInput = withTranslation('importExport')(DelimiterInputComponent);","import * as React from 'react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {BaseProps} from './BaseProps';\nimport {NewlineSequence} from '../Parser';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<NewlineSequence> {\n    showAutoDetect: boolean;\n}\n\nexport class NewlineDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n        const autoDetectOption: IDropdownOption = {\n            key: NewlineSequence.AutoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        const newlineSequeneceMenu = [\n            {\n                key: NewlineSequence.CRLF,\n                text: 'CRLF',\n            },\n            {\n                key: NewlineSequence.CR,\n                text: 'CR',\n            },\n            {\n                key: NewlineSequence.LF,\n                text: 'LF',\n            },\n        ];\n\n        if (props.showAutoDetect) {\n            this._options = [autoDetectOption, ...newlineSequeneceMenu];\n        } else {\n            this._options = newlineSequeneceMenu;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        return (\n            <Dropdown\n                label={t('Newline sequence')}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                options={this._options}\n                onChange={(_, option) => this.props.onChange(option.key as NewlineSequence)}\n            />\n        );\n    }\n\n    private readonly _options: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const NewlineDropdown = withTranslation('importExport')(NewlineDropdownComponent);","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {Progress} from '../Store';\nimport {withTranslation} from 'react-i18next';\nimport {TranslateFunction} from './BaseProps';\n\ninterface Props extends TranslateFunction{\n    // Fired when the \"Stop\" link is clicked.\n    onClick: () => void;\n    progress: Progress;\n}\n\nexport class ProgressBarComponent extends React.Component<Props, {}> {\n    public render(): JSX.Element {\n        return (\n            <div className={style.smallDivider}>{this.contents()}</div>\n        );\n    }\n\n    private contents(): React.ReactNode {\n        if (this.props.progress.show) {\n            return (\n                <>\n                    <Text variant='small'>{this.stopLink()}</Text>\n                    <ProgressIndicator percentComplete={this.props.progress.percent}/>\n                </>\n            );\n        } else {\n            return <Text variant='small'>&nbsp;</Text>;\n        }\n    }\n\n    private stopLink(): React.ReactNode {\n        if (this.props.progress.aborting) {\n            return this.props.t('Stopping');\n        } else {\n            return <Link onClick={this.props.onClick}>{this.props.t('Stop')}</Link>;\n        }\n    }\n}\n\n// @ts-ignore\nexport const ProgressBar = withTranslation('importExport')(ProgressBarComponent)","import * as style from './style.css';\nimport {Link, Text} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\nexport function BottomBar(): JSX.Element {\n    const {t} = useTranslation('importExport');\n    return (\n        <div className={style.bottomBar}>\n            <Text variant='medium'>\n                <RouterLink to={Pages.about} className={style.removeUnderline}>\n                    <Link>{t('About')}</Link>\n                </RouterLink>\n            </Text>\n        </div>\n    );\n}","import {OutputType, ParserOutput} from '../Store';\nimport {TextField} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\nexport function ParserOutputBox(props: {parserOutput: ParserOutput}): JSX.Element {\n    switch (props.parserOutput.type) {\n    case OutputType.hidden:\n        return null;\n    case OutputType.info:\n        return (\n            <TextField\n                className={style.monospace}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    case OutputType.error:\n        return (\n            <TextField\n                className={style.monospace  + ' ' + style.redText}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringKey {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport class StoredComponent<P = {}, S extends StringKey = {}> extends React.Component<P, S> {\n    public constructor(\n        props: Readonly<P>,\n        namespace: string,\n        defaultState: Readonly<S>,\n        saveKeys: ReadonlyArray<keyof S>\n    ) {\n        super(props);\n        this._namespace = namespace;\n        this._saveKeys = saveKeys;\n        this._initialSave = localStorage && localStorage['StoredComponent-save'] === '\"true\"';\n        this._save = this._initialSave;\n\n        let loadedState = {};\n        if (this._save) {\n            loadedState = StoredComponent.loadState(namespace, saveKeys as string[]);\n        }\n        this.state = {...defaultState, ...loadedState};\n    }\n\n    public render(): React.ReactNode {\n        return this.props.children;\n    }\n\n    // State is saved only if state is an object.\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null))\n        | (Pick<S, K> | S | null),\n    ): void {\n        super.setState(state);\n        if (this._save && typeof state === 'object') {\n            this.saveState(state);\n        }\n    }\n\n    public initialSaveStatus(): boolean {\n        return this._initialSave;\n    }\n\n    public setSaveStatus(save: boolean): void {\n        this._save = save;\n\n        if (save) {\n            localStorage.setItem('StoredComponent-save', '\"true\"');\n            this.saveState(this.state);\n        } else {\n            localStorage.clear();\n        }\n    }\n\n    private static loadState(namespace: string, saveKeys: string[]): {} {\n        const loadedState = {};\n        for (const entry of Object.entries(localStorage)) {\n            if (\n                entry[0].substring(0, namespace.length + 1) === namespace + '-'\n                && saveKeys.includes(entry[0].substring(namespace.length + 1))\n            ) {\n                loadedState[entry[0].substring(namespace.length + 1)] = JSON.parse(entry[1]);\n            }\n        }\n        return loadedState;\n    }\n\n    private readonly _namespace: string;\n    private readonly _saveKeys: ReadonlyArray<keyof S>;\n    private readonly _initialSave: boolean;\n    private _save: boolean;\n\n    private saveState<K extends keyof S>(state: Pick<S, K> | S | null): void {\n        for (const entry of Object.entries(state)) {\n            if (this._saveKeys.includes(entry[0])) {\n                const key = this._namespace + '-' + entry[0];\n                localStorage.setItem(key, JSON.stringify(entry[1]));\n            }\n        }\n    }\n}","import {CommandBar} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\ninterface Props {\n    hidden: boolean;\n    onClick: (page: string) => void;\n}\n\nexport function MenuBar(props: Props): JSX.Element {\n    // Only shown on Excel for iPad because it has only one ribbon button for this app.\n    if (props.hidden) {\n        return null;\n    }\n\n    const {t} = useTranslation('importExport');\n\n    return (\n        <CommandBar\n            items={[\n                {\n                    key: 'import',\n                    name: t('Import CSV'),\n                    iconProps: {iconName: 'Add'},\n                    onClick: () => props.onClick(Pages.import),\n                },\n                {\n                    key: 'export',\n                    name: t('Export CSV'),\n                    iconProps: {iconName: 'Download'},\n                    onClick: () => props.onClick(Pages.export),\n                },\n            ]}\n        />\n    );\n}","import {IDropdownOption} from 'office-ui-fabric-react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n    // Use generateEncodingList.js to generate list\n    {\n        \"key\": \"Big5\",\n        \"text\": \"Big5\",\n    },\n    {\n        \"key\": \"EUC-JP\",\n        \"text\": \"EUC-JP\",\n    },\n    {\n        \"key\": \"EUC-KR\",\n        \"text\": \"EUC-KR\",\n    },\n    {\n        \"key\": \"GBK\",\n        \"text\": \"GBK\",\n    },\n    {\n        \"key\": \"IBM866\",\n        \"text\": \"IBM866 (Cyrillic)\",\n    },\n    {\n        \"key\": \"ISO-2022-JP\",\n        \"text\": \"ISO-2022-JP (JIS)\",\n    },\n    {\n        \"key\": \"ISO-8859-10\",\n        \"text\": \"ISO-8859-10 (Latin-6)\",\n    },\n    {\n        \"key\": \"ISO-8859-13\",\n        \"text\": \"ISO-8859-13 (Latin-7)\",\n    },\n    {\n        \"key\": \"ISO-8859-14\",\n        \"text\": \"ISO-8859-14 (Latin-8)\",\n    },\n    {\n        \"key\": \"ISO-8859-15\",\n        \"text\": \"ISO-8859-15 (Latin-9)\",\n    },\n    {\n        \"key\": \"ISO-8859-16\",\n        \"text\": \"ISO-8859-16 (Latin-10)\",\n    },\n    {\n        \"key\": \"ISO-8859-2\",\n        \"text\": \"ISO-8859-2 (Central European)\",\n    },\n    {\n        \"key\": \"ISO-8859-3\",\n        \"text\": \"ISO-8859-3 (Latin 3)\",\n    },\n    {\n        \"key\": \"ISO-8859-4\",\n        \"text\": \"ISO-8859-4 (Latin-4)\",\n    },\n    {\n        \"key\": \"ISO-8859-5\",\n        \"text\": \"ISO-8859-5 (Cryillic)\",\n    },\n    {\n        \"key\": \"ISO-8859-6\",\n        \"text\": \"ISO-8859-6 (Arabic)\",\n    },\n    {\n        \"key\": \"ISO-8859-7\",\n        \"text\": \"ISO-8859-7 (Greek)\",\n    },\n    {\n        \"key\": \"ISO-8859-8\",\n        \"text\": \"ISO-8859-8 (Hebrew)\",\n    },\n    {\n        \"key\": \"ISO-8859-8-I\",\n        \"text\": \"ISO-8859-8-I (Hebrew)\",\n    },\n    {\n        \"key\": \"KOI8-R\",\n        \"text\": \"KOI8-R\",\n    },\n    {\n        \"key\": \"KOI8-U\",\n        \"text\": \"KOI8-U\",\n    },\n    {\n        \"key\": \"Shift_JIS\",\n        \"text\": \"Shift_JIS\",\n    },\n    {\n        \"key\": \"UTF-16BE\",\n        \"text\": \"UTF-16BE\",\n    },\n    {\n        \"key\": \"UTF-16LE\",\n        \"text\": \"UTF-16LE\",\n    },\n    {\n        \"key\": \"UTF-8\",\n        \"text\": \"UTF-8\",\n    },\n    {\n        \"key\": \"gb18030\",\n        \"text\": \"gb18030\",\n    },\n    {\n        \"key\": \"macintosh\",\n        \"text\": \"macintosh\",\n    },\n    {\n        \"key\": \"replacement\",\n        \"text\": \"replacement\",\n    },\n    {\n        \"key\": \"windows-1250\",\n        \"text\": \"windows-1250 (Central European)\",\n    },\n    {\n        \"key\": \"windows-1251\",\n        \"text\": \"windows-1251 (Cyrillic)\",\n    },\n    {\n        \"key\": \"windows-1252\",\n        \"text\": \"windows-1252 (Western European)\",\n    },\n    {\n        \"key\": \"windows-1253\",\n        \"text\": \"windows-1253 (Greek)\",\n    },\n    {\n        \"key\": \"windows-1254\",\n        \"text\": \"windows-1254 (Turkish)\",\n    },\n    {\n        \"key\": \"windows-1255\",\n        \"text\": \"windows-1255 (Hebrew)\",\n    },\n    {\n        \"key\": \"windows-1256\",\n        \"text\": \"windows-1256 (Arabic)\",\n    },\n    {\n        \"key\": \"windows-1257\",\n        \"text\": \"windows-1257 (Baltic)\",\n    },\n    {\n        \"key\": \"windows-1258\",\n        \"text\": \"windows-1258 (Vietnamese)\",\n    },\n    {\n        \"key\": \"windows-874\",\n        \"text\": \"windows-874 (Thai)\",\n    },\n    {\n        \"key\": \"x-mac-cyrillic\",\n        \"text\": \"x-mac-cyrillic\",\n    },\n    {\n        \"key\": \"x-user-defined\",\n        \"text\": \"x-user-defined\",\n    },\n];","import {BaseProps} from './BaseProps';\nimport * as React from 'react';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    hidden: boolean;\n}\n\nexport class EncodingDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n\n        const AutoDetectOption: IDropdownOption = {\n            'key': '',\n            'text': props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._dropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n        } else {\n            this._dropdownOptions = EncodingDropdownOptions;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        if (this.props.hidden) {\n            return null;\n        } else {\n            return (\n                <>\n                    <Dropdown\n                        label={t('Encoding')}\n                        selectedKey={this.props.value}\n                        options={this._dropdownOptions}\n                        onChange={(_, option) => this.props.onChange(option.key as string)}\n                    />\n                    <br/>\n                </>\n            );\n        }\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const EncodingDropdown = withTranslation('importExport')(EncodingDropdownComponent);"],"sourceRoot":""}