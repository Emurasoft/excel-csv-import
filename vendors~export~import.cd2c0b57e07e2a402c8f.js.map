{"version":3,"sources":["webpack:///./node_modules/@uifabric/utilities/lib/dom/getRect.js","webpack:///./node_modules/@uifabric/utilities/lib/AutoScroll.js","webpack:///./node_modules/@uifabric/utilities/lib/FabricPerformance.js","webpack:///./node_modules/@uifabric/utilities/lib/asAsync.js","webpack:///./node_modules/@uifabric/utilities/lib/assertNever.js","webpack:///./node_modules/@uifabric/utilities/lib/autobind.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/mergeSettings.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/mergeCustomizations.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/Customizer.js","webpack:///./node_modules/@uifabric/utilities/lib/dom/getChildren.js","webpack:///./node_modules/@uifabric/utilities/lib/initials.js","webpack:///./node_modules/@uifabric/utilities/lib/math.js","webpack:///./node_modules/@uifabric/utilities/lib/resources.js","webpack:///./node_modules/@uifabric/utilities/lib/string.js","webpack:///./node_modules/@uifabric/utilities/lib/version.js","webpack:///./node_modules/@uifabric/utilities/lib/index.js","webpack:///./node_modules/@uifabric/set-version/lib/index.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode.js","webpack:///./node_modules/react-router-dom/esm/react-router-dom.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.types.js","webpack:///./node_modules/@uifabric/utilities/lib/DelayedRender.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/Utilities.js","webpack:///./node_modules/@uifabric/utilities/lib/Context.js","webpack:///./node_modules/@uifabric/utilities/lib/overflow.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/DefaultButton/DefaultButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ButtonThemes.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/DefaultButton/DefaultButton.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/utilities/decorators/BaseDecorator.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/version.js","webpack:///./node_modules/@uifabric/styling/lib/styles/GeneralStyles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/PrimaryButton/PrimaryButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ActionButton/ActionButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandButton/CommandButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ActionButton/ActionButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/utilities/DropdownSizePosCache.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/FocusTrapZone/FocusTrapZone.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ResizeGroup/ResizeGroup.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ResizeGroup/ResizeGroup.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandBarButton/CommandBarButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandBarButton/CommandBarButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.styles.js"],"names":["getRect","element","rect","window","left","top","width","innerWidth","height","innerHeight","right","bottom","getBoundingClientRect","AutoScroll_AutoScroll","AutoScroll","this","_events","EventGroup","_scrollableParent","Object","lib_scroll","_incrementScroll","bind","_scrollRect","document","body","on","_onMouseMove","_onTouchMove","prototype","dispose","_stopScroll","ev","_computeScrollVelocity","clientY","touches","length","scrollRectTop","scrollClientBottom","_scrollVelocity","Math","max","min","_startScroll","_timeoutId","scrollTop","round","setTimeout","clearTimeout","now","performance","Date","FabricPerformance","measure","name","func","setPeriodicReset","start","end","measurement","summary","totalDuration","count","all","duration","push","timeStamp","reset","NaN","_syncModuleCache","WeakMap","undefined","asAsync","options","Async","_super","_this","apply","arguments","state","Component","get","load","tslib_es6","render","_a","props","forwardedRef","Placeholder","asyncPlaceholder","rest","react","ref","componentDidMount","then","LoadedComponent","set","setState","onLoad","catch","onError","assertNever","x","Error","autobind","target","key","descriptor","fn","value","defining","configurable","hasOwnProperty","fnBound","defineProperty","writable","enumerable","newValue","mergeSettings","oldSettings","newSettings","_isSettingsFunction","settings","_settingsMergeWith","mergeScopedSettings","scopedSettingsFromProps","oldScopedSettings","newScopedSettings","scopeName","_scopedSettingsMergeWith","mergeCustomizations","parentContext","customizations","scopedSettings","inCustomizerContext","Customizer_Customizer","Customizer","_changeCount","_onCustomizationChange","forceUpdate","Customizations","observe","componentWillUnmount","unobserve","contextTransform","CustomizerContext","Consumer","newContext","Provider","children","BaseComponent","getChildren","parent","allowVirtualChildren","i","item","isVirtualElement","_virtual","UNWANTED_CHARS_REGEX","PHONENUMBER_REGEX","MULTIPLE_WHITESPACES_REGEX","UNSUPPORTED_TEXT_REGEX","getInitials","displayName","isRtl","allowPhoneInitials","replace","trim","cleanupDisplayName","test","initials","splits","split","charAt","toUpperCase","getInitialsLatin","getDistanceBetweenPoints","point1","point2","sqrt","pow","y","fitContentToBounds","scale","contentSize","boundsSize","mode","_b","maxScale","contentAspectRatio","boundsAspectRatio","finalScale","calculatePrecision","groups","exec","String","precisionRound","precision","base","exp","_baseUrl","getResourceUrl","url","setBaseUrl","baseUrl","FORMAT_ARGS_REGEX","FORMAT_REGEX","format","s","values","_i","args","match","replacement","setVersion","__webpack_require__","d","__webpack_exports__","lib_Async","Context","DelayedRender","GlobalSettings","KeyCodes","Rectangle","appendFunction","aria","array","classNamesFunction","createRef","css","customizable","getDocument","elementContains","elementContainsAttribute","findElementRecursive","getParent","getVirtualParent","getWindow","portalContainsElement","raiseClick","setPortalAttribute","setVirtualParent","extendComponent","lib_focus","hoist","hoistStatics","initializeComponentRef","initializeFocusRects","keyboard","language","memoize","merge","mobileDetector","object","osDetector","overflow","properties","rtl","styled","warn","warnConditionallyRequiredProps","warnDeprecations","warnMutuallyExclusive","setSSR","r","_setVersion__WEBPACK_IMPORTED_MODULE_0__","exports","ResponsiveMode","tslib_1","React","BaseDecorator_1","Utilities_1","_defaultMode","RESPONSIVE_MAX_CONSTRAINT","setResponsiveMode","responsiveMode","withResponsiveMode","ComposedComponent","resultClass","WithResponsiveMode","call","_updateComposedComponentRef","_getResponsiveMode","__extends","createElement","__assign","small","win","e","large","BaseDecorator","Link","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","a","_React$Component","_proto","handleClick","event","history","onClick","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","preventDefault","to","_this$props","innerRef","context","location","href","createHref","TooltipDelay","tslib__WEBPACK_IMPORTED_MODULE_0__","isRendered","delay","only","defaultProps","__exportStar","provideContext","contextTypes","mapPropsToContext","getChildContext","childContextTypes","hasHorizontalOverflow","clientWidth","scrollWidth","hasVerticalOverflow","clientHeight","scrollHeight","hasOverflow","getStyles","theme","customStyles","primary","baseButtonStyles","BaseButton_styles","splitButtonStyles","SplitButton_styles","defaultButtonStyles","root","minWidth","label","fontWeight","fonts","semibold","concatStyleSets","backgroundColor","palette","themePrimary","color","white","selectors","CommonStyles","MsHighContrastAdjust","rootHovered","themeDarkAlt","rootPressed","themeDark","_c","rootExpanded","rootChecked","rootCheckedHovered","rootDisabled","_d","borderColor","splitButtonContainer","_e","border","splitButtonDivider","themeLighter","splitButtonMenuButton",":hover","_f","splitButtonMenuButtonDisabled","neutralLighter","splitButtonMenuButtonChecked","splitButtonMenuButtonExpanded","splitButtonMenuIcon","splitButtonMenuIconDisabled","neutralTertiary","primaryStyles","semanticColors","buttonBackground","buttonBackgroundChecked","buttonBackgroundHovered","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","neutralLight","neutralTertiaryAlt","neutralPrimary","standardStyles","DefaultButton_DefaultButton","DefaultButton","_skipComponentRefResolution","styles","BaseButton","variantClassName","onRenderDescription","composedComponentInstance","_composedComponentInstance","_hoisted","hoistMethods","unhoistMethods","normalize","noWrap","boxShadow","margin","padding","boxSizing","textOverflow","whiteSpace","PrimaryButton","_Utilities__WEBPACK_IMPORTED_MODULE_2__","_Utilities__WEBPACK_IMPORTED_MODULE_3__","_DefaultButton_DefaultButton__WEBPACK_IMPORTED_MODULE_4__","SelectableOptionMenuItemType","getClassNames","Checkbox_base_CheckboxBase","CheckboxBase","_checkBox","_onFocus","inputProps","onFocus","_onBlur","onBlur","_onChange","disabled","onChange","isChecked","checked","_onRenderLabel","className","_classNames","text","_warnMutuallyExclusive","_id","id","defaultChecked","componentWillReceiveProps","newProps","boxSide","ariaLabel","ariaLabelledBy","ariaDescribedBy","onRenderLabel","checkmarkIconProps","ariaPositionInSet","ariaSetSize","keytipProps","title","isReversed","reversed","isUsingCustomLabelRender","KeytipData","keytipAttributes","type","data-ktp-execute-target","input","aria-disabled","aria-label","aria-labelledby","aria-describedby","aria-posinset","aria-setsize","htmlFor","checkbox","data-ktp-target","Icon","iconName","checkmark","focus","current","Checkbox","_g","_h","_j","checkmarkFontColor","inputForegroundChecked","checkmarkFontColorCheckedDisabled","disabledBackground","checkmarkFontColorHovered","inputBorder","checkboxBorderColor","smallInputBorder","checkboxBorderColorChecked","inputBackgroundChecked","checkboxBorderColorDisabled","disabledBodySubtext","checkboxBorderHoveredColor","inputBorderHovered","checkboxBackgroundChecked","checkboxBackgroundCheckedHovered","inputBackgroundCheckedHovered","checkboxBorderColorCheckedHovered","checkboxHoveredTextColor","bodyText","checkboxBackgroundDisabledChecked","checkboxTextColor","checkboxTextColorDisabled","disabledText","position","display",":hover .ms-Checkbox-checkbox",":focus .ms-Checkbox-checkbox",":hover .ms-Checkbox-checkmark","opacity","background",":focus:hover .ms-Checkbox-checkbox",":focus:hover .ms-Checkbox-checkmark",":hover .ms-Checkbox-text",":focus .ms-Checkbox-text","outline","neutralSecondary","outlineOffset","medium","alignItems","cursor","userSelect","textAlign","flexDirection","justifyContent","&::before","content","pointerEvents","flexShrink","borderWidth","borderStyle","transitionProperty","transitionDuration","transitionTimingFunction","marginLeft","marginRight","fontSize","lineHeight","scope","ActionButton_styles_getStyles","actionButtonStyles","iconHovered","black","iconPressed","themeDarker","iconChecked","flexContainer","icon","iconDisabled","menuIcon","textContainer","flexGrow","CommandButton","ActionButton","PanelType","DropdownSizePosCache_DropdownSizePosCache","DropdownSizePosCache","_size","updateOptions","displayOnlyOptionsCache","size","itemType","Divider","Header","_displayOnlyOptionsCache","positionInSet","index","offset","Overlay_base_getClassNames","Overlay_base_OverlayBase","OverlayBase","isDark","isDarkThemed","divProps","classNames","GlobalClassNames","rootDark","Overlay","isNone","getGlobalClassNames","whiteTranslucent40","visibility","blackTranslucent40","FocusTrapZone_FocusTrapZone","FocusTrapZone","_root","_onFocusCapture","onFocusCapture","currentTarget","_previouslyFocusedElementInTrapZone","_onKeyboardHandler","onKeyDown","isDefaultPrevented","which","tab","_firstTabbableChild","firstChild","_lastTabbableChild","lastChild","stopPropagation","_bringFocusIntoZone","_updateEventHandlers","nextProps","elementToFocusOnDismiss","_previouslyFocusedElementOutsideTrapZone","componentDidUpdate","prevProps","prevForceFocusInsideTrap","forceFocusInsideTrap","newForceFocusInsideTrap","_returnFocusToInitiator","focusPreviouslyFocusedInnerElement","firstFocusableSelector","_firstFocusableChild","focusSelector","querySelector","disableFirstFocus","_focusStack","activeElement","ignoreExternalFocusing","filter","isClickableOutsideFocusTrap","_hasFocusHandler","_forceFocusInTrap","off","_hasClickHandler","_forceClickInTrap","focusedElement","relatedTarget","clickedElement","Panel_styles_a","Panel_styles_b","Panel_styles_c","Panel_styles_d","Panel_styles_e","Panel_styles_f","Dropdown_styles_a","Dropdown_styles_b","Panel_base_getClassNames","Panel_base_PanelBase","PanelBase","_panel","dismiss","isOpen","onDismiss","isAnimating","_async","_onTransitionComplete","_allowScrollOnPanel","elt","_scrollableContent","_onRenderNavigation","onRenderNavigationContent","_onRenderNavigationContent","navigation","closeButtonAriaLabel","hasCloseButton","styles_theme","IconButton","closeButton","_onPanelClick","data-is-visible","iconProps","_onRenderHeader","defaultRender","headerTextId","headerText","header","role","aria-level","_onRenderBody","_onRenderFooter","onRenderFooterContent","footer","footerInner","_updateFooterPosition","onDismissed","_warnDeprecations","isFooterSticky","_shouldListenForOuterClick","_dismissOnOuterClick","open","previousProps","shouldListenOnOuterClick","previousShouldListenOnOuterClick","focusTrapZoneProps","headerClassName","isBlocking","isFooterAtBottom","isLightDismiss","isHiddenOnDismiss","layerProps","customWidth","onLightDismissClick","onRenderNavigation","onRenderHeader","onRenderBody","onRenderFooter","isLeft","smallFixedNear","customNear","isOnRightSide","customWidthStyles","custom","nativeProps","focusTrapZoneClassName","overlay","Layer","Popup","aria-modal","hiddenPanel","aria-hidden","main","style","commands","contentInner","scrollableContent","data-is-scrollable","innerHeight_1","panel","onOuterClick","smallFixedFar","Panel_styles_GlobalClassNames","smallFluid","largeFixed","extraLarge","panelWidth","panelMargin","smallPanelSelectors","mediumPanelSelectors","largePanelSelectors","largeFixedPanelSelectors","extraLargePanelSelectors","getPanelBreakpoints","sharedPaddingStyles","paddingLeft","paddingRight","Panel","isCustomPanel","windowHeight","AnimationClassNames","fadeIn100","fadeOut100","overflowX","overflowY","WebkitOverflowScrolling","maxHeight","maxWidth","slideRightIn40","slideLeftIn40","slideLeftOut40","slideRightOut40","marginTop","DefaultFontStyles","xLarge","marginBottom","paddingBottom","borderTop","transition","AnimationStyles","durationValue3","easeFunction2","borderTopColor","paddingTop","Dropdown_base_getClassNames","Dropdown_base_DropdownBase","DropdownBase","selectedIndices","_host","_focusZone","_dropDown","_scrollIdleDelay","_sizePosCache","_onRenderTitle","multiSelectDelimiter","displayTxt","map","join","_onRenderPlaceholder","_placeholder","_onRenderContainer","calloutProps","panelProps","dropdownWidth","isSmall","panelStyles","subComponentStyles","_onDismiss","_renderFocusableList","Callout","isBeakVisible","gapSpace","doNotLayer","directionalHintFixed","directionalHint","DirectionalHint","bottomLeftEdge","callout","onScroll","_onScroll","onPositioned","_onPositioned","calloutWidth","_onRenderCaretDown","caretDown","_onRenderList","onRenderItem","_onRenderItem","_renderSeparator","_renderHeader","_renderOption","onRenderOption","_onRenderOption","isItemSelected","indexOf","itemClassName","dropdownItemSelectedAndDisabled","dropdownItemSelected","dropdownItemDisabled","dropdownItem","multiSelect","data-index","data-is-focusable","_onItemClick","onMouseEnter","_onItemMouseEnter","onMouseLeave","_onMouseItemLeave","onMouseMove","_onItemMouseMove","aria-selected","dropdownOptionText","positions","requestAnimationFrame","focusElement","calloutRenderEdge","targetEdge","setSelectedIndex","_isScrollIdle","_scrollIdleTimeoutId","_shouldIgnoreMouseEvent","setActive","_onDropdownBlur","_isDisabled","hasFocus","_onDropdownKeyDown","_lastKeyDownWasAltOrMeta","_isAltOrMeta","newIndex","selectedIndex","containsExpandCollapseModifier","enter","escape","up","_moveIndex","down","home","space","_onDropdownKeyUp","shouldHandleKey","_shouldHandleKeyUp","onKeyUp","_onZoneKeyDown","elementToFocus","pageUp","pageDown","_onZoneKeyUp","_onDropdownClick","isDisabled","onChanged","placeHolder","defaultSelectedKey","defaultSelectedKeys","selectedKeys","selectedKey","_getSelectedIndexes","selectedKeyProp","didOptionsChange","prevState","_gotMouseMove","required","errorMessage","propStyles","onRenderTitle","onRenderContainer","onRenderPlaceHolder","onRenderCaretDown","selectedOptions","_getAllSelectedOptions","optionId","ariaAttrs","ariaActiveDescendant","childRole","ariaPosInSet","ariaSelected","optionSetSize","hasError","Boolean","isRenderingPlaceholder","panelClassName","calloutClassName","labelStyles","Label","tabIndex","aria-expanded","aria-activedescendant","aria-required","aria-owns","dropdown","aria-atomic","aria-live","caretDownWrapper","shouldOpenOnFocus","notifyOnReselect","newIndexes","_copyArray","splice","selected","placeholder","newArray","array_1","stepValue","stepCounter","onRenderList","dropdownItemsWrapper","FocusZone","direction","FocusZone_types","vertical","dropdownItems","dropdownDivider","dropdownItemHeader","targetElement","_getAllSelectedIndices","_getSelectedIndex","Array","isArray","selectedKey_1","selectedIndices_1","option","isSelected","alt","keyPressIsAltOrMetaAlone","Dropdown_styles_GlobalClassNames","titleIsPlaceHolder","titleHasError","highContrastAdjustMixin","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: black-on-white)","highContrastItemAndTitleStateMixin","highContrastBorderState","Dropdown","globalClassnames","rootHoverFocusActiveSelectorNeutralDarkMixin","neutralDark","rootHoverFocusActiveSelectorBodySubtextMixin","bodySubtext","borderColorError","errorText","dropdownItemStyle","minHeight","wordWrap","overflowWrap","concat","neutralQuaternaryAlt","GeneralStyles","inputBackground","DROPDOWN_HEIGHT","inputPlaceholderText","&:focus","listItemBackgroundHovered","listHeaderBackgroundHovered","bodyDivider","menuHeader","OverflowSet_base_OverflowSetBase","OverflowSetBase","_persistedKeytips","_keytipManager","KeytipManager","getInstance","_divContainer","_onRenderItems","items","wrapperDivProps","_onRenderOverflowButtonWrapper","overflowButton","overflowKeytipSequences","keytipSequences","newOverflowItems","forEach","overflowItem","keytip","persistedKeytip","keySequences","hasDynamicChildren","hasMenu","_getSubMenuForItem","onExecute","menuExecute","newOverflowItem","overflowSetSequence","onRenderOverflowButton","doNotContainWithinFocusZone","Tag","uniqueComponentProps","overflowItems","focusZoneProps","componentRef","horizontal","forceIntoFirstElement","focusSucceeded","childElement","_registerPersistedKeytips","_unregisterPersistedKeytips","componentWillUpdate","keys","uniqueID","register","unregister","itemSubMenuProvider","subMenuProps","overflowItemStyle","OverflowSet","flexWrap","getNextResizeGroupStateProvider","measurementCache","measurementsCache","getCachedMeasurement","data","cacheKey","addMeasurementToCache","_containerWidth","_measurementCache","_getMeasuredWidth","measuredData","getElementToMeasureWidth","cachedWidth","measuredWidth","_shrinkContentsUntilTheyFit","onReduceData","dataToMeasure","nextMeasuredData","renderedData","resizeDirection","getNextState","currentState","newContainerWidth","newWidth","fullWidthData","onGrowData","nextState","measureContainer","_updateContainerWidth","_growDataUntilItDoesNotFit","shouldRenderDataForMeasurement","getInitialResizeGroupState","MeasuredContext","isMeasured","prop_types","hiddenDivStyles","hiddenParentStyles","ResizeGroup","ResizeGroupBase","_nextResizeGroupStateProvider","_initialHiddenDiv","_updateHiddenDiv","_hasRenderedContent","onRenderData","dataNeedsMeasuring","isInitialMeasure","data-automation-id","_afterComponentRendered","debounce","_onResize","leading","dataDidRender","remeasure","containerWidth","refToMeasure","CommandBarButton_styles_getStyles","focusInset","focusColor","baseSplitButtonStyles","commandButtonStyles","getFocusStyle","neutralQuaternary","CommandBarButton_CommandBarButton","CommandBarButton","CommandBar_base_getClassNames","CommandBar_base_CommandBarBase","CommandBarBase","_overflowSet","_resizeGroup","_onRenderData","_resolveRef","primarySet","primaryItems","_onRenderOverflowButton","farItems","secondarySet","CommandButtonType","buttonAs","commandBarButtonAs","itemText","onRender","commandButtonProps","allowDisabledFocus","buttonStyles","iconOnly","menuProps","_onButtonClick","TooltipHost","tooltipHostProps","overflowButtonAs","OverflowButtonType","overflowButtonProps","combinedOverflowItems","overflowProps","menuIconProps","_onReduceData","shiftOnReduce","onDataReduced","movedItem","renderedInOverflow","slice","newData","_computeCacheKey","_onGrowData","onDataGrown","minimumOverflowItems","commandBarData","overflowSet","inactive","returnKey","acc","reduce","CommandBar","TooltipOverflowMode","Tooltip_base_TooltipBase","TooltipBase","_onRenderContent","subText","directionalHintForRTL","onRenderContent","topCenter","Tooltip_types","beakWidth","setInitialFocus","Tooltip","fadeIn200","animationDelay","zero","long","TooltipHost_base_getClassNames","TooltipHost_base_TooltipHostBase","TooltipHostBase","_tooltipHost","_closingTimer","show","_toggleTooltip","_hideTooltip","_onTooltipMouseEnter","overflowMode","_currentVisibleTooltip","overflowElement","_getTargetElement","_clearDismissTimer","_onTooltipMouseLeave","closeDelay","isTooltipVisible","hostClassName","setAriaDescribedBy","tooltipProps","tooltipId","isContentPresent","showTooltip","onBlurCapture","Parent","parentElement","Self","onTooltipToggle","DEFAULT_STATE_VALUE","TextField_base_TextFieldBase","TextFieldBase","_textElement","isFocused","validateOnFocusIn","_validate","validateOnFocusOut","_onRenderDescription","description","_onInputChange","persist","_latestValue","_adjustInputHeight","_delayedValidate","onBeforeChange","iconClass","addonString","onRenderAddon","_descriptionId","defaultValue","deferredValidationTime","_lastValidation","_isMounted","validateOnLoad","_setValue","multiline","_shouldResetFocusAfterRender","_selectionBeforeInputTypeChange","selectionStart","selectionEnd","setSelectionRange","borderless","inputClassName","underlined","prefix","resizable","suffix","autoAdjustHeight","_onRenderAddon","onRenderPrefix","_onRenderPrefix","onRenderSuffix","_onRenderSuffix","_errorMessage","focused","hasLabel","hasErrorMessage","hasIcon","wrapper","fieldGroup","_renderTextArea","_renderInput","_isDescriptionAvailable","blur","select","setSelectionStart","setSelectionEnd","textAreaProps","onInput","field","aria-invalid","readOnly","_latestValidateValue","result","onGetErrorMessage","_notifyAfterValidate","currentValidation_1","onNotifyValidationResult","textField","globalClassNames","unresizable","active","getLabelStyles","TextField","fieldPrefixSuffix","borderBottomWidth","borderBottomStyle","borderBottomColor","inputFocusBorderAlt","flex","&:focus, &:hover",":after","borderRadius","inputText","&:active, &:focus, &:hover","::-ms-clear","::placeholder",":-ms-input-placeholder","resize","xSmall","slideDownIn20","Label_base_LabelBase","LabelBase","as","RootType","disabledBodyText","::after","ZERO_THRESHOLD","ProgressIndicator_base_ProgressIndicatorBase","ProgressIndicatorBase","_onRenderProgress","ariaValueText","barHeight","percentComplete","indeterminate","progressBarStyles","ariaValueMin","ariaValueMax","ariaValueNow","floor","itemProgress","progressTrack","progressBar","aria-valuemin","aria-valuemax","aria-valuenow","aria-valuetext","progressHidden","onRenderProgress","itemName","itemDescription","IndeterminateProgress","keyframes","0%","100%","IndeterminateProgressRTL","ProgressIndicator","isRTL","progressTrackColor","regular","marginBetweenText","textHeight","borderBottom","animation","Toggle_base_ToggleBase","ToggleBase","_toggleButton","_onClick","checkedProp","onAriaLabel","offAriaLabel","offText","onText","inlineLabel","stateText","badAriaLabel","toggleNativeProps","onOffMissing","hidden","container","pill","aria-checked","_noop","thumb","Toggle","pillUncheckedBackground","bodyBackground","pillCheckedBackground","pillCheckedHoveredBackground","pillCheckedDisabledBackground","thumbBackground","thumbCheckedBackground","thumbDisabledBackground","thumbCheckedDisabledBackground","pillBorderColor","pillBorderHoveredColor","pillBorderDisabledColor","textDisabledColor","order",":hover .ms-Toggle-thumb","&:hover","&&"],"mappings":"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","file":"vendors~export~import.cd2c0b57e07e2a402c8f.js","sourcesContent":["/**\r\n * Helper to get bounding client rect. Passing in window will get the window size.\r\n *\r\n * @public\r\n */\r\nexport function getRect(element) {\r\n    var rect;\r\n    if (element) {\r\n        if (element === window) {\r\n            rect = {\r\n                left: 0,\r\n                top: 0,\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                right: window.innerWidth,\r\n                bottom: window.innerHeight\r\n            };\r\n        }\r\n        else if (element.getBoundingClientRect) {\r\n            rect = element.getBoundingClientRect();\r\n        }\r\n    }\r\n    return rect;\r\n}\r\n//# sourceMappingURL=getRect.js.map","import { EventGroup } from './EventGroup';\r\nimport { findScrollableParent } from './scroll';\r\nimport { getRect } from './dom/getRect';\r\nvar SCROLL_ITERATION_DELAY = 16;\r\nvar SCROLL_GUTTER_HEIGHT = 100;\r\nvar MAX_SCROLL_VELOCITY = 15;\r\n/**\r\n * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container\r\n * up/down depending on how close the mouse is to the top/bottom of the container.\r\n *\r\n * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.\r\n *\r\n * @public\r\n */\r\nvar AutoScroll = /** @class */ (function () {\r\n    function AutoScroll(element) {\r\n        this._events = new EventGroup(this);\r\n        this._scrollableParent = findScrollableParent(element);\r\n        this._incrementScroll = this._incrementScroll.bind(this);\r\n        this._scrollRect = getRect(this._scrollableParent);\r\n        // tslint:disable-next-line:no-any\r\n        if (this._scrollableParent === window) {\r\n            this._scrollableParent = document.body;\r\n        }\r\n        if (this._scrollableParent) {\r\n            this._events.on(window, 'mousemove', this._onMouseMove, true);\r\n            this._events.on(window, 'touchmove', this._onTouchMove, true);\r\n        }\r\n    }\r\n    AutoScroll.prototype.dispose = function () {\r\n        this._events.dispose();\r\n        this._stopScroll();\r\n    };\r\n    AutoScroll.prototype._onMouseMove = function (ev) {\r\n        this._computeScrollVelocity(ev.clientY);\r\n    };\r\n    AutoScroll.prototype._onTouchMove = function (ev) {\r\n        if (ev.touches.length > 0) {\r\n            this._computeScrollVelocity(ev.touches[0].clientY);\r\n        }\r\n    };\r\n    AutoScroll.prototype._computeScrollVelocity = function (clientY) {\r\n        if (!this._scrollRect) {\r\n            return;\r\n        }\r\n        var scrollRectTop = this._scrollRect.top;\r\n        var scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;\r\n        if (clientY < scrollRectTop + SCROLL_GUTTER_HEIGHT) {\r\n            this._scrollVelocity = Math.max(-MAX_SCROLL_VELOCITY, -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else if (clientY > scrollClientBottom) {\r\n            this._scrollVelocity = Math.min(MAX_SCROLL_VELOCITY, MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else {\r\n            this._scrollVelocity = 0;\r\n        }\r\n        if (this._scrollVelocity) {\r\n            this._startScroll();\r\n        }\r\n        else {\r\n            this._stopScroll();\r\n        }\r\n    };\r\n    AutoScroll.prototype._startScroll = function () {\r\n        if (!this._timeoutId) {\r\n            this._incrementScroll();\r\n        }\r\n    };\r\n    AutoScroll.prototype._incrementScroll = function () {\r\n        if (this._scrollableParent) {\r\n            this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);\r\n        }\r\n        this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);\r\n    };\r\n    AutoScroll.prototype._stopScroll = function () {\r\n        if (this._timeoutId) {\r\n            clearTimeout(this._timeoutId);\r\n            delete this._timeoutId;\r\n        }\r\n    };\r\n    return AutoScroll;\r\n}());\r\nexport { AutoScroll };\r\n//# sourceMappingURL=AutoScroll.js.map","var now = function () { return (typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now()); };\r\nvar RESET_INTERVAL = 3 * 60 * 1000; // auto reset every 3 minutes\r\n/**\r\n * Performance helper class for measuring things.\r\n *\r\n * @public\r\n */\r\nvar FabricPerformance = /** @class */ (function () {\r\n    function FabricPerformance() {\r\n    }\r\n    /**\r\n     * Measures execution time of the given syncronous function. If the same logic is executed multiple times,\r\n     * each individual measurement will be collected as well the overall numbers.\r\n     * @param name - The name of this measurement\r\n     * @param func - The logic to be measured for execution time\r\n     */\r\n    FabricPerformance.measure = function (name, func) {\r\n        if (FabricPerformance._timeoutId) {\r\n            FabricPerformance.setPeriodicReset();\r\n        }\r\n        var start = now();\r\n        func();\r\n        var end = now();\r\n        var measurement = FabricPerformance.summary[name] || {\r\n            totalDuration: 0,\r\n            count: 0,\r\n            all: []\r\n        };\r\n        var duration = end - start;\r\n        measurement.totalDuration += duration;\r\n        measurement.count++;\r\n        measurement.all.push({\r\n            duration: duration,\r\n            timeStamp: end\r\n        });\r\n        FabricPerformance.summary[name] = measurement;\r\n    };\r\n    FabricPerformance.reset = function () {\r\n        FabricPerformance.summary = {};\r\n        clearTimeout(FabricPerformance._timeoutId);\r\n        FabricPerformance._timeoutId = NaN;\r\n    };\r\n    FabricPerformance.setPeriodicReset = function () {\r\n        FabricPerformance._timeoutId = setTimeout(function () { return FabricPerformance.reset(); }, RESET_INTERVAL);\r\n    };\r\n    FabricPerformance.summary = {};\r\n    return FabricPerformance;\r\n}());\r\nexport { FabricPerformance };\r\n//# sourceMappingURL=FabricPerformance.js.map","/**\r\n * asAsync - a HOC for async loading components.\r\n *\r\n * Usage:\r\n *\r\n * const AsyncDialog = asAsync({\r\n *   load: () => import('Dialog').then(result => result.default),\r\n * });\r\n *\r\n * React.render(domElement, <AsyncDialog asyncPlaceholder={ () => <Spinner/> } { ...dialogProps } />);\r\n *\r\n * Note the `asyncPlaceholder` prop will be respected when rendering the async component and it hasn't\r\n * been loaded yet.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * If possible, use a WeakMap to maintain a cache of loaded components.\r\n * This can be used to synchronously render components that have already been loaded,\r\n * rather than having to wait for at least one async tick.\r\n */\r\nvar _syncModuleCache = typeof WeakMap !== 'undefined'\r\n    ? // tslint:disable-next-line:no-any\r\n        new WeakMap()\r\n    : undefined;\r\n/**\r\n * Produces a component which internally loads the target component before first mount.\r\n * The component passes all props through to the loaded component.\r\n *\r\n * This overload accepts a module with a default export for the component.\r\n */\r\nexport function asAsync(options) {\r\n    var Async = /** @class */ (function (_super) {\r\n        tslib_1.__extends(Async, _super);\r\n        function Async() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.state = {\r\n                Component: _syncModuleCache ? _syncModuleCache.get(options.load) : undefined\r\n            };\r\n            return _this;\r\n        }\r\n        Async.prototype.render = function () {\r\n            // Typescript issue: the rest can't be pulled without the any cast, as TypeScript fails with rest on generics.\r\n            // tslint:disable-next-line:no-any\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, Placeholder = _a.asyncPlaceholder, rest = tslib_1.__rest(_a, [\"forwardedRef\", \"asyncPlaceholder\"]);\r\n            var Component = this.state.Component;\r\n            return Component ? React.createElement(Component, tslib_1.__assign({ ref: forwardedRef }, rest)) : Placeholder ? React.createElement(Placeholder, null) : null;\r\n        };\r\n        Async.prototype.componentDidMount = function () {\r\n            var _this = this;\r\n            var Component = this.state.Component;\r\n            if (!Component) {\r\n                options\r\n                    .load()\r\n                    .then(function (LoadedComponent) {\r\n                    if (LoadedComponent) {\r\n                        // Cache component for future reference.\r\n                        _syncModuleCache && _syncModuleCache.set(options.load, LoadedComponent);\r\n                        // Set state.\r\n                        _this.setState({\r\n                            Component: LoadedComponent\r\n                        }, options.onLoad);\r\n                    }\r\n                })\r\n                    .catch(options.onError);\r\n            }\r\n        };\r\n        return Async;\r\n    }(React.Component));\r\n    return React.forwardRef(function (props, ref) { return (React.createElement(Async, tslib_1.__assign({}, props, { forwardedRef: ref }))); });\r\n}\r\n//# sourceMappingURL=asAsync.js.map","/**\r\n * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.\r\n *\r\n * @public\r\n */\r\nexport function assertNever(x) {\r\n    throw new Error('Unexpected object: ' + x);\r\n}\r\n//# sourceMappingURL=assertNever.js.map","/**\r\n * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being \"bound\" to the this pointer\r\n * so that they can be used in scenarios that simply require a function callback.\r\n * @deprecated This has been deprecated in favor of using arrow function properties\r\n */\r\nexport function autobind(\r\n// tslint:disable-next-line:no-any\r\ntarget, key, descriptor) {\r\n    var fn = descriptor.value;\r\n    var defining = false;\r\n    return {\r\n        configurable: true,\r\n        get: function () {\r\n            if (defining || (fn && this === fn.prototype) || this.hasOwnProperty(key)) {\r\n                return fn;\r\n            }\r\n            // Bind method only once, and update the property to return the bound value from now on\r\n            var fnBound = fn && fn.bind(this);\r\n            defining = true;\r\n            Object.defineProperty(this, key, {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: true,\r\n                value: fnBound\r\n            });\r\n            defining = false;\r\n            return fnBound;\r\n        },\r\n        // tslint:disable-next-line:no-any\r\n        set: function (newValue) {\r\n            Object.defineProperty(this, key, {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: true,\r\n                value: newValue\r\n            });\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=autobind.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * Merge new and old settings, giving priority to new settings.\r\n * New settings is optional in which case oldSettings is returned as-is.\r\n * @param oldSettings - Old settings to fall back to.\r\n * @param newSettings - New settings that will be merged over oldSettings.\r\n * @returns Merged settings.\r\n */\r\nexport function mergeSettings(oldSettings, newSettings) {\r\n    if (oldSettings === void 0) { oldSettings = {}; }\r\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _settingsMergeWith(newSettings);\r\n    return mergeSettingsWith(oldSettings);\r\n}\r\nexport function mergeScopedSettings(oldSettings, newSettings) {\r\n    if (oldSettings === void 0) { oldSettings = {}; }\r\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _scopedSettingsMergeWith(newSettings);\r\n    return mergeSettingsWith(oldSettings);\r\n}\r\nfunction _isSettingsFunction(settings) {\r\n    return typeof settings === 'function';\r\n}\r\nfunction _settingsMergeWith(newSettings) {\r\n    return function (settings) { return (newSettings ? tslib_1.__assign({}, settings, newSettings) : settings); };\r\n}\r\nfunction _scopedSettingsMergeWith(scopedSettingsFromProps) {\r\n    if (scopedSettingsFromProps === void 0) { scopedSettingsFromProps = {}; }\r\n    return function (oldScopedSettings) {\r\n        var newScopedSettings = tslib_1.__assign({}, oldScopedSettings);\r\n        for (var scopeName in scopedSettingsFromProps) {\r\n            if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {\r\n                newScopedSettings[scopeName] = tslib_1.__assign({}, oldScopedSettings[scopeName], scopedSettingsFromProps[scopeName]);\r\n            }\r\n        }\r\n        return newScopedSettings;\r\n    };\r\n}\r\n//# sourceMappingURL=mergeSettings.js.map","import { mergeSettings, mergeScopedSettings } from './mergeSettings';\r\n/**\r\n * Merge props and customizations giving priority to props over context.\r\n * NOTE: This function will always perform multiple merge operations. Use with caution.\r\n * @param props - New settings to merge in.\r\n * @param parentContext - Context containing current settings.\r\n * @returns Merged customizations.\r\n */\r\nexport function mergeCustomizations(props, parentContext) {\r\n    var _a = (parentContext || {}).customizations, customizations = _a === void 0 ? { settings: {}, scopedSettings: {} } : _a;\r\n    return {\r\n        customizations: {\r\n            settings: mergeSettings(customizations.settings, props.settings),\r\n            scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\r\n            inCustomizerContext: true\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=mergeCustomizations.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent } from '../BaseComponent';\r\nimport { Customizations } from './Customizations';\r\nimport { CustomizerContext } from './CustomizerContext';\r\nimport { mergeCustomizations } from './mergeCustomizations';\r\n/**\r\n * The Customizer component allows for default props to be mixed into components which\r\n * are decorated with the customizable() decorator, or use the styled HOC. This enables\r\n * injection scenarios like:\r\n *\r\n * 1. render svg icons instead of the icon font within all buttons\r\n * 2. inject a custom theme object into a component\r\n *\r\n * Props are provided via the settings prop which should be one of the following:\r\n * - A json map which contains 1 or more name/value pairs representing injectable props.\r\n * - A function that receives the current settings and returns the new ones that apply to the scope\r\n *\r\n * @public\r\n */\r\nvar Customizer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Customizer, _super);\r\n    function Customizer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._changeCount = 0;\r\n        _this._onCustomizationChange = function () { return _this.forceUpdate(); };\r\n        return _this;\r\n    }\r\n    Customizer.prototype.componentDidMount = function () {\r\n        Customizations.observe(this._onCustomizationChange);\r\n    };\r\n    Customizer.prototype.componentWillUnmount = function () {\r\n        Customizations.unobserve(this._onCustomizationChange);\r\n    };\r\n    Customizer.prototype.render = function () {\r\n        var _this = this;\r\n        var contextTransform = this.props.contextTransform;\r\n        return (React.createElement(CustomizerContext.Consumer, null, function (parentContext) {\r\n            var newContext = mergeCustomizations(_this.props, parentContext);\r\n            if (contextTransform) {\r\n                newContext = contextTransform(newContext);\r\n            }\r\n            return React.createElement(CustomizerContext.Provider, { value: newContext }, _this.props.children);\r\n        }));\r\n    };\r\n    return Customizer;\r\n}(BaseComponent));\r\nexport { Customizer };\r\n//# sourceMappingURL=Customizer.js.map","import { isVirtualElement } from './isVirtualElement';\r\n/**\r\n * Gets the elements which are child elements of the given element.\r\n * If `allowVirtualChildren` is `true`, this method enumerates virtual child elements\r\n * after the original children.\r\n * @param parent - The element to get the children of.\r\n * @param allowVirtualChildren - true if the method should enumerate virtual child elements.\r\n */\r\nexport function getChildren(parent, allowVirtualChildren) {\r\n    if (allowVirtualChildren === void 0) { allowVirtualChildren = true; }\r\n    var children = [];\r\n    if (parent) {\r\n        for (var i = 0; i < parent.children.length; i++) {\r\n            children.push(parent.children.item(i));\r\n        }\r\n        if (allowVirtualChildren && isVirtualElement(parent)) {\r\n            children.push.apply(children, parent._virtual.children);\r\n        }\r\n    }\r\n    return children;\r\n}\r\n//# sourceMappingURL=getChildren.js.map","/**\r\n * Regular expression matching characters to ignore when calculating the initials.\r\n * The first part matches characters within parenthesis, including the parenthesis.\r\n * The second part matches special ASCII characters except space, plus some unicode special characters.\r\n */\r\nvar UNWANTED_CHARS_REGEX = /\\([^)]*\\)|[\\0-\\u001F\\!-/:-@\\[-`\\{-\\u00BF\\u0250-\\u036F\\uD800-\\uFFFF]/g;\r\n/**\r\n * Regular expression matching phone numbers. Applied after chars matching UNWANTED_CHARS_REGEX have been removed\r\n * and number has been trimmed for whitespaces\r\n */\r\nvar PHONENUMBER_REGEX = /^\\d+[\\d\\s]*(:?ext|x|)\\s*\\d+$/i;\r\n/** Regular expression matching one or more spaces. */\r\nvar MULTIPLE_WHITESPACES_REGEX = /\\s+/g;\r\n/**\r\n * Regular expression matching languages for which we currently don't support initials.\r\n * Arabic:   Arabic, Arabic Supplement, Arabic Extended-A.\r\n * Korean:   Hangul Jamo, Hangul Compatibility Jamo, Hangul Jamo Extended-A, Hangul Syllables, Hangul Jamo Extended-B.\r\n * Japanese: Hiragana, Katakana.\r\n * CJK:      CJK Unified Ideographs Extension A, CJK Unified Ideographs, CJK Compatibility Ideographs, CJK Unified Ideographs Extension B\r\n */\r\n/* tslint:disable:max-line-length */\r\nvar UNSUPPORTED_TEXT_REGEX = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\u1100-\\u11FF\\u3130-\\u318F\\uA960-\\uA97F\\uAC00-\\uD7AF\\uD7B0-\\uD7FF\\u3040-\\u309F\\u30A0-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD869][\\uDC00-\\uDED6]/;\r\n/* tslint:enable:max-line-length */\r\nfunction getInitialsLatin(displayName, isRtl) {\r\n    var initials = '';\r\n    var splits = displayName.split(' ');\r\n    if (splits.length === 2) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n        initials += splits[1].charAt(0).toUpperCase();\r\n    }\r\n    else if (splits.length === 3) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n        initials += splits[2].charAt(0).toUpperCase();\r\n    }\r\n    else if (splits.length !== 0) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n    }\r\n    if (isRtl && initials.length > 1) {\r\n        return initials.charAt(1) + initials.charAt(0);\r\n    }\r\n    return initials;\r\n}\r\nfunction cleanupDisplayName(displayName) {\r\n    displayName = displayName.replace(UNWANTED_CHARS_REGEX, '');\r\n    displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, ' ');\r\n    displayName = displayName.trim();\r\n    return displayName;\r\n}\r\n/**\r\n * Get (up to 2 characters) initials based on display name of the persona.\r\n *\r\n * @public\r\n */\r\nexport function getInitials(displayName, isRtl, allowPhoneInitials) {\r\n    if (!displayName) {\r\n        return '';\r\n    }\r\n    displayName = cleanupDisplayName(displayName);\r\n    // For names containing CJK characters, and phone numbers, we don't display initials\r\n    if (UNSUPPORTED_TEXT_REGEX.test(displayName) || (!allowPhoneInitials && PHONENUMBER_REGEX.test(displayName))) {\r\n        return '';\r\n    }\r\n    return getInitialsLatin(displayName, isRtl);\r\n}\r\n//# sourceMappingURL=initials.js.map","/**\r\n * Determines the distance between two points.\r\n *\r\n * @public\r\n */\r\nexport function getDistanceBetweenPoints(point1, point2) {\r\n    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\r\n    return distance;\r\n}\r\n/**\r\n * Produces a proportionally-scaled version of an input content size when fit to a bounding size.\r\n * Given a `contentSize` and a `boundsSize`, this function scales `contentSize` proportionally\r\n * using either `contain` or `cover` fit behaviors.\r\n * Use this function to pre-calculate the layout for the CSS `object-fit` and `background-fit` behaviors.\r\n * With `contain`, the output size must be the largest it can be while completely within the `boundsSize`.\r\n * With `cover`, the output size must be the smallest it can be while completely around the `boundsSize`.\r\n * By default, there is a `maxScale` value of 1, which prevents the `contentSize` from being scaled larger.\r\n *\r\n * @param options - the options for the bounds fit operation\r\n */\r\nexport function fitContentToBounds(options) {\r\n    var contentSize = options.contentSize, boundsSize = options.boundsSize, _a = options.mode, mode = _a === void 0 ? 'contain' : _a, _b = options.maxScale, maxScale = _b === void 0 ? 1 : _b;\r\n    var contentAspectRatio = contentSize.width / contentSize.height;\r\n    var boundsAspectRatio = boundsSize.width / boundsSize.height;\r\n    var scale;\r\n    if (mode === 'contain' ? contentAspectRatio > boundsAspectRatio : contentAspectRatio < boundsAspectRatio) {\r\n        scale = boundsSize.width / contentSize.width;\r\n    }\r\n    else {\r\n        scale = boundsSize.height / contentSize.height;\r\n    }\r\n    var finalScale = Math.min(maxScale, scale);\r\n    return {\r\n        width: contentSize.width * finalScale,\r\n        height: contentSize.height * finalScale\r\n    };\r\n}\r\n/**\r\n * Calculates a number's precision based on the number of trailing\r\n * zeros if the number does not have a decimal indicated by a negative\r\n * precision. Otherwise, it calculates the number of digits after\r\n * the decimal point indicated by a positive precision.\r\n * @param value - the value to determine the precision of\r\n */\r\nexport function calculatePrecision(value) {\r\n    /**\r\n     * Group 1:\r\n     * [1-9]([0]+$) matches trailing zeros\r\n     * Group 2:\r\n     * \\.([0-9]*) matches all digits after a decimal point.\r\n     */\r\n    var groups = /[1-9]([0]+$)|\\.([0-9]*)/.exec(String(value));\r\n    if (!groups) {\r\n        return 0;\r\n    }\r\n    if (groups[1]) {\r\n        return -groups[1].length;\r\n    }\r\n    if (groups[2]) {\r\n        return groups[2].length;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Rounds a number to a certain level of precision. Accepts negative precision.\r\n * @param value - The value that is being rounded.\r\n * @param precision - The number of decimal places to round the number to\r\n */\r\nexport function precisionRound(value, precision, base) {\r\n    if (base === void 0) { base = 10; }\r\n    var exp = Math.pow(base, precision);\r\n    return Math.round(value * exp) / exp;\r\n}\r\n//# sourceMappingURL=math.js.map","var _baseUrl = '';\r\n/** Sets the current base url used for fetching images. */\r\nexport function getResourceUrl(url) {\r\n    return _baseUrl + url;\r\n}\r\n/** Gets the current base url used for fetching images. */\r\nexport function setBaseUrl(baseUrl) {\r\n    _baseUrl = baseUrl;\r\n}\r\n//# sourceMappingURL=resources.js.map","// Regex that finds { and } so they can be removed on a lookup for string format\r\nvar FORMAT_ARGS_REGEX = /[\\{\\}]/g;\r\n// Regex that finds {#} so it can be replaced by the arguments in string format\r\nvar FORMAT_REGEX = /\\{\\d+\\}/g;\r\n/**\r\n * String format method, used for scenarios where at runtime you\r\n * need to evaluate a formatted string given a tokenized string. This\r\n * usually only is needed in localization scenarios.\r\n\r\n * @example\r\n * ```tsx\r\n * \"I love {0} every {1}\".format(\"CXP\")\r\n * ```\r\n * will result in a Debug Exception.\r\n *\r\n * @public\r\n */\r\n// tslint:disable-next-line:no-any\r\nexport function format(s) {\r\n    'use strict';\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    var args = values;\r\n    // Callback match function\r\n    function replace_func(match) {\r\n        // looks up in the args\r\n        // tslint:disable-next-line:no-any\r\n        var replacement = args[match.replace(FORMAT_ARGS_REGEX, '')];\r\n        // catches undefined in nondebug and null in debug and nondebug\r\n        if (replacement === null || replacement === undefined) {\r\n            replacement = '';\r\n        }\r\n        return replacement;\r\n    }\r\n    return s.replace(FORMAT_REGEX, replace_func);\r\n}\r\n//# sourceMappingURL=string.js.map","// @uifabric/utilities@6.34.0\r\n// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.\r\nimport { setVersion } from '@uifabric/set-version';\r\nsetVersion('@uifabric/utilities', '6.34.0');\r\n//# sourceMappingURL=version.js.map","export * from './Async';\r\nexport * from './AutoScroll';\r\nexport * from './BaseComponent';\r\nexport * from './Context';\r\nexport * from './DelayedRender';\r\nexport * from './EventGroup';\r\nexport * from './FabricPerformance';\r\nexport * from './GlobalSettings';\r\nexport * from './KeyCodes';\r\nexport * from './Rectangle';\r\nexport * from './appendFunction';\r\nexport * from './aria';\r\nexport * from './array';\r\nexport * from './asAsync';\r\nexport * from './assertNever';\r\nexport * from './autobind';\r\nexport * from './classNamesFunction';\r\nexport * from './createRef';\r\nexport * from './css';\r\nexport * from './customizations/Customizations';\r\nexport * from './customizations/Customizer';\r\nexport * from './customizations/CustomizerContext';\r\nexport * from './customizations/customizable';\r\nexport * from './customizations/mergeCustomizations';\r\nexport * from './customizations/mergeSettings';\r\nexport * from './dom';\r\nexport * from './extendComponent';\r\nexport * from './focus';\r\nexport * from './hoist';\r\nexport * from './hoistStatics';\r\nexport * from './initializeComponentRef';\r\nexport * from './initializeFocusRects';\r\nexport * from './initials';\r\nexport * from './keyboard';\r\nexport * from './language';\r\nexport * from './math';\r\nexport * from './memoize';\r\nexport * from './merge';\r\nexport * from './mobileDetector';\r\nexport * from './object';\r\nexport * from './osDetector';\r\nexport * from './overflow';\r\nexport * from './properties';\r\nexport * from './resources';\r\nexport * from './rtl';\r\nexport * from './scroll';\r\nexport * from './string';\r\nexport * from './styled';\r\nexport * from './warn';\r\nexport { setSSR } from './dom/setSSR';\r\nimport './version';\r\n//# sourceMappingURL=index.js.map","import { setVersion } from './setVersion';\r\nexport { setVersion };\r\nsetVersion('@uifabric/set-version', '6.0.0');\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar React = require(\"react\");\r\nvar BaseDecorator_1 = require(\"./BaseDecorator\");\r\nvar Utilities_1 = require(\"../../Utilities\");\r\nvar ResponsiveMode;\r\n(function (ResponsiveMode) {\r\n    ResponsiveMode[ResponsiveMode[\"small\"] = 0] = \"small\";\r\n    ResponsiveMode[ResponsiveMode[\"medium\"] = 1] = \"medium\";\r\n    ResponsiveMode[ResponsiveMode[\"large\"] = 2] = \"large\";\r\n    ResponsiveMode[ResponsiveMode[\"xLarge\"] = 3] = \"xLarge\";\r\n    ResponsiveMode[ResponsiveMode[\"xxLarge\"] = 4] = \"xxLarge\";\r\n    ResponsiveMode[ResponsiveMode[\"xxxLarge\"] = 5] = \"xxxLarge\";\r\n})(ResponsiveMode = exports.ResponsiveMode || (exports.ResponsiveMode = {}));\r\nvar RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\r\nvar _defaultMode;\r\n/**\r\n * Allows a server rendered scenario to provide a default responsive mode.\r\n */\r\nfunction setResponsiveMode(responsiveMode) {\r\n    _defaultMode = responsiveMode;\r\n}\r\nexports.setResponsiveMode = setResponsiveMode;\r\nfunction withResponsiveMode(ComposedComponent) {\r\n    var resultClass = /** @class */ (function (_super) {\r\n        tslib_1.__extends(WithResponsiveMode, _super);\r\n        function WithResponsiveMode(props) {\r\n            var _this = _super.call(this, props) || this;\r\n            _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\r\n            _this.state = {\r\n                responsiveMode: _this._getResponsiveMode()\r\n            };\r\n            return _this;\r\n        }\r\n        WithResponsiveMode.prototype.componentDidMount = function () {\r\n            var _this = this;\r\n            this._events.on(window, 'resize', function () {\r\n                var responsiveMode = _this._getResponsiveMode();\r\n                if (responsiveMode !== _this.state.responsiveMode) {\r\n                    _this.setState({\r\n                        responsiveMode: responsiveMode\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        WithResponsiveMode.prototype.componentWillUnmount = function () {\r\n            this._events.dispose();\r\n        };\r\n        WithResponsiveMode.prototype.render = function () {\r\n            var responsiveMode = this.state.responsiveMode;\r\n            return React.createElement(ComposedComponent, tslib_1.__assign({ ref: this._updateComposedComponentRef, responsiveMode: responsiveMode }, this.props));\r\n        };\r\n        WithResponsiveMode.prototype._getResponsiveMode = function () {\r\n            var responsiveMode = ResponsiveMode.small;\r\n            var win = Utilities_1.getWindow();\r\n            if (typeof win !== 'undefined') {\r\n                try {\r\n                    while (win.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\r\n                        responsiveMode++;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\r\n                    responsiveMode = ResponsiveMode.large;\r\n                }\r\n            }\r\n            else {\r\n                if (_defaultMode !== undefined) {\r\n                    responsiveMode = _defaultMode;\r\n                }\r\n                else {\r\n                    throw new Error('Content was rendered in a server environment without providing a default responsive mode. ' +\r\n                        'Call setResponsiveMode to define what the responsive mode is.');\r\n                }\r\n            }\r\n            return responsiveMode;\r\n        };\r\n        return WithResponsiveMode;\r\n    }(BaseDecorator_1.BaseDecorator));\r\n    return Utilities_1.hoistStatics(ComposedComponent, resultClass);\r\n}\r\nexports.withResponsiveMode = withResponsiveMode;\r\n//# sourceMappingURL=withResponsiveMode.js.map","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, Route } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    if (this.props.onClick) this.props.onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      location = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n      var isActive = !!(isActiveProp ? isActiveProp(match, location) : match);\n      var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n      var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n      return React.createElement(Link, _extends({\n        \"aria-current\": isActive && ariaCurrent || null,\n        className: className,\n        style: style,\n        to: to\n      }, rest));\n    }\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: Route.propTypes.exact,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: Route.propTypes.strict,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };\n","export var TooltipDelay;\r\n(function (TooltipDelay) {\r\n    TooltipDelay[TooltipDelay[\"zero\"] = 0] = \"zero\";\r\n    TooltipDelay[TooltipDelay[\"medium\"] = 1] = \"medium\";\r\n    TooltipDelay[TooltipDelay[\"long\"] = 2] = \"long\";\r\n})(TooltipDelay || (TooltipDelay = {}));\r\n//# sourceMappingURL=Tooltip.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * Utility component for delaying the render of a child component after a given delay. This component\r\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\r\n * if necessary.\r\n *\r\n * @public\r\n */\r\nvar DelayedRender = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DelayedRender, _super);\r\n    function DelayedRender(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            isRendered: false\r\n        };\r\n        return _this;\r\n    }\r\n    DelayedRender.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        var delay = this.props.delay;\r\n        this._timeoutId = setTimeout(function () {\r\n            _this.setState({\r\n                isRendered: true\r\n            });\r\n        }, delay);\r\n    };\r\n    DelayedRender.prototype.componentWillUnmount = function () {\r\n        if (this._timeoutId) {\r\n            clearTimeout(this._timeoutId);\r\n        }\r\n    };\r\n    DelayedRender.prototype.render = function () {\r\n        return this.state.isRendered ? React.Children.only(this.props.children) : null;\r\n    };\r\n    DelayedRender.defaultProps = {\r\n        delay: 0\r\n    };\r\n    return DelayedRender;\r\n}(React.Component));\r\nexport { DelayedRender };\r\n//# sourceMappingURL=DelayedRender.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nrequire(\"./version\");\r\ntslib_1.__exportStar(require(\"@uifabric/utilities\"), exports);\r\n//# sourceMappingURL=Utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * @deprecated This function uses the legacy context API, which is deprecated and should not be\r\n * used in new code. Please migrate to the new context API. https://reactjs.org/docs/context.html\r\n */\r\nexport function provideContext(contextTypes, mapPropsToContext) {\r\n    var Provider = /** @class */ (function (_super) {\r\n        tslib_1.__extends(Provider, _super);\r\n        function Provider() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        Provider.prototype.getChildContext = function () {\r\n            return mapPropsToContext(this.props);\r\n        };\r\n        Provider.prototype.render = function () {\r\n            return React.Children.only(this.props.children);\r\n        };\r\n        Provider.childContextTypes = contextTypes;\r\n        return Provider;\r\n    }(React.Component));\r\n    return Provider;\r\n}\r\n//# sourceMappingURL=Context.js.map","/**\r\n * Detects whether an element's content has horizontal overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasHorizontalOverflow(element) {\r\n    return element.clientWidth < element.scrollWidth;\r\n}\r\n/**\r\n * Detects whether an element's content has vertical overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasVerticalOverflow(element) {\r\n    return element.clientHeight < element.scrollHeight;\r\n}\r\n/**\r\n * Detects whether an element's content has overflow in any direction\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasOverflow(element) {\r\n    return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\r\n}\r\n//# sourceMappingURL=overflow.js.map","import { concatStyleSets, FontWeights } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\r\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\r\nvar DEFAULT_BUTTON_HEIGHT = '32px';\r\nvar DEFAULT_BUTTON_MINWIDTH = '80px';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var splitButtonStyles = getSplitButtonStyles(theme);\r\n    var defaultButtonStyles = {\r\n        root: {\r\n            minWidth: DEFAULT_BUTTON_MINWIDTH,\r\n            height: DEFAULT_BUTTON_HEIGHT\r\n        },\r\n        label: {\r\n            fontWeight: FontWeights.semibold\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), splitButtonStyles, customStyles);\r\n});\r\n//# sourceMappingURL=DefaultButton.styles.js.map","import { HighContrastSelector } from '../../Styling';\r\nexport function standardStyles(theme) {\r\n    var s = theme.semanticColors;\r\n    var buttonBackground = s.buttonBackground;\r\n    var buttonBackgroundChecked = s.buttonBackgroundChecked;\r\n    var buttonBackgroundHovered = s.buttonBackgroundHovered;\r\n    var buttonText = s.buttonText;\r\n    var buttonTextHovered = s.buttonTextHovered;\r\n    var buttonTextChecked = s.buttonTextChecked;\r\n    var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\r\n    return {\r\n        root: {\r\n            backgroundColor: buttonBackground,\r\n            color: buttonText\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: buttonBackgroundHovered,\r\n            color: buttonTextHovered,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    borderColor: 'Highlight',\r\n                    color: 'Highlight'\r\n                },\r\n                _a)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.neutralLight,\r\n            color: buttonTextCheckedHovered\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _b)\r\n        },\r\n        splitButtonMenuButton: {\r\n            color: theme.palette.white,\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLight,\r\n                    selectors: (_c = {},\r\n                        _c[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _c)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.neutralTertiaryAlt\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.themePrimary\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.neutralLight\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.neutralPrimary\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        }\r\n    };\r\n    var _a, _b, _c;\r\n}\r\nexport function primaryStyles(theme) {\r\n    return {\r\n        root: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'WindowText',\r\n                    MsHighContrastAdjust: 'none'\r\n                },\r\n                _a)\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: theme.palette.themeDarkAlt,\r\n            color: theme.palette.white,\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'Highlight'\r\n                },\r\n                _b)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white,\r\n            selectors: (_c = {},\r\n                _c[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'WindowText',\r\n                    MsHighContrastAdjust: 'none'\r\n                },\r\n                _c)\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white\r\n        },\r\n        rootDisabled: {\r\n            selectors: (_d = {},\r\n                _d[HighContrastSelector] = {\r\n                    color: 'GrayText',\r\n                    borderColor: 'GrayText',\r\n                    backgroundColor: 'Window'\r\n                },\r\n                _d)\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_e = {},\r\n                _e[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _e)\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.themeLighter\r\n        },\r\n        splitButtonMenuButton: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.themeDark,\r\n                    selectors: (_f = {},\r\n                        _f[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _f)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.themeDark\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.themeDark\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.white\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f;\r\n}\r\n//# sourceMappingURL=ButtonThemes.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './DefaultButton.styles';\r\nvar DefaultButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DefaultButton, _super);\r\n    function DefaultButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    DefaultButton.prototype.render = function () {\r\n        var _a = this.props, _b = _a.primary, primary = _b === void 0 ? false : _b, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: primary ? 'ms-Button--primary' : 'ms-Button--default', styles: getStyles(theme, styles, primary), onRenderDescription: nullRender })));\r\n    };\r\n    DefaultButton = tslib_1.__decorate([\r\n        customizable('DefaultButton', ['theme', 'styles'], true)\r\n    ], DefaultButton);\r\n    return DefaultButton;\r\n}(BaseComponent));\r\nexport { DefaultButton };\r\n//# sourceMappingURL=DefaultButton.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utilities_1 = require(\"../../Utilities\");\r\nvar BaseDecorator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BaseDecorator, _super);\r\n    function BaseDecorator(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // tslint:disable-next-line:typedef\r\n        _this._skipComponentRefResolution = true;\r\n        _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates the ref to the component composed by the decorator, which will also take care of hoisting\r\n     * (and unhoisting as appropriate) methods from said component.\r\n     *\r\n     * Pass this method as the argument to the 'ref' property of the composed component.\r\n     */\r\n    BaseDecorator.prototype._updateComposedComponentRef = function (composedComponentInstance) {\r\n        this._composedComponentInstance = composedComponentInstance;\r\n        if (composedComponentInstance) {\r\n            this._hoisted = Utilities_1.hoistMethods(this, composedComponentInstance);\r\n        }\r\n        else if (this._hoisted) {\r\n            Utilities_1.unhoistMethods(this, this._hoisted);\r\n        }\r\n    };\r\n    return BaseDecorator;\r\n}(Utilities_1.BaseComponent));\r\nexports.BaseDecorator = BaseDecorator;\r\n//# sourceMappingURL=BaseDecorator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// office-ui-fabric-react@6.152.1\r\n// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.\r\nvar set_version_1 = require(\"@uifabric/set-version\");\r\nset_version_1.setVersion('office-ui-fabric-react', '6.152.1');\r\n//# sourceMappingURL=version.js.map","// This file mimics styles and mixins from _General.Mixins.scss\r\nexport var normalize = {\r\n    boxShadow: 'none',\r\n    margin: 0,\r\n    padding: 0,\r\n    boxSizing: 'border-box'\r\n};\r\nexport var noWrap = {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap'\r\n};\r\n//# sourceMappingURL=GeneralStyles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\r\nvar PrimaryButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PrimaryButton, _super);\r\n    function PrimaryButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    PrimaryButton.prototype.render = function () {\r\n        return React.createElement(DefaultButton, tslib_1.__assign({}, this.props, { primary: true, onRenderDescription: nullRender }));\r\n    };\r\n    PrimaryButton = tslib_1.__decorate([\r\n        customizable('PrimaryButton', ['theme', 'styles'], true)\r\n    ], PrimaryButton);\r\n    return PrimaryButton;\r\n}(BaseComponent));\r\nexport { PrimaryButton };\r\n//# sourceMappingURL=PrimaryButton.js.map","export var SelectableOptionMenuItemType;\r\n(function (SelectableOptionMenuItemType) {\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Normal\"] = 0] = \"Normal\";\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Divider\"] = 1] = \"Divider\";\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Header\"] = 2] = \"Header\";\r\n})(SelectableOptionMenuItemType || (SelectableOptionMenuItemType = {}));\r\n//# sourceMappingURL=SelectableOption.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, getId, classNamesFunction, mergeAriaAttributeValues } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { KeytipData } from '../../KeytipData';\r\nvar getClassNames = classNamesFunction();\r\nvar CheckboxBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CheckboxBase, _super);\r\n    /**\r\n     * Initialize a new instance of the Checkbox\r\n     * @param props - Props for the component\r\n     * @param context - Context or initial state for the base component.\r\n     */\r\n    function CheckboxBase(props, context) {\r\n        var _this = _super.call(this, props, context) || this;\r\n        _this._checkBox = React.createRef();\r\n        _this._onFocus = function (ev) {\r\n            var inputProps = _this.props.inputProps;\r\n            if (inputProps && inputProps.onFocus) {\r\n                inputProps.onFocus(ev);\r\n            }\r\n        };\r\n        _this._onBlur = function (ev) {\r\n            var inputProps = _this.props.inputProps;\r\n            if (inputProps && inputProps.onBlur) {\r\n                inputProps.onBlur(ev);\r\n            }\r\n        };\r\n        _this._onChange = function (ev) {\r\n            var _a = _this.props, disabled = _a.disabled, onChange = _a.onChange;\r\n            var isChecked = _this.state.isChecked;\r\n            if (!disabled) {\r\n                if (onChange) {\r\n                    onChange(ev, !isChecked);\r\n                }\r\n                if (_this.props.checked === undefined) {\r\n                    _this.setState({ isChecked: !isChecked });\r\n                }\r\n            }\r\n        };\r\n        _this._onRenderLabel = function (props) {\r\n            var label = props.label;\r\n            return label ? React.createElement(\"span\", { className: _this._classNames.text }, label) : null;\r\n        };\r\n        _this._warnMutuallyExclusive({\r\n            checked: 'defaultChecked'\r\n        });\r\n        _this._id = _this.props.id || getId('checkbox-');\r\n        _this.state = {\r\n            isChecked: !!(props.checked !== undefined ? props.checked : props.defaultChecked)\r\n        };\r\n        return _this;\r\n    }\r\n    CheckboxBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.checked !== undefined) {\r\n            this.setState({\r\n                isChecked: !!newProps.checked // convert null to false\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Render the Checkbox based on passed props\r\n     */\r\n    CheckboxBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, checked = _a.checked, className = _a.className, defaultChecked = _a.defaultChecked, disabled = _a.disabled, inputProps = _a.inputProps, name = _a.name, boxSide = _a.boxSide, theme = _a.theme, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, ariaDescribedBy = _a.ariaDescribedBy, styles = _a.styles, _b = _a.onRenderLabel, onRenderLabel = _b === void 0 ? this._onRenderLabel : _b, checkmarkIconProps = _a.checkmarkIconProps, ariaPositionInSet = _a.ariaPositionInSet, ariaSetSize = _a.ariaSetSize, keytipProps = _a.keytipProps, title = _a.title;\r\n        var isChecked = checked === undefined ? this.state.isChecked : checked;\r\n        var isReversed = boxSide !== 'start' ? true : false;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            checked: isChecked,\r\n            reversed: isReversed,\r\n            isUsingCustomLabelRender: onRenderLabel !== this._onRenderLabel\r\n        });\r\n        return (React.createElement(KeytipData, { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"div\", { className: _this._classNames.root },\r\n            React.createElement(\"input\", tslib_1.__assign({ type: \"checkbox\" }, inputProps, { \"data-ktp-execute-target\": keytipAttributes['data-ktp-execute-target'] }, checked !== undefined && { checked: checked }, defaultChecked !== undefined && { defaultChecked: defaultChecked }, { disabled: disabled, className: _this._classNames.input, ref: _this._checkBox, name: name, id: _this._id, title: title, onChange: _this._onChange, onFocus: _this._onFocus, onBlur: _this._onBlur, \"aria-disabled\": disabled, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": mergeAriaAttributeValues(ariaDescribedBy, keytipAttributes['aria-describedby']), \"aria-posinset\": ariaPositionInSet, \"aria-setsize\": ariaSetSize })),\r\n            React.createElement(\"label\", { className: _this._classNames.label, htmlFor: _this._id },\r\n                React.createElement(\"div\", { className: _this._classNames.checkbox, \"data-ktp-target\": keytipAttributes['data-ktp-target'] },\r\n                    React.createElement(Icon, tslib_1.__assign({ iconName: \"CheckMark\" }, checkmarkIconProps, { className: _this._classNames.checkmark }))),\r\n                onRenderLabel(_this.props, _this._onRenderLabel)))); }));\r\n    };\r\n    Object.defineProperty(CheckboxBase.prototype, \"checked\", {\r\n        get: function () {\r\n            return this.state.isChecked;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CheckboxBase.prototype.focus = function () {\r\n        if (this._checkBox.current) {\r\n            this._checkBox.current.focus();\r\n        }\r\n    };\r\n    CheckboxBase.defaultProps = {\r\n        boxSide: 'start'\r\n    };\r\n    return CheckboxBase;\r\n}(BaseComponent));\r\nexport { CheckboxBase };\r\n//# sourceMappingURL=Checkbox.base.js.map","import { styled } from '../../Utilities';\r\nimport { CheckboxBase } from './Checkbox.base';\r\nimport { getStyles } from './Checkbox.styles';\r\nexport var Checkbox = styled(CheckboxBase, getStyles, undefined, { scope: 'Checkbox' });\r\n//# sourceMappingURL=Checkbox.js.map","import { FontSizes, HighContrastSelector } from '../../Styling';\r\nimport { IsFocusVisibleClassName } from '../../Utilities';\r\nvar MS_CHECKBOX_LABEL_SIZE = '20px';\r\nvar MS_CHECKBOX_TRANSITION_DURATION = '200ms';\r\nvar MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme, reversed = props.reversed, checked = props.checked, disabled = props.disabled, isUsingCustomLabelRender = props.isUsingCustomLabelRender;\r\n    var semanticColors = theme.semanticColors;\r\n    var checkmarkFontColor = semanticColors.inputForegroundChecked;\r\n    var checkmarkFontColorCheckedDisabled = semanticColors.disabledBackground;\r\n    var checkmarkFontColorHovered = semanticColors.inputBorder;\r\n    var checkboxBorderColor = semanticColors.smallInputBorder;\r\n    var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\r\n    var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\r\n    var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\r\n    var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\r\n    var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n    var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n    var checkboxHoveredTextColor = semanticColors.bodyText;\r\n    var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\r\n    var checkboxTextColor = semanticColors.bodyText;\r\n    var checkboxTextColorDisabled = semanticColors.disabledText;\r\n    return {\r\n        root: [\r\n            'ms-Checkbox',\r\n            {\r\n                position: 'relative',\r\n                display: 'flex'\r\n            },\r\n            reversed && 'reversed',\r\n            checked && 'is-checked',\r\n            !disabled && 'is-enabled',\r\n            disabled && 'is-disabled',\r\n            !disabled && [\r\n                !checked && {\r\n                    selectors: {\r\n                        ':hover .ms-Checkbox-checkbox': {\r\n                            borderColor: checkboxBorderHoveredColor,\r\n                            selectors: (_a = {},\r\n                                _a[HighContrastSelector] = {\r\n                                    borderColor: 'Highlight'\r\n                                },\r\n                                _a)\r\n                        },\r\n                        ':focus .ms-Checkbox-checkbox': { borderColor: checkboxBorderHoveredColor },\r\n                        ':hover .ms-Checkbox-checkmark': {\r\n                            color: checkmarkFontColorHovered,\r\n                            opacity: '1',\r\n                            selectors: (_b = {},\r\n                                _b[HighContrastSelector] = {\r\n                                    color: 'Highlight'\r\n                                },\r\n                                _b)\r\n                        }\r\n                    }\r\n                },\r\n                checked && {\r\n                    selectors: (_c = {\r\n                            ':hover .ms-Checkbox-checkbox': {\r\n                                background: checkboxBackgroundCheckedHovered,\r\n                                borderColor: checkboxBorderColorCheckedHovered\r\n                            },\r\n                            ':focus .ms-Checkbox-checkbox': {\r\n                                background: checkboxBackgroundCheckedHovered,\r\n                                borderColor: checkboxBorderColorCheckedHovered\r\n                            }\r\n                        },\r\n                        _c[HighContrastSelector] = {\r\n                            selectors: {\r\n                                ':hover .ms-Checkbox-checkbox': {\r\n                                    background: 'Window',\r\n                                    borderColor: 'Highlight'\r\n                                },\r\n                                ':focus .ms-Checkbox-checkbox': {\r\n                                    background: 'Highlight'\r\n                                },\r\n                                ':focus:hover .ms-Checkbox-checkbox': {\r\n                                    background: 'Highlight'\r\n                                },\r\n                                ':focus:hover .ms-Checkbox-checkmark': {\r\n                                    color: 'Window'\r\n                                },\r\n                                ':hover .ms-Checkbox-checkmark': {\r\n                                    color: 'Highlight'\r\n                                }\r\n                            }\r\n                        },\r\n                        _c)\r\n                },\r\n                {\r\n                    selectors: {\r\n                        ':hover .ms-Checkbox-text': { color: checkboxHoveredTextColor },\r\n                        ':focus .ms-Checkbox-text': { color: checkboxHoveredTextColor }\r\n                    }\r\n                }\r\n            ],\r\n            className\r\n        ],\r\n        input: [\r\n            {\r\n                position: 'absolute',\r\n                background: 'none',\r\n                opacity: 0,\r\n                selectors: (_d = {},\r\n                    _d[\".\" + IsFocusVisibleClassName + \" &:focus + label::before\"] = {\r\n                        outline: '1px solid ' + theme.palette.neutralSecondary,\r\n                        outlineOffset: '2px',\r\n                        selectors: (_e = {},\r\n                            _e[HighContrastSelector] = {\r\n                                outline: '1px solid ActiveBorder'\r\n                            },\r\n                            _e)\r\n                    },\r\n                    _d)\r\n            }\r\n        ],\r\n        label: [\r\n            'ms-Checkbox-label',\r\n            theme.fonts.medium,\r\n            {\r\n                display: 'flex',\r\n                alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\r\n                cursor: disabled ? 'default' : 'pointer',\r\n                position: 'relative',\r\n                userSelect: 'none',\r\n                textAlign: 'left'\r\n            },\r\n            reversed && {\r\n                flexDirection: 'row-reverse',\r\n                justifyContent: 'flex-end'\r\n            },\r\n            {\r\n                selectors: {\r\n                    '&::before': {\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        content: '\"\"',\r\n                        pointerEvents: 'none'\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        checkbox: [\r\n            'ms-Checkbox-checkbox',\r\n            {\r\n                display: 'flex',\r\n                flexShrink: 0,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: MS_CHECKBOX_LABEL_SIZE,\r\n                width: MS_CHECKBOX_LABEL_SIZE,\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                borderColor: checkboxBorderColor,\r\n                boxSizing: 'border-box',\r\n                transitionProperty: 'background, border, border-color',\r\n                transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n                transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n                /* in case the icon is bigger than the box */\r\n                overflow: 'hidden'\r\n            },\r\n            !reversed\r\n                ? // this margin on the checkbox is for backwards compat.\r\n                    // notably it has the effect where a customRender is used, there will be only a 4px margin from checkbox to label.\r\n                    // the label by default would have another 4px margin for a total of 8px margin between checkbox and label.\r\n                    // we don't combine the two (and move it into the text) to not incur a breaking change for everyone using custom render atm.\r\n                    {\r\n                        marginRight: 4\r\n                    }\r\n                : {\r\n                    marginLeft: 4\r\n                },\r\n            !disabled &&\r\n                checked && {\r\n                background: checkboxBackgroundChecked,\r\n                borderColor: checkboxBorderColorChecked,\r\n                selectors: (_f = {},\r\n                    _f[HighContrastSelector] = {\r\n                        background: 'Highlight',\r\n                        borderColor: 'Highlight'\r\n                    },\r\n                    _f)\r\n            },\r\n            disabled && {\r\n                borderColor: checkboxBorderColorDisabled,\r\n                selectors: (_g = {},\r\n                    _g[HighContrastSelector] = {\r\n                        borderColor: 'InactiveBorder'\r\n                    },\r\n                    _g)\r\n            },\r\n            checked &&\r\n                disabled && {\r\n                background: checkboxBackgroundDisabledChecked,\r\n                borderColor: checkboxBorderColorDisabled\r\n            }\r\n        ],\r\n        checkmark: [\r\n            'ms-Checkbox-checkmark',\r\n            {\r\n                opacity: checked ? '1' : '0',\r\n                color: checked && disabled ? checkmarkFontColorCheckedDisabled : checkmarkFontColor,\r\n                selectors: (_h = {},\r\n                    _h[HighContrastSelector] = {\r\n                        color: disabled ? 'InactiveBorder' : 'Window',\r\n                        MsHighContrastAdjust: 'none'\r\n                    },\r\n                    _h)\r\n            }\r\n        ],\r\n        text: [\r\n            'ms-Checkbox-text',\r\n            {\r\n                color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\r\n                fontSize: FontSizes.medium,\r\n                lineHeight: '20px'\r\n            },\r\n            !reversed\r\n                ? {\r\n                    marginLeft: 4\r\n                }\r\n                : {\r\n                    marginRight: 4\r\n                },\r\n            disabled && {\r\n                selectors: (_j = {},\r\n                    _j[HighContrastSelector] = {\r\n                        // backwards compat for the color of the text when the checkbox was rendered\r\n                        // using a Button.\r\n                        color: 'InactiveBorder'\r\n                    },\r\n                    _j)\r\n            }\r\n        ]\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n};\r\n//# sourceMappingURL=Checkbox.styles.js.map","import { concatStyleSets, HighContrastSelector } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nvar DEFAULT_BUTTON_HEIGHT = '40px';\r\nvar DEFAULT_PADDING = '0 4px';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var actionButtonStyles = {\r\n        root: {\r\n            padding: DEFAULT_PADDING,\r\n            height: DEFAULT_BUTTON_HEIGHT,\r\n            color: theme.palette.neutralPrimary,\r\n            backgroundColor: 'transparent',\r\n            border: '1px solid transparent'\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.themePrimary,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    borderColor: 'Highlight',\r\n                    color: 'Highlight'\r\n                },\r\n                _a)\r\n        },\r\n        iconHovered: {\r\n            color: theme.palette.themePrimary\r\n        },\r\n        rootPressed: {\r\n            color: theme.palette.black\r\n        },\r\n        rootExpanded: {\r\n            color: theme.palette.themePrimary\r\n        },\r\n        iconPressed: {\r\n            color: theme.palette.themeDarker\r\n        },\r\n        rootDisabled: {\r\n            color: theme.palette.neutralTertiary,\r\n            backgroundColor: 'transparent'\r\n        },\r\n        rootChecked: {\r\n            color: theme.palette.black\r\n        },\r\n        iconChecked: {\r\n            color: theme.palette.themeDarker\r\n        },\r\n        flexContainer: {\r\n            justifyContent: 'flex-start'\r\n        },\r\n        icon: {\r\n            color: theme.palette.themeDarkAlt\r\n        },\r\n        iconDisabled: {\r\n            color: 'inherit'\r\n        },\r\n        menuIcon: {\r\n            color: theme.palette.neutralSecondary\r\n        },\r\n        textContainer: {\r\n            flexGrow: 0\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\r\n    var _a;\r\n});\r\n//# sourceMappingURL=ActionButton.styles.js.map","import { ActionButton } from '../ActionButton/ActionButton';\r\nexport var CommandButton = ActionButton;\r\n//# sourceMappingURL=CommandButton.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './ActionButton.styles';\r\nvar ActionButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ActionButton, _super);\r\n    function ActionButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    ActionButton.prototype.render = function () {\r\n        var _a = this.props, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: \"ms-Button--action ms-Button--command\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\r\n    };\r\n    ActionButton = tslib_1.__decorate([\r\n        customizable('ActionButton', ['theme', 'styles'], true)\r\n    ], ActionButton);\r\n    return ActionButton;\r\n}(BaseComponent));\r\nexport { ActionButton };\r\n//# sourceMappingURL=ActionButton.js.map","import { DropdownMenuItemType } from '../Dropdown.types';\r\n/**\r\n * A utility class to cache size and position in cache.\r\n *\r\n * Dropdown options has non-selectable display types. It is therefore not cheap to determine\r\n * the total number of actual selectable options as well as the position an option is in the\r\n * list of options - O(n) cost for each lookup.\r\n *\r\n * Given that we potentially have to make this determination on every single render pass, this\r\n * cache should provide a little bit of relief.\r\n */\r\nvar DropdownSizePosCache = /** @class */ (function () {\r\n    function DropdownSizePosCache() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n     * Invalidates the cache and recalculate the size of selectable options.\r\n     */\r\n    DropdownSizePosCache.prototype.updateOptions = function (options) {\r\n        var displayOnlyOptionsCache = [];\r\n        var size = 0;\r\n        for (var i = 0; i < options.length; i++) {\r\n            if (options[i].itemType === DropdownMenuItemType.Divider || options[i].itemType === DropdownMenuItemType.Header) {\r\n                displayOnlyOptionsCache.push(i);\r\n            }\r\n            else {\r\n                size++;\r\n            }\r\n        }\r\n        this._size = size;\r\n        this._displayOnlyOptionsCache = displayOnlyOptionsCache;\r\n    };\r\n    Object.defineProperty(DropdownSizePosCache.prototype, \"optionSetSize\", {\r\n        /**\r\n         * The size of all the selectable options.\r\n         */\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the position of this option element relative to the full set of selectable option elements.\r\n     * Note: the first selectable element is position 1 in the set.\r\n     * @param index The raw index of the option element.\r\n     */\r\n    DropdownSizePosCache.prototype.positionInSet = function (index) {\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n        // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that\r\n        // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.\r\n        var offset = 0;\r\n        while (index > this._displayOnlyOptionsCache[offset]) {\r\n            offset++;\r\n        }\r\n        if (this._displayOnlyOptionsCache[offset] === index) {\r\n            throw new Error(\"Unexpected: Option at index \" + index + \" is not a selectable element.\");\r\n        }\r\n        return index - offset + 1;\r\n    };\r\n    return DropdownSizePosCache;\r\n}());\r\nexport { DropdownSizePosCache };\r\n//# sourceMappingURL=DropdownSizePosCache.js.map","export var PanelType;\r\n(function (PanelType) {\r\n    /**\r\n     * Renders the Panel with a `fluid` (full screen) width.\r\n     * Recommended for use on small screen breakpoints.\r\n     * - Small (320-479): full screen width, 16px left/right padding\r\n     * - Medium (480-639): full screen width, 16px left/right padding\r\n     * - Large (640-1023): full screen width, 32px left/right padding\r\n     * - XLarge (1024-1365): full screen width, 32px left/right padding\r\n     * - XXLarge (1366-up): full screen width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFluid\"] = 0] = \"smallFluid\";\r\n    /**\r\n     * Renders the Panel in fixed-width `small` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): 340px width, 16px left/right padding\r\n     * - Large (640-1023): 340px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 340px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 340px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFixedFar\"] = 1] = \"smallFixedFar\";\r\n    /**\r\n     * Renders the Panel in fixed-width `small` size, anchored to the near side (left in LTR mode).\r\n     * - Small (320-479): 272px width, 16px left/right padding\r\n     * - Medium (480-639): 272px width, 16px left/right padding\r\n     * - Large (640-1023): 272px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 272px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 272px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFixedNear\"] = 2] = \"smallFixedNear\";\r\n    /**\r\n     * Renders the Panel in `medium` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): 592px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 644px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 644px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"medium\"] = 3] = \"medium\";\r\n    /**\r\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639):  adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\r\n     * - XXLarge (1366-up): 428px fixed left margin, fluid width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"large\"] = 4] = \"large\";\r\n    /**\r\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode), with a fixed width at XX-Large breakpoint.\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\r\n     * - XXLarge (1366-up): 940px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"largeFixed\"] = 5] = \"largeFixed\";\r\n    /**\r\n     * Renders the Panel in `extra large` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): adapts to `PanelType.large` at this breakpoint\r\n     * - XXLarge (1366-1919): 176px fixed left margin, fluid width, 40px left/right padding\r\n     * - XXXLarge (1920-up): 176px fixed left margin, fluid width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"extraLarge\"] = 6] = \"extraLarge\";\r\n    /**\r\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the far side (right in LTR mode).\r\n     * - Has a fixed width provided by the `customWidth` prop\r\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\r\n     * taking up 100% of the viewport width\r\n     */\r\n    PanelType[PanelType[\"custom\"] = 7] = \"custom\";\r\n    /**\r\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the near side (left in LTR mode).\r\n     * - Has a fixed width provided by the `customWidth` prop\r\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\r\n     * taking up 100% of the viewport width\r\n     */\r\n    PanelType[PanelType[\"customNear\"] = 8] = \"customNear\";\r\n})(PanelType || (PanelType = {}));\r\n//# sourceMappingURL=Panel.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar OverlayBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OverlayBase, _super);\r\n    function OverlayBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OverlayBase.prototype.componentDidMount = function () {\r\n        disableBodyScroll();\r\n    };\r\n    OverlayBase.prototype.componentWillUnmount = function () {\r\n        enableBodyScroll();\r\n    };\r\n    OverlayBase.prototype.render = function () {\r\n        var _a = this.props, isDark = _a.isDarkThemed, className = _a.className, theme = _a.theme, styles = _a.styles;\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            isDark: isDark\r\n        });\r\n        return React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: classNames.root }));\r\n    };\r\n    return OverlayBase;\r\n}(BaseComponent));\r\nexport { OverlayBase };\r\n//# sourceMappingURL=Overlay.base.js.map","import { HighContrastSelector, getGlobalClassNames } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Overlay',\r\n    rootDark: 'ms-Overlay--dark'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme, isNone = props.isNone, isDark = props.isDark;\r\n    var palette = theme.palette;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            {\r\n                backgroundColor: palette.whiteTranslucent40,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                position: 'absolute',\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        border: '1px solid WindowText',\r\n                        opacity: 0\r\n                    },\r\n                    _a)\r\n            },\r\n            isNone && {\r\n                visibility: 'hidden'\r\n            },\r\n            isDark && [\r\n                classNames.rootDark,\r\n                {\r\n                    backgroundColor: palette.blackTranslucent40\r\n                }\r\n            ],\r\n            className\r\n        ]\r\n    };\r\n    var _a;\r\n};\r\n//# sourceMappingURL=Overlay.styles.js.map","import { styled } from '../../Utilities';\r\nimport { OverlayBase } from './Overlay.base';\r\nimport { getStyles } from './Overlay.styles';\r\nexport var Overlay = styled(OverlayBase, getStyles, undefined, {\r\n    scope: 'Overlay'\r\n});\r\n//# sourceMappingURL=Overlay.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, KeyCodes, elementContains, getNativeProps, divProperties, getFirstTabbable, getLastTabbable, getNextElement, focusAsync } from '../../Utilities';\r\nvar FocusTrapZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FocusTrapZone, _super);\r\n    function FocusTrapZone() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._root = React.createRef();\r\n        _this._onFocusCapture = function (ev) {\r\n            if (_this.props.onFocusCapture) {\r\n                _this.props.onFocusCapture(ev);\r\n            }\r\n            if (ev.target !== ev.currentTarget) {\r\n                // every time focus changes within the trap zone, remember the focused element so that\r\n                // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\r\n                _this._previouslyFocusedElementInTrapZone = ev.target;\r\n            }\r\n        };\r\n        _this._onKeyboardHandler = function (ev) {\r\n            if (_this.props.onKeyDown) {\r\n                _this.props.onKeyDown(ev);\r\n            }\r\n            // If the default has been prevented, do not process keyboard events.\r\n            if (ev.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n            if (ev.which !== KeyCodes.tab) {\r\n                return;\r\n            }\r\n            if (!_this._root.current) {\r\n                return;\r\n            }\r\n            var _firstTabbableChild = getFirstTabbable(_this._root.current, _this._root.current.firstChild, true);\r\n            var _lastTabbableChild = getLastTabbable(_this._root.current, _this._root.current.lastChild, true);\r\n            if (ev.shiftKey && _firstTabbableChild === ev.target) {\r\n                focusAsync(_lastTabbableChild);\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n            else if (!ev.shiftKey && _lastTabbableChild === ev.target) {\r\n                focusAsync(_firstTabbableChild);\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    FocusTrapZone.prototype.componentDidMount = function () {\r\n        this._bringFocusIntoZone();\r\n        this._updateEventHandlers(this.props);\r\n    };\r\n    FocusTrapZone.prototype.componentWillReceiveProps = function (nextProps) {\r\n        var elementToFocusOnDismiss = nextProps.elementToFocusOnDismiss;\r\n        if (elementToFocusOnDismiss && this._previouslyFocusedElementOutsideTrapZone !== elementToFocusOnDismiss) {\r\n            this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss;\r\n        }\r\n        this._updateEventHandlers(nextProps);\r\n    };\r\n    FocusTrapZone.prototype.componentDidUpdate = function (prevProps) {\r\n        var prevForceFocusInsideTrap = prevProps.forceFocusInsideTrap !== undefined ? prevProps.forceFocusInsideTrap : true;\r\n        var newForceFocusInsideTrap = this.props.forceFocusInsideTrap !== undefined ? this.props.forceFocusInsideTrap : true;\r\n        if (!prevForceFocusInsideTrap && newForceFocusInsideTrap) {\r\n            // Transition from forceFocusInsideTrap disabled to enabled. Emulate what happens when a FocusTrapZone gets mounted\r\n            this._bringFocusIntoZone();\r\n        }\r\n        else if (prevForceFocusInsideTrap && !newForceFocusInsideTrap) {\r\n            // Transition from forceFocusInsideTrap enabled to disabled. Emulate what happens when a FocusTrapZone gets unmounted\r\n            this._returnFocusToInitiator();\r\n        }\r\n    };\r\n    FocusTrapZone.prototype.componentWillUnmount = function () {\r\n        this._events.dispose();\r\n        this._returnFocusToInitiator();\r\n    };\r\n    FocusTrapZone.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, ariaLabelledBy = _a.ariaLabelledBy;\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        return (React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: className, ref: this._root, \"aria-labelledby\": ariaLabelledBy, onKeyDown: this._onKeyboardHandler, onFocusCapture: this._onFocusCapture }), this.props.children));\r\n    };\r\n    FocusTrapZone.prototype.focus = function () {\r\n        var _a = this.props, focusPreviouslyFocusedInnerElement = _a.focusPreviouslyFocusedInnerElement, firstFocusableSelector = _a.firstFocusableSelector;\r\n        if (focusPreviouslyFocusedInnerElement &&\r\n            this._previouslyFocusedElementInTrapZone &&\r\n            elementContains(this._root.current, this._previouslyFocusedElementInTrapZone)) {\r\n            // focus on the last item that had focus in the zone before we left the zone\r\n            focusAsync(this._previouslyFocusedElementInTrapZone);\r\n            return;\r\n        }\r\n        var focusSelector = typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector && firstFocusableSelector();\r\n        var _firstFocusableChild;\r\n        if (this._root.current) {\r\n            if (focusSelector) {\r\n                _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\r\n            }\r\n            else {\r\n                _firstFocusableChild = getNextElement(this._root.current, this._root.current.firstChild, true, false, false, true);\r\n            }\r\n        }\r\n        if (_firstFocusableChild) {\r\n            focusAsync(_firstFocusableChild);\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._bringFocusIntoZone = function () {\r\n        var _a = this.props, elementToFocusOnDismiss = _a.elementToFocusOnDismiss, _b = _a.disableFirstFocus, disableFirstFocus = _b === void 0 ? false : _b;\r\n        FocusTrapZone._focusStack.push(this);\r\n        this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss\r\n            ? elementToFocusOnDismiss\r\n            : document.activeElement;\r\n        if (!elementContains(this._root.current, this._previouslyFocusedElementOutsideTrapZone) && !disableFirstFocus) {\r\n            this.focus();\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._returnFocusToInitiator = function () {\r\n        var _this = this;\r\n        var ignoreExternalFocusing = this.props.ignoreExternalFocusing;\r\n        FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter(function (value) {\r\n            return _this !== value;\r\n        });\r\n        var activeElement = document.activeElement;\r\n        if (!ignoreExternalFocusing &&\r\n            this._previouslyFocusedElementOutsideTrapZone &&\r\n            typeof this._previouslyFocusedElementOutsideTrapZone.focus === 'function' &&\r\n            (elementContains(this._root.current, activeElement) || activeElement === document.body)) {\r\n            focusAsync(this._previouslyFocusedElementOutsideTrapZone);\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._updateEventHandlers = function (newProps) {\r\n        var _a = newProps.isClickableOutsideFocusTrap, isClickableOutsideFocusTrap = _a === void 0 ? false : _a, _b = newProps.forceFocusInsideTrap, forceFocusInsideTrap = _b === void 0 ? true : _b;\r\n        if (forceFocusInsideTrap && !this._hasFocusHandler) {\r\n            this._events.on(window, 'focus', this._forceFocusInTrap, true);\r\n        }\r\n        else if (!forceFocusInsideTrap && this._hasFocusHandler) {\r\n            this._events.off(window, 'focus', this._forceFocusInTrap, true);\r\n        }\r\n        this._hasFocusHandler = forceFocusInsideTrap;\r\n        if (!isClickableOutsideFocusTrap && !this._hasClickHandler) {\r\n            this._events.on(window, 'click', this._forceClickInTrap, true);\r\n        }\r\n        else if (isClickableOutsideFocusTrap && this._hasClickHandler) {\r\n            this._events.off(window, 'click', this._forceClickInTrap, true);\r\n        }\r\n        this._hasClickHandler = !isClickableOutsideFocusTrap;\r\n    };\r\n    FocusTrapZone.prototype._forceFocusInTrap = function (ev) {\r\n        if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n            var focusedElement = ev.relatedTarget || document.activeElement;\r\n            if (!elementContains(this._root.current, focusedElement)) {\r\n                this.focus();\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._forceClickInTrap = function (ev) {\r\n        if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n            var clickedElement = ev.target;\r\n            if (clickedElement && !elementContains(this._root.current, clickedElement)) {\r\n                this.focus();\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n    FocusTrapZone._focusStack = [];\r\n    return FocusTrapZone;\r\n}(BaseComponent));\r\nexport { FocusTrapZone };\r\n//# sourceMappingURL=FocusTrapZone.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { IconButton } from '../../Button';\r\nimport { Layer } from '../../Layer';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Popup } from '../../Popup';\r\nimport { getTheme, IconFontSizes } from '../../Styling';\r\nimport { allowScrollOnElement, BaseComponent, classNamesFunction, divProperties, elementContains, getId, getNativeProps, getRTL } from '../../Utilities';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { PanelType } from './Panel.types';\r\nvar getClassNames = classNamesFunction();\r\nvar PanelBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PanelBase, _super);\r\n    function PanelBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._panel = React.createRef();\r\n        _this.dismiss = function (ev) {\r\n            if (_this.state.isOpen) {\r\n                if (_this.props.onDismiss) {\r\n                    _this.props.onDismiss(ev);\r\n                }\r\n                if (!ev || (ev && !ev.defaultPrevented)) {\r\n                    _this.setState({\r\n                        isOpen: false,\r\n                        isAnimating: true\r\n                    }, function () {\r\n                        _this._async.setTimeout(_this._onTransitionComplete, 200);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // Allow the user to scroll within the panel but not on the body\r\n        _this._allowScrollOnPanel = function (elt) {\r\n            if (elt) {\r\n                allowScrollOnElement(elt, _this._events);\r\n            }\r\n            else {\r\n                _this._events.off(_this._scrollableContent);\r\n            }\r\n            _this._scrollableContent = elt;\r\n        };\r\n        _this._onRenderNavigation = function (props) {\r\n            var _a = _this.props.onRenderNavigationContent, onRenderNavigationContent = _a === void 0 ? _this._onRenderNavigationContent : _a;\r\n            return React.createElement(\"div\", { className: _this._classNames.navigation }, onRenderNavigationContent(props, _this._onRenderNavigationContent));\r\n        };\r\n        _this._onRenderNavigationContent = function (props) {\r\n            var closeButtonAriaLabel = props.closeButtonAriaLabel, hasCloseButton = props.hasCloseButton;\r\n            var theme = getTheme();\r\n            if (hasCloseButton) {\r\n                // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                // const iconButtonStyles = this._classNames.subComponentStyles\r\n                // ? (this._classNames.subComponentStyles.iconButton as IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles>)\r\n                // : undefined;\r\n                return (React.createElement(IconButton\r\n                // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                // className={iconButtonStyles}\r\n                , { \r\n                    // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                    // className={iconButtonStyles}\r\n                    styles: {\r\n                        root: {\r\n                            height: 'auto',\r\n                            width: '44px',\r\n                            color: theme.palette.neutralSecondary,\r\n                            fontSize: IconFontSizes.large\r\n                        },\r\n                        rootHovered: {\r\n                            color: theme.palette.neutralPrimary\r\n                        }\r\n                    }, className: _this._classNames.closeButton, onClick: _this._onPanelClick, ariaLabel: closeButtonAriaLabel, \"data-is-visible\": true, iconProps: { iconName: 'Cancel' } }));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderHeader = function (props, defaultRender, headerTextId) {\r\n            var headerText = props.headerText;\r\n            if (headerText) {\r\n                return (React.createElement(\"div\", { className: _this._classNames.header },\r\n                    React.createElement(\"p\", { className: _this._classNames.headerText, id: headerTextId, role: \"heading\", \"aria-level\": 2 }, headerText)));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderBody = function (props) {\r\n            return React.createElement(\"div\", { className: _this._classNames.content }, props.children);\r\n        };\r\n        _this._onRenderFooter = function (props) {\r\n            var _a = _this.props.onRenderFooterContent, onRenderFooterContent = _a === void 0 ? null : _a;\r\n            if (onRenderFooterContent) {\r\n                return (React.createElement(\"div\", { className: _this._classNames.footer },\r\n                    React.createElement(\"div\", { className: _this._classNames.footerInner }, onRenderFooterContent())));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onPanelClick = function (ev) {\r\n            _this.dismiss(ev);\r\n        };\r\n        _this._onTransitionComplete = function () {\r\n            _this._updateFooterPosition();\r\n            _this.setState({\r\n                isAnimating: false\r\n            });\r\n            if (!_this.state.isOpen && _this.props.onDismissed) {\r\n                _this.props.onDismissed();\r\n            }\r\n        };\r\n        _this._warnDeprecations({\r\n            ignoreExternalFocusing: 'focusTrapZoneProps',\r\n            forceFocusInsideTrap: 'focusTrapZoneProps',\r\n            firstFocusableSelector: 'focusTrapZoneProps'\r\n        });\r\n        _this.state = {\r\n            isFooterSticky: false,\r\n            isOpen: false,\r\n            isAnimating: false,\r\n            id: getId('Panel')\r\n        };\r\n        return _this;\r\n    }\r\n    PanelBase.prototype.componentDidMount = function () {\r\n        this._events.on(window, 'resize', this._updateFooterPosition);\r\n        if (this._shouldListenForOuterClick(this.props)) {\r\n            this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n        if (this.props.isOpen) {\r\n            this.open();\r\n        }\r\n    };\r\n    PanelBase.prototype.componentDidUpdate = function (previousProps) {\r\n        var shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\r\n        var previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\r\n        if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\r\n            this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n        else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\r\n            this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n    };\r\n    PanelBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.isOpen !== this.state.isOpen) {\r\n            if (newProps.isOpen) {\r\n                this.open();\r\n            }\r\n            else {\r\n                this.dismiss();\r\n            }\r\n        }\r\n    };\r\n    PanelBase.prototype.render = function () {\r\n        var _a = this.props, _b = _a.className, className = _b === void 0 ? '' : _b, elementToFocusOnDismiss = _a.elementToFocusOnDismiss, firstFocusableSelector = _a.firstFocusableSelector, focusTrapZoneProps = _a.focusTrapZoneProps, forceFocusInsideTrap = _a.forceFocusInsideTrap, hasCloseButton = _a.hasCloseButton, headerText = _a.headerText, _c = _a.headerClassName, headerClassName = _c === void 0 ? '' : _c, ignoreExternalFocusing = _a.ignoreExternalFocusing, isBlocking = _a.isBlocking, isFooterAtBottom = _a.isFooterAtBottom, isLightDismiss = _a.isLightDismiss, isHiddenOnDismiss = _a.isHiddenOnDismiss, layerProps = _a.layerProps, type = _a.type, styles = _a.styles, theme = _a.theme, customWidth = _a.customWidth, _d = _a.onLightDismissClick, onLightDismissClick = _d === void 0 ? this._onPanelClick : _d, _e = _a.onRenderNavigation, onRenderNavigation = _e === void 0 ? this._onRenderNavigation : _e, _f = _a.onRenderHeader, onRenderHeader = _f === void 0 ? this._onRenderHeader : _f, _g = _a.onRenderBody, onRenderBody = _g === void 0 ? this._onRenderBody : _g, _h = _a.onRenderFooter, onRenderFooter = _h === void 0 ? this._onRenderFooter : _h;\r\n        var _j = this.state, isFooterSticky = _j.isFooterSticky, isOpen = _j.isOpen, isAnimating = _j.isAnimating, id = _j.id;\r\n        var isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\r\n        var isRTL = getRTL();\r\n        var isOnRightSide = isRTL ? isLeft : !isLeft;\r\n        var headerTextId = headerText && id + '-headerText';\r\n        var customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\r\n        var nativeProps = getNativeProps(this.props, divProperties);\r\n        if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\r\n            return null;\r\n        }\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\r\n            hasCloseButton: hasCloseButton,\r\n            headerClassName: headerClassName,\r\n            isAnimating: isAnimating,\r\n            isFooterAtBottom: isFooterAtBottom,\r\n            isFooterSticky: isFooterSticky,\r\n            isOnRightSide: isOnRightSide,\r\n            isOpen: isOpen,\r\n            isHiddenOnDismiss: isHiddenOnDismiss,\r\n            type: type\r\n        });\r\n        var _classNames = this._classNames;\r\n        var overlay;\r\n        if (isBlocking && isOpen) {\r\n            overlay = React.createElement(Overlay, { className: _classNames.overlay, isDarkThemed: false, onClick: isLightDismiss ? onLightDismissClick : undefined });\r\n        }\r\n        var header = onRenderHeader(this.props, this._onRenderHeader, headerTextId);\r\n        return (React.createElement(Layer, tslib_1.__assign({}, layerProps),\r\n            React.createElement(Popup, { role: \"dialog\", \"aria-modal\": \"true\", ariaLabelledBy: header ? headerTextId : undefined, onDismiss: this.dismiss, className: _classNames.hiddenPanel },\r\n                React.createElement(\"div\", tslib_1.__assign({ \"aria-hidden\": !isOpen && isAnimating }, nativeProps, { ref: this._panel, className: _classNames.root }),\r\n                    overlay,\r\n                    React.createElement(FocusTrapZone, tslib_1.__assign({ ignoreExternalFocusing: ignoreExternalFocusing, forceFocusInsideTrap: isHiddenOnDismiss && !isOpen ? false : forceFocusInsideTrap, firstFocusableSelector: firstFocusableSelector, isClickableOutsideFocusTrap: true }, focusTrapZoneProps, { className: _classNames.main, style: customWidthStyles, elementToFocusOnDismiss: elementToFocusOnDismiss }),\r\n                        React.createElement(\"div\", { className: _classNames.commands, \"data-is-visible\": true }, onRenderNavigation(this.props, this._onRenderNavigation)),\r\n                        React.createElement(\"div\", { className: _classNames.contentInner },\r\n                            header,\r\n                            React.createElement(\"div\", { ref: this._allowScrollOnPanel, className: _classNames.scrollableContent, \"data-is-scrollable\": true }, onRenderBody(this.props, this._onRenderBody)),\r\n                            onRenderFooter(this.props, this._onRenderFooter)))))));\r\n    };\r\n    PanelBase.prototype.open = function () {\r\n        var _this = this;\r\n        if (!this.state.isOpen) {\r\n            this.setState({\r\n                isOpen: true,\r\n                isAnimating: true\r\n            }, function () {\r\n                _this._async.setTimeout(_this._onTransitionComplete, 200);\r\n            });\r\n        }\r\n    };\r\n    PanelBase.prototype._shouldListenForOuterClick = function (props) {\r\n        return !!props.isBlocking && !!props.isOpen;\r\n    };\r\n    PanelBase.prototype._updateFooterPosition = function () {\r\n        var scrollableContent = this._scrollableContent;\r\n        if (scrollableContent) {\r\n            var height = scrollableContent.clientHeight;\r\n            var innerHeight_1 = scrollableContent.scrollHeight;\r\n            this.setState({\r\n                isFooterSticky: height < innerHeight_1 ? true : false\r\n            });\r\n        }\r\n    };\r\n    PanelBase.prototype._dismissOnOuterClick = function (ev) {\r\n        var panel = this._panel.current;\r\n        if (this.state.isOpen && panel) {\r\n            if (!elementContains(panel, ev.target)) {\r\n                if (this.props.onOuterClick) {\r\n                    this.props.onOuterClick();\r\n                    ev.preventDefault();\r\n                }\r\n                else {\r\n                    this.dismiss();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PanelBase.defaultProps = {\r\n        isHiddenOnDismiss: false,\r\n        isOpen: false,\r\n        isBlocking: true,\r\n        hasCloseButton: true,\r\n        type: PanelType.smallFixedFar\r\n    };\r\n    return PanelBase;\r\n}(BaseComponent));\r\nexport { PanelBase };\r\n//# sourceMappingURL=Panel.base.js.map","import * as tslib_1 from \"tslib\";\r\nimport { PanelType } from './Panel.types';\r\nimport { AnimationClassNames, AnimationVariables, DefaultFontStyles, getGlobalClassNames, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile } from '../../Styling';\r\n// TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n// import { IStyleFunctionOrObject } from '../../Utilities';\r\n// import { IButtonStyles, IButtonStyleProps } from '../../Button';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Panel',\r\n    main: 'ms-Panel-main',\r\n    commands: 'ms-Panel-commands',\r\n    contentInner: 'ms-Panel-contentInner',\r\n    scrollableContent: 'ms-Panel-scrollableContent',\r\n    navigation: 'ms-Panel-navigation',\r\n    closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\r\n    header: 'ms-Panel-header',\r\n    headerText: 'ms-Panel-headerText',\r\n    content: 'ms-Panel-content',\r\n    footer: 'ms-Panel-footer',\r\n    footerInner: 'ms-Panel-footerInner',\r\n    isOpen: 'is-open',\r\n    hasCloseButton: 'ms-Panel--hasCloseButton',\r\n    smallFluid: 'ms-Panel--smFluid',\r\n    smallFixedNear: 'ms-Panel--smLeft',\r\n    smallFixedFar: 'ms-Panel--sm',\r\n    medium: 'ms-Panel--md',\r\n    large: 'ms-Panel--lg',\r\n    largeFixed: 'ms-Panel--fixed',\r\n    extraLarge: 'ms-Panel--xl',\r\n    custom: 'ms-Panel--custom',\r\n    customNear: 'ms-Panel--customLeft'\r\n};\r\nvar panelWidth = {\r\n    full: '100%',\r\n    auto: 'auto',\r\n    xs: 272,\r\n    sm: 340,\r\n    md1: 592,\r\n    md2: 644,\r\n    lg: 940\r\n};\r\nvar panelMargin = {\r\n    auto: 'auto',\r\n    none: 0,\r\n    md: 48,\r\n    lg: 428,\r\n    xl: 176\r\n};\r\n// Following consts are used below in `getPanelBreakpoints()` function to provide\r\n// necessary fallbacks for different types of Panel in different breakpoints.\r\nvar smallPanelSelectors = (_a = {},\r\n    _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\r\n        width: panelWidth.sm\r\n    },\r\n    _a);\r\nvar mediumPanelSelectors = (_b = {},\r\n    _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\r\n        width: panelWidth.md1\r\n    },\r\n    _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\r\n        width: panelWidth.md2\r\n    },\r\n    _b);\r\nvar largePanelSelectors = (_c = {},\r\n    _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\r\n        left: panelMargin.md,\r\n        width: panelWidth.auto\r\n    },\r\n    _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.lg\r\n    },\r\n    _c);\r\nvar largeFixedPanelSelectors = (_d = {},\r\n    _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.auto,\r\n        width: panelWidth.lg\r\n    },\r\n    _d);\r\nvar extraLargePanelSelectors = (_e = {},\r\n    _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.xl\r\n    },\r\n    _e);\r\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\r\n// This is done in the effort to follow design redlines.\r\nvar getPanelBreakpoints = function (type) {\r\n    var selectors;\r\n    // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\r\n    // are not checked in here because they render the same in all the breakpoints\r\n    // and have the checks done separately in the `getStyles` function below.\r\n    switch (type) {\r\n        case PanelType.smallFixedFar:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors);\r\n            break;\r\n        case PanelType.medium:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors);\r\n            break;\r\n        case PanelType.large:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors);\r\n            break;\r\n        case PanelType.largeFixed:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors, largeFixedPanelSelectors);\r\n            break;\r\n        case PanelType.extraLarge:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors, extraLargePanelSelectors);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return selectors;\r\n};\r\nvar commandBarHeight = '44px';\r\nvar sharedPaddingStyles = {\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    selectors: (_f = {},\r\n        _f[\"@media screen and (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\r\n            paddingLeft: '32px',\r\n            paddingRight: '32px'\r\n        },\r\n        _f[\"@media screen and (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n            paddingLeft: '40px',\r\n            paddingRight: '40px'\r\n        },\r\n        _f)\r\n};\r\n// // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n// function getIconButtonStyles(props: IPanelStyleProps): IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles> {\r\n//   const { theme } = props;\r\n//   return () => ({\r\n//     root: {\r\n//       height: 'auto',\r\n//       width: '44px',\r\n//       color: theme.palette.neutralSecondary,\r\n//       fontSize: IconFontSizes.large\r\n//     },\r\n//     rootHovered: {\r\n//       color: theme.palette.neutralPrimary\r\n//     }\r\n//   });\r\n// }\r\nexport var getStyles = function (props) {\r\n    var className = props.className, focusTrapZoneClassName = props.focusTrapZoneClassName, hasCloseButton = props.hasCloseButton, headerClassName = props.headerClassName, isAnimating = props.isAnimating, isFooterAtBottom = props.isFooterAtBottom, isFooterSticky = props.isFooterSticky, isOnRightSide = props.isOnRightSide, isOpen = props.isOpen, isHiddenOnDismiss = props.isHiddenOnDismiss, theme = props.theme, _a = props.type, type = _a === void 0 ? PanelType.smallFixedFar : _a;\r\n    var palette = theme.palette;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\r\n    var windowHeight = typeof window !== 'undefined' ? window.innerHeight : '100%';\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            isOpen && classNames.isOpen,\r\n            hasCloseButton && classNames.hasCloseButton,\r\n            {\r\n                pointerEvents: 'none',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0\r\n            },\r\n            isCustomPanel && isOnRightSide && classNames.custom,\r\n            isCustomPanel && !isOnRightSide && classNames.customNear,\r\n            className\r\n        ],\r\n        overlay: [\r\n            {\r\n                pointerEvents: 'auto',\r\n                cursor: 'pointer'\r\n            },\r\n            isOpen && isAnimating && AnimationClassNames.fadeIn100,\r\n            !isOpen && isAnimating && AnimationClassNames.fadeOut100\r\n        ],\r\n        hiddenPanel: [\r\n            !isOpen &&\r\n                !isAnimating &&\r\n                isHiddenOnDismiss && {\r\n                visibility: 'hidden'\r\n            }\r\n        ],\r\n        main: [\r\n            classNames.main,\r\n            {\r\n                backgroundColor: palette.white,\r\n                boxShadow: '0px 0px 30px 0px rgba(0,0,0,0.2)',\r\n                pointerEvents: 'auto',\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                overflowX: 'hidden',\r\n                overflowY: 'auto',\r\n                WebkitOverflowScrolling: 'touch',\r\n                maxHeight: '100%',\r\n                bottom: 0,\r\n                top: 0,\r\n                // (left, right, width) - Properties to be overridden depending on the type of the Panel and the screen breakpoint.\r\n                left: panelMargin.auto,\r\n                right: panelMargin.none,\r\n                width: panelWidth.full,\r\n                selectors: tslib_1.__assign((_b = {}, _b['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                    maxHeight: windowHeight\r\n                }, _b), getPanelBreakpoints(type))\r\n            },\r\n            type === PanelType.smallFluid && {\r\n                left: panelMargin.none\r\n            },\r\n            type === PanelType.smallFixedNear && {\r\n                left: panelMargin.none,\r\n                right: panelMargin.auto,\r\n                width: panelWidth.xs\r\n            },\r\n            type === PanelType.customNear && {\r\n                right: 'auto',\r\n                left: 0\r\n            },\r\n            isCustomPanel && {\r\n                maxWidth: '100vw'\r\n            },\r\n            isFooterAtBottom && {\r\n                height: '100%',\r\n                selectors: (_c = {},\r\n                    _c['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _c)\r\n            },\r\n            isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\r\n            isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\r\n            !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\r\n            !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\r\n            focusTrapZoneClassName\r\n        ],\r\n        commands: [classNames.commands],\r\n        navigation: [\r\n            classNames.navigation,\r\n            {\r\n                padding: '0 5px',\r\n                height: commandBarHeight,\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n            }\r\n        ],\r\n        closeButton: [classNames.closeButton],\r\n        contentInner: [\r\n            classNames.contentInner,\r\n            {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                flexGrow: 1,\r\n                maxHeight: '100%',\r\n                overflowY: 'hidden',\r\n                selectors: (_d = {},\r\n                    _d['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        maxHeight: windowHeight\r\n                    },\r\n                    _d)\r\n            },\r\n            isFooterAtBottom && {\r\n                height: '100%',\r\n                selectors: (_e = {},\r\n                    _e['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _e)\r\n            }\r\n        ],\r\n        header: [\r\n            classNames.header,\r\n            sharedPaddingStyles,\r\n            {\r\n                margin: '14px 0',\r\n                // Ensure that title doesn't shrink if screen is too small\r\n                flexGrow: 0,\r\n                selectors: (_f = {},\r\n                    _f[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\r\n                        marginTop: '30px'\r\n                    },\r\n                    _f)\r\n            }\r\n        ],\r\n        headerText: [\r\n            classNames.headerText,\r\n            DefaultFontStyles.xLarge,\r\n            {\r\n                color: palette.neutralPrimary,\r\n                lineHeight: '32px',\r\n                margin: 0\r\n            },\r\n            headerClassName\r\n        ],\r\n        scrollableContent: [\r\n            classNames.scrollableContent,\r\n            {\r\n                overflowY: 'auto',\r\n                height: '100%',\r\n                selectors: (_g = {},\r\n                    _g['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _g)\r\n            }\r\n        ],\r\n        content: [\r\n            classNames.content,\r\n            sharedPaddingStyles,\r\n            {\r\n                marginBottom: 0,\r\n                paddingBottom: 20\r\n            }\r\n        ],\r\n        footer: [\r\n            classNames.footer,\r\n            {\r\n                // Ensure that footer doesn't shrink if screen is too small\r\n                flexGrow: 0,\r\n                borderTop: '1px solid transparent',\r\n                transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2\r\n            },\r\n            isFooterSticky && {\r\n                background: palette.white,\r\n                borderTopColor: palette.neutralLight\r\n            }\r\n        ],\r\n        footerInner: [\r\n            classNames.footerInner,\r\n            sharedPaddingStyles,\r\n            {\r\n                paddingBottom: '20px',\r\n                paddingTop: '20px'\r\n            }\r\n        ]\r\n        // subComponentStyles: {\r\n        //   iconButton: getIconButtonStyles(props)\r\n        // }\r\n    };\r\n    var _b, _c, _d, _e, _f, _g;\r\n};\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=Panel.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { FontSizes, FontWeights, HighContrastSelector, getGlobalClassNames, normalize } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Dropdown-container',\r\n    label: 'ms-Dropdown-label',\r\n    dropdown: 'ms-Dropdown',\r\n    title: 'ms-Dropdown-title',\r\n    caretDownWrapper: 'ms-Dropdown-caretDownWrapper',\r\n    caretDown: 'ms-Dropdown-caretDown',\r\n    callout: 'ms-Dropdown-callout',\r\n    panel: 'ms-Dropdown-panel',\r\n    dropdownItems: 'ms-Dropdown-items',\r\n    dropdownItem: 'ms-Dropdown-item',\r\n    dropdownDivider: 'ms-Dropdown-divider',\r\n    dropdownOptionText: 'ms-Dropdown-optionText',\r\n    dropdownItemHeader: 'ms-Dropdown-header',\r\n    titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',\r\n    titleHasError: 'ms-Dropdown-title--hasError'\r\n};\r\nvar DROPDOWN_HEIGHT = 32;\r\nvar DROPDOWN_ITEM_HEIGHT = 32;\r\nvar highContrastAdjustMixin = {\r\n    // highContrastAdjust mixin\r\n    '@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: black-on-white)': {\r\n        MsHighContrastAdjust: 'none'\r\n    }\r\n};\r\nvar highContrastItemAndTitleStateMixin = {\r\n    selectors: tslib_1.__assign((_a = {}, _a[HighContrastSelector] = {\r\n        backgroundColor: 'Highlight',\r\n        borderColor: 'Highlight',\r\n        color: 'HighlightText',\r\n        selectors: {\r\n            ':hover': {\r\n                color: 'HighlightText' // overrides the hover styling for buttons that are also selected\r\n            }\r\n        }\r\n    }, _a), highContrastAdjustMixin)\r\n};\r\nvar highContrastBorderState = {\r\n    selectors: (_b = {},\r\n        _b[HighContrastSelector] = {\r\n            borderColor: 'Highlight'\r\n        },\r\n        _b)\r\n};\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, hasError = props.hasError, className = props.className, isOpen = props.isOpen, disabled = props.disabled, required = props.required, isRenderingPlaceholder = props.isRenderingPlaceholder, panelClassName = props.panelClassName, calloutClassName = props.calloutClassName;\r\n    if (!theme) {\r\n        throw new Error('theme is undefined or null in base Dropdown getStyles function.');\r\n    }\r\n    var globalClassnames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var palette = theme.palette, semanticColors = theme.semanticColors;\r\n    var rootHoverFocusActiveSelectorNeutralDarkMixin = {\r\n        color: palette.neutralDark\r\n    };\r\n    var rootHoverFocusActiveSelectorBodySubtextMixin = {\r\n        color: semanticColors.bodySubtext\r\n    };\r\n    var borderColorError = {\r\n        borderColor: semanticColors.errorText\r\n    };\r\n    var dropdownItemStyle = [\r\n        globalClassnames.dropdownItem,\r\n        {\r\n            backgroundColor: 'transparent',\r\n            boxSizing: 'border-box',\r\n            cursor: 'pointer',\r\n            display: 'block',\r\n            padding: '4px 16px',\r\n            width: '100%',\r\n            minHeight: DROPDOWN_ITEM_HEIGHT,\r\n            lineHeight: 20,\r\n            height: 'auto',\r\n            position: 'relative',\r\n            border: '1px solid transparent',\r\n            wordWrap: 'break-word',\r\n            overflowWrap: 'break-word',\r\n            textAlign: 'left'\r\n        }\r\n    ];\r\n    var dropdownItemSelected = dropdownItemStyle.concat([\r\n        {\r\n            backgroundColor: palette.neutralQuaternaryAlt,\r\n            color: palette.black\r\n        },\r\n        highContrastItemAndTitleStateMixin\r\n    ]);\r\n    var dropdownItemDisabled = dropdownItemStyle.concat([\r\n        {\r\n            color: semanticColors.disabledText,\r\n            cursor: 'default'\r\n        }\r\n    ]);\r\n    return {\r\n        root: globalClassnames.root,\r\n        label: globalClassnames.label,\r\n        dropdown: [\r\n            globalClassnames.dropdown,\r\n            normalize,\r\n            tslib_1.__assign({}, theme.fonts.medium, { color: palette.neutralPrimary, position: 'relative', outline: 0, userSelect: 'none', selectors: (_a = {},\r\n                    _a['&:hover .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.neutralDark },\r\n                        highContrastBorderState\r\n                    ],\r\n                    _a['&:focus .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.themePrimary },\r\n                        highContrastItemAndTitleStateMixin\r\n                    ],\r\n                    _a['&:active .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.themeDark },\r\n                        highContrastBorderState\r\n                    ],\r\n                    _a['&:hover .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                    _a['&:focus .' + globalClassnames.caretDown] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { selectors: tslib_1.__assign((_b = {}, _b[HighContrastSelector] = { color: 'HighlightText' }, _b), highContrastAdjustMixin) }\r\n                    ],\r\n                    _a['&:active .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                    _a['&:hover .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:focus .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:active .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:hover .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a['&:active .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a['&:focus .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a) }),\r\n            className,\r\n            isOpen && 'is-open',\r\n            disabled && 'is-disabled',\r\n            required && 'is-required'\r\n        ],\r\n        title: [\r\n            globalClassnames.title,\r\n            normalize,\r\n            {\r\n                backgroundColor: semanticColors.inputBackground,\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                borderColor: semanticColors.inputBorder,\r\n                cursor: 'pointer',\r\n                display: 'block',\r\n                height: DROPDOWN_HEIGHT,\r\n                lineHeight: DROPDOWN_HEIGHT - 2,\r\n                padding: \"0 \" + DROPDOWN_HEIGHT + \"px 0 12px\",\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis'\r\n            },\r\n            isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],\r\n            hasError && [globalClassnames.titleHasError, borderColorError],\r\n            disabled && {\r\n                backgroundColor: semanticColors.disabledBackground,\r\n                border: 'none',\r\n                color: semanticColors.disabledText,\r\n                cursor: 'default',\r\n                selectors: (_c = {}, _c[HighContrastSelector] = { border: '1px solid GrayText', color: 'GrayText' }, _c)\r\n            }\r\n        ],\r\n        caretDownWrapper: [\r\n            globalClassnames.caretDownWrapper,\r\n            {\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 12,\r\n                height: DROPDOWN_HEIGHT,\r\n                lineHeight: DROPDOWN_HEIGHT - 2 // height minus the border\r\n            },\r\n            !disabled && {\r\n                cursor: 'pointer'\r\n            }\r\n        ],\r\n        caretDown: [\r\n            globalClassnames.caretDown,\r\n            { color: palette.neutralSecondary, fontSize: FontSizes.small, pointerEvents: 'none' },\r\n            disabled && { color: semanticColors.disabledText, selectors: (_d = {}, _d[HighContrastSelector] = { color: 'GrayText' }, _d) }\r\n        ],\r\n        errorMessage: tslib_1.__assign({ color: semanticColors.errorText }, theme.fonts.small, { paddingTop: 5 }),\r\n        callout: [\r\n            globalClassnames.callout,\r\n            {\r\n                boxShadow: '0 0 2px 0 rgba(0,0,0,0.2)',\r\n                border: \"1px solid \" + palette.neutralLight\r\n            },\r\n            calloutClassName\r\n        ],\r\n        dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },\r\n        dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],\r\n        dropdownItem: dropdownItemStyle.concat([\r\n            {\r\n                selectors: (_e = {},\r\n                    _e[HighContrastSelector] = {\r\n                        borderColor: 'Window'\r\n                    },\r\n                    _e['&:hover'] = {\r\n                        color: 'inherit'\r\n                    },\r\n                    _e['&:focus'] = {\r\n                        backgroundColor: semanticColors.listItemBackgroundHovered\r\n                    },\r\n                    _e['&:active'] = {\r\n                        backgroundColor: semanticColors.listHeaderBackgroundHovered,\r\n                        color: palette.black\r\n                    },\r\n                    _e)\r\n            }\r\n        ]),\r\n        dropdownItemSelected: dropdownItemSelected,\r\n        dropdownItemDisabled: dropdownItemDisabled,\r\n        dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],\r\n        dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],\r\n        dropdownOptionText: [\r\n            globalClassnames.dropdownOptionText,\r\n            {\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis',\r\n                minWidth: 0,\r\n                maxWidth: '100%',\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word',\r\n                margin: '1px'\r\n            }\r\n        ],\r\n        dropdownItemHeader: [\r\n            globalClassnames.dropdownItemHeader,\r\n            tslib_1.__assign({}, theme.fonts.medium, { fontWeight: FontWeights.semibold, color: semanticColors.menuHeader, background: 'none', backgroundColor: 'transparent', border: 'none', height: DROPDOWN_ITEM_HEIGHT, lineHeight: DROPDOWN_ITEM_HEIGHT, cursor: 'default', padding: '0px 16px', userSelect: 'none', textAlign: 'left' })\r\n        ],\r\n        subComponentStyles: {\r\n            label: { root: { display: 'inline-block' } },\r\n            panel: {\r\n                root: [panelClassName],\r\n                main: {\r\n                    // Force drop shadow even under medium breakpoint\r\n                    boxShadow: '-30px 0px 30px -30px rgba(0,0,0,0.2)'\r\n                },\r\n                contentInner: { padding: '0 0 20px' }\r\n            }\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e;\r\n};\r\nvar _a, _b;\r\n//# sourceMappingURL=Dropdown.styles.js.map","import { styled } from '../../Utilities';\r\nimport { PanelBase } from './Panel.base';\r\nimport { getStyles } from './Panel.styles';\r\n/**\r\n * Panel description\r\n */\r\nexport var Panel = styled(PanelBase, getStyles, undefined, {\r\n    scope: 'Panel'\r\n});\r\n//# sourceMappingURL=Panel.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, findIndex, getDocument, getFirstFocusable, getId, getLastFocusable, getNativeProps, isIOS, isMac, KeyCodes, mergeAriaAttributeValues } from '../../Utilities';\r\nimport { Callout } from '../../Callout';\r\nimport { Checkbox } from '../../Checkbox';\r\nimport { CommandButton } from '../../Button';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { DropdownMenuItemType } from './Dropdown.types';\r\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Label } from '../../Label';\r\nimport { KeytipData } from '../../KeytipData';\r\nimport { Panel } from '../../Panel';\r\nimport { ResponsiveMode, withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport { SelectableOptionMenuItemType } from '../../utilities/selectableOption/SelectableOption.types';\r\nvar getClassNames = classNamesFunction();\r\nvar DropdownBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DropdownBase, _super);\r\n    function DropdownBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._host = React.createRef();\r\n        _this._focusZone = React.createRef();\r\n        _this._dropDown = React.createRef();\r\n        _this._scrollIdleDelay = 250 /* ms */;\r\n        _this._sizePosCache = new DropdownSizePosCache();\r\n        /** Render text in dropdown input */\r\n        _this._onRenderTitle = function (item) {\r\n            var _a = _this.props.multiSelectDelimiter, multiSelectDelimiter = _a === void 0 ? ', ' : _a;\r\n            var displayTxt = item.map(function (i) { return i.text; }).join(multiSelectDelimiter);\r\n            return React.createElement(\"span\", null, displayTxt);\r\n        };\r\n        /** Render placeholder text in dropdown input */\r\n        _this._onRenderPlaceholder = function (props) {\r\n            if (!_this._placeholder) {\r\n                return null;\r\n            }\r\n            return React.createElement(\"span\", null, _this._placeholder);\r\n        };\r\n        /** Render Callout or Panel container and pass in list */\r\n        _this._onRenderContainer = function (props) {\r\n            var _a = _this.props, responsiveMode = _a.responsiveMode, calloutProps = _a.calloutProps, panelProps = _a.panelProps, dropdownWidth = _a.dropdownWidth;\r\n            var isSmall = responsiveMode <= ResponsiveMode.medium;\r\n            var panelStyles = _this._classNames.subComponentStyles\r\n                ? _this._classNames.subComponentStyles.panel\r\n                : undefined;\r\n            return isSmall ? (React.createElement(Panel, tslib_1.__assign({ isOpen: true, isLightDismiss: true, onDismissed: _this._onDismiss, hasCloseButton: false, styles: panelStyles }, panelProps), _this._renderFocusableList(props))) : (React.createElement(Callout, tslib_1.__assign({ isBeakVisible: false, gapSpace: 0, doNotLayer: false, directionalHintFixed: false, directionalHint: DirectionalHint.bottomLeftEdge }, calloutProps, { className: _this._classNames.callout, target: _this._dropDown.current, onDismiss: _this._onDismiss, onScroll: _this._onScroll, onPositioned: _this._onPositioned, calloutWidth: dropdownWidth || (_this._dropDown.current ? _this._dropDown.current.clientWidth : 0) }), _this._renderFocusableList(props)));\r\n        };\r\n        /** Render Caret Down Icon */\r\n        _this._onRenderCaretDown = function (props) {\r\n            return React.createElement(Icon, { className: _this._classNames.caretDown, iconName: \"ChevronDown\" });\r\n        };\r\n        /** Render List of items */\r\n        _this._onRenderList = function (props) {\r\n            var _a = _this.props.onRenderItem, onRenderItem = _a === void 0 ? _this._onRenderItem : _a;\r\n            return React.createElement(React.Fragment, null, _this.props.options.map(function (item, index) { return onRenderItem(tslib_1.__assign({}, item, { index: index }), _this._onRenderItem); }));\r\n        };\r\n        _this._onRenderItem = function (item) {\r\n            switch (item.itemType) {\r\n                case SelectableOptionMenuItemType.Divider:\r\n                    return _this._renderSeparator(item);\r\n                case SelectableOptionMenuItemType.Header:\r\n                    return _this._renderHeader(item);\r\n                default:\r\n                    return _this._renderOption(item);\r\n            }\r\n        };\r\n        _this._renderOption = function (item) {\r\n            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;\r\n            var _b = _this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;\r\n            var id = _this._id;\r\n            var isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\r\n            // select the right className based on the combination of selected/disabled\r\n            var itemClassName = isItemSelected && item.disabled === true // predicate: both selected and disabled\r\n                ? _this._classNames.dropdownItemSelectedAndDisabled\r\n                : isItemSelected // predicate: selected only\r\n                    ? _this._classNames.dropdownItemSelected\r\n                    : item.disabled === true // predicate: disabled only\r\n                        ? _this._classNames.dropdownItemDisabled\r\n                        : _this._classNames.dropdownItem;\r\n            return !_this.props.multiSelect ? (React.createElement(CommandButton, { id: id + '-list' + item.index, key: item.key, \"data-index\": item.index, \"data-is-focusable\": !item.disabled, disabled: item.disabled, className: itemClassName, onClick: _this._onItemClick(item), onMouseEnter: _this._onItemMouseEnter.bind(_this, item), onMouseLeave: _this._onMouseItemLeave.bind(_this, item), onMouseMove: _this._onItemMouseMove.bind(_this, item), role: \"option\", \"aria-selected\": isItemSelected ? 'true' : 'false', ariaLabel: item.ariaLabel, title: item.title ? item.title : item.text }, onRenderOption(item, _this._onRenderOption))) : (React.createElement(Checkbox, { id: id + '-list' + item.index, key: item.key, \"data-index\": item.index, \"data-is-focusable\": !item.disabled, disabled: item.disabled, onChange: _this._onItemClick(item), inputProps: {\r\n                    onMouseEnter: _this._onItemMouseEnter.bind(_this, item),\r\n                    onMouseLeave: _this._onMouseItemLeave.bind(_this, item),\r\n                    onMouseMove: _this._onItemMouseMove.bind(_this, item)\r\n                }, label: item.text, title: item.title ? item.title : item.text, onRenderLabel: _this._onRenderLabel.bind(_this, item), className: itemClassName, role: \"option\", \"aria-selected\": isItemSelected ? 'true' : 'false', checked: isItemSelected }));\r\n        };\r\n        /** Render content of item (i.e. text/icon inside of button) */\r\n        _this._onRenderOption = function (item) {\r\n            return React.createElement(\"span\", { className: _this._classNames.dropdownOptionText }, item.text);\r\n        };\r\n        /** Render custom label for drop down item */\r\n        _this._onRenderLabel = function (item) {\r\n            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;\r\n            return onRenderOption(item, _this._onRenderOption);\r\n        };\r\n        _this._onPositioned = function (positions) {\r\n            if (_this._focusZone.current) {\r\n                // Focusing an element can trigger a reflow. Making this wait until there is an animation\r\n                // frame can improve perf significantly.\r\n                _this._async.requestAnimationFrame(function () {\r\n                    var selectedIndices = _this.state.selectedIndices;\r\n                    if (selectedIndices && selectedIndices[0] && !_this.props.options[selectedIndices[0]].disabled) {\r\n                        var element = getDocument().querySelector(\"#\" + _this._id + \"-list\" + selectedIndices[0]);\r\n                        _this._focusZone.current.focusElement(element);\r\n                    }\r\n                    else {\r\n                        _this._focusZone.current.focus();\r\n                    }\r\n                });\r\n            }\r\n            if (!_this.state.calloutRenderEdge || _this.state.calloutRenderEdge !== positions.targetEdge) {\r\n                _this.setState({\r\n                    calloutRenderEdge: positions.targetEdge\r\n                });\r\n            }\r\n        };\r\n        _this._onItemClick = function (item) {\r\n            return function (event) {\r\n                if (!item.disabled) {\r\n                    _this.setSelectedIndex(event, item.index);\r\n                    if (!_this.props.multiSelect) {\r\n                        // only close the callout when it's in single-select mode\r\n                        _this.setState({\r\n                            isOpen: false\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         * Scroll handler for the callout to make sure the mouse events\r\n         * for updating focus are not interacting during scroll\r\n         */\r\n        _this._onScroll = function () {\r\n            if (!_this._isScrollIdle && _this._scrollIdleTimeoutId !== undefined) {\r\n                _this._async.clearTimeout(_this._scrollIdleTimeoutId);\r\n                _this._scrollIdleTimeoutId = undefined;\r\n            }\r\n            else {\r\n                _this._isScrollIdle = false;\r\n            }\r\n            _this._scrollIdleTimeoutId = _this._async.setTimeout(function () {\r\n                _this._isScrollIdle = true;\r\n            }, _this._scrollIdleDelay);\r\n        };\r\n        _this._onMouseItemLeave = function (item, ev) {\r\n            if (_this._shouldIgnoreMouseEvent()) {\r\n                return;\r\n            }\r\n            /**\r\n             * IE11 focus() method forces parents to scroll to top of element.\r\n             * Edge and IE expose a setActive() function for focusable divs that\r\n             * sets the page focus but does not scroll the parent element.\r\n             */\r\n            if (_this._host.current) {\r\n                if (_this._host.current.setActive) {\r\n                    try {\r\n                        _this._host.current.setActive();\r\n                    }\r\n                    catch (e) {\r\n                        /* no-op */\r\n                    }\r\n                }\r\n                else {\r\n                    _this._host.current.focus();\r\n                }\r\n            }\r\n        };\r\n        _this._onDismiss = function () {\r\n            _this.setState({ isOpen: false });\r\n            if (_this._dropDown.current) {\r\n                _this._dropDown.current.focus();\r\n            }\r\n        };\r\n        _this._onDropdownBlur = function (ev) {\r\n            // If Dropdown disabled do not proceed with this logic.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            // hasFocus tracks whether the root element has focus so always update the state.\r\n            _this.setState({ hasFocus: false });\r\n            if (_this.state.isOpen) {\r\n                // Do not onBlur when the callout is opened\r\n                return;\r\n            }\r\n            if (_this.props.onBlur) {\r\n                _this.props.onBlur(ev);\r\n            }\r\n        };\r\n        _this._onDropdownKeyDown = function (ev) {\r\n            // If Dropdown disabled do not process any keyboard events.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            // Take note if we are processing an alt (option) or meta (command) keydown.\r\n            // See comment in _shouldHandleKeyUp for reasoning.\r\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\r\n            if (_this.props.onKeyDown) {\r\n                _this.props.onKeyDown(ev);\r\n                if (ev.defaultPrevented) {\r\n                    return;\r\n                }\r\n            }\r\n            var newIndex;\r\n            var selectedIndex = _this.state.selectedIndices.length ? _this.state.selectedIndices[0] : -1;\r\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\r\n            var isOpen = _this.state.isOpen;\r\n            switch (ev.which) {\r\n                case KeyCodes.enter:\r\n                    _this.setState({\r\n                        isOpen: !isOpen\r\n                    });\r\n                    break;\r\n                case KeyCodes.escape:\r\n                    if (!isOpen) {\r\n                        return;\r\n                    }\r\n                    _this.setState({\r\n                        isOpen: false\r\n                    });\r\n                    break;\r\n                case KeyCodes.up:\r\n                    if (containsExpandCollapseModifier) {\r\n                        if (isOpen) {\r\n                            _this.setState({ isOpen: false });\r\n                            break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (_this.props.multiSelect) {\r\n                        _this.setState({ isOpen: true });\r\n                    }\r\n                    else if (!_this._isDisabled()) {\r\n                        newIndex = _this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.down:\r\n                    if (containsExpandCollapseModifier) {\r\n                        ev.stopPropagation();\r\n                        ev.preventDefault();\r\n                    }\r\n                    if ((containsExpandCollapseModifier && !isOpen) || _this.props.multiSelect) {\r\n                        _this.setState({ isOpen: true });\r\n                    }\r\n                    else if (!_this._isDisabled()) {\r\n                        newIndex = _this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.home:\r\n                    if (!_this.props.multiSelect) {\r\n                        newIndex = _this._moveIndex(ev, 1, 0, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.end:\r\n                    if (!_this.props.multiSelect) {\r\n                        newIndex = _this._moveIndex(ev, -1, _this.props.options.length - 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.space:\r\n                    // event handled in _onDropdownKeyUp\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            if (newIndex !== selectedIndex) {\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n            }\r\n        };\r\n        _this._onDropdownKeyUp = function (ev) {\r\n            // If Dropdown disabled do not process any keyboard events.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\r\n            var isOpen = _this.state.isOpen;\r\n            if (_this.props.onKeyUp) {\r\n                _this.props.onKeyUp(ev);\r\n                if (ev.preventDefault) {\r\n                    return;\r\n                }\r\n            }\r\n            switch (ev.which) {\r\n                case KeyCodes.space:\r\n                    _this.setState({\r\n                        isOpen: !isOpen\r\n                    });\r\n                    break;\r\n                default:\r\n                    if (shouldHandleKey && isOpen) {\r\n                        _this.setState({ isOpen: false });\r\n                    }\r\n                    return;\r\n            }\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n        };\r\n        _this._onZoneKeyDown = function (ev) {\r\n            var elementToFocus;\r\n            // Take note if we are processing an alt (option) or meta (command) keydown.\r\n            // See comment in _shouldHandleKeyUp for reasoning.\r\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\r\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\r\n            switch (ev.which) {\r\n                case KeyCodes.up:\r\n                    if (containsExpandCollapseModifier) {\r\n                        _this.setState({ isOpen: false });\r\n                    }\r\n                    else {\r\n                        if (_this._host.current) {\r\n                            elementToFocus = getLastFocusable(_this._host.current, _this._host.current.lastChild, true);\r\n                        }\r\n                    }\r\n                    break;\r\n                // All directional keystrokes should be canceled when the zone is rendered.\r\n                // This avoids the body scroll from reacting and thus dismissing the dropdown.\r\n                case KeyCodes.home:\r\n                case KeyCodes.end:\r\n                case KeyCodes.pageUp:\r\n                case KeyCodes.pageDown:\r\n                    break;\r\n                case KeyCodes.down:\r\n                    if (!containsExpandCollapseModifier && _this._host.current) {\r\n                        elementToFocus = getFirstFocusable(_this._host.current, _this._host.current.firstChild, true);\r\n                    }\r\n                    break;\r\n                case KeyCodes.escape:\r\n                    _this.setState({ isOpen: false });\r\n                    break;\r\n                case KeyCodes.tab:\r\n                    _this.setState({ isOpen: false });\r\n                    return;\r\n                default:\r\n                    return;\r\n            }\r\n            if (elementToFocus) {\r\n                elementToFocus.focus();\r\n            }\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n        };\r\n        _this._onZoneKeyUp = function (ev) {\r\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\r\n            if (shouldHandleKey && _this.state.isOpen) {\r\n                _this.setState({ isOpen: false });\r\n                ev.preventDefault();\r\n            }\r\n        };\r\n        _this._onDropdownClick = function (ev) {\r\n            if (_this.props.onClick) {\r\n                _this.props.onClick(ev);\r\n                if (ev.preventDefault) {\r\n                    return;\r\n                }\r\n            }\r\n            var isOpen = _this.state.isOpen;\r\n            var disabled = _this._isDisabled();\r\n            if (!disabled) {\r\n                _this.setState({\r\n                    isOpen: !isOpen\r\n                });\r\n            }\r\n        };\r\n        _this._onFocus = function (ev) {\r\n            var _a = _this.state, isOpen = _a.isOpen, selectedIndices = _a.selectedIndices;\r\n            var multiSelect = _this.props.multiSelect;\r\n            var disabled = _this._isDisabled();\r\n            if (!disabled) {\r\n                if (!isOpen && selectedIndices.length === 0 && !multiSelect) {\r\n                    // Per aria\r\n                    _this._moveIndex(ev, 1, 0, -1);\r\n                }\r\n                if (_this.props.onFocus) {\r\n                    _this.props.onFocus(ev);\r\n                }\r\n                _this.setState({ hasFocus: true });\r\n            }\r\n        };\r\n        /**\r\n         * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\r\n         * This helper method avoids all the repetition.\r\n         */\r\n        _this._isDisabled = function () {\r\n            var disabled = _this.props.disabled;\r\n            var isDisabled = _this.props.isDisabled;\r\n            // Remove this deprecation workaround at 1.0.0\r\n            if (isDisabled !== undefined) {\r\n                disabled = isDisabled;\r\n            }\r\n            return disabled;\r\n        };\r\n        _this._warnDeprecations({\r\n            isDisabled: 'disabled',\r\n            onChanged: 'onChange',\r\n            placeHolder: 'placeholder'\r\n        });\r\n        _this._warnMutuallyExclusive({\r\n            defaultSelectedKey: 'selectedKey',\r\n            defaultSelectedKeys: 'selectedKeys',\r\n            selectedKeys: 'selectedKey',\r\n            multiSelect: 'defaultSelectedKey',\r\n            selectedKey: 'multiSelect'\r\n        });\r\n        _this._id = props.id || getId('Dropdown');\r\n        _this._isScrollIdle = true;\r\n        var selectedIndices;\r\n        if (_this.props.multiSelect) {\r\n            var selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\r\n            selectedIndices = _this._getSelectedIndexes(props.options, selectedKeys);\r\n        }\r\n        else {\r\n            var selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\r\n            selectedIndices = _this._getSelectedIndexes(props.options, selectedKey);\r\n            _this._sizePosCache.updateOptions(props.options);\r\n        }\r\n        _this.state = {\r\n            isOpen: false,\r\n            selectedIndices: selectedIndices,\r\n            hasFocus: false,\r\n            calloutRenderEdge: undefined\r\n        };\r\n        return _this;\r\n    }\r\n    DropdownBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        // In controlled component usage where selectedKey is provided, update the selectedIndex\r\n        // state if the key or options change.\r\n        var selectedKeyProp;\r\n        // this does a shallow compare (assumes options are pure), for the purposes of determining whether\r\n        // defaultSelectedKey/defaultSelectedKeys are respected.\r\n        var didOptionsChange = newProps.options !== this.props.options;\r\n        if (newProps.multiSelect) {\r\n            if (didOptionsChange && newProps.defaultSelectedKeys !== undefined) {\r\n                selectedKeyProp = 'defaultSelectedKeys';\r\n            }\r\n            else {\r\n                selectedKeyProp = 'selectedKeys';\r\n            }\r\n        }\r\n        else {\r\n            if (didOptionsChange && newProps.defaultSelectedKey !== undefined) {\r\n                selectedKeyProp = 'defaultSelectedKey';\r\n            }\r\n            else {\r\n                selectedKeyProp = 'selectedKey';\r\n            }\r\n        }\r\n        if (newProps[selectedKeyProp] !== undefined && (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || didOptionsChange)) {\r\n            this.setState({\r\n                selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp])\r\n            });\r\n        }\r\n        if (newProps.options !== this.props.options && // preexisting code assumes purity of the options...\r\n            !newProps.multiSelect // only relevant in single selection\r\n        ) {\r\n            this._sizePosCache.updateOptions(newProps.options);\r\n        }\r\n    };\r\n    DropdownBase.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (prevState.isOpen === true && this.state.isOpen === false) {\r\n            this._gotMouseMove = false;\r\n            if (this._dropDown.current) {\r\n                this._dropDown.current.focus();\r\n            }\r\n            if (this.props.onDismiss) {\r\n                this.props.onDismiss();\r\n            }\r\n        }\r\n    };\r\n    DropdownBase.prototype.render = function () {\r\n        var _this = this;\r\n        var id = this._id;\r\n        var _a = this.props, className = _a.className, label = _a.label, options = _a.options, ariaLabel = _a.ariaLabel, required = _a.required, errorMessage = _a.errorMessage, multiSelect = _a.multiSelect, keytipProps = _a.keytipProps, propStyles = _a.styles, theme = _a.theme, panelProps = _a.panelProps, calloutProps = _a.calloutProps, _b = _a.onRenderTitle, onRenderTitle = _b === void 0 ? this._onRenderTitle : _b, _c = _a.onRenderContainer, onRenderContainer = _c === void 0 ? this._onRenderContainer : _c, _d = _a.onRenderPlaceHolder, onRenderPlaceHolder = _d === void 0 ? this._onRenderPlaceholder : _d, _e = _a.onRenderCaretDown, onRenderCaretDown = _e === void 0 ? this._onRenderCaretDown : _e;\r\n        var _f = this.state, isOpen = _f.isOpen, selectedIndices = _f.selectedIndices, hasFocus = _f.hasFocus, calloutRenderEdge = _f.calloutRenderEdge;\r\n        var selectedOptions = this._getAllSelectedOptions(options, selectedIndices);\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        var disabled = this._isDisabled();\r\n        var optionId = id + '-option';\r\n        var ariaAttrs = multiSelect || disabled\r\n            ? {\r\n                role: undefined,\r\n                ariaActiveDescendant: undefined,\r\n                childRole: undefined,\r\n                ariaSetSize: undefined,\r\n                ariaPosInSet: undefined,\r\n                ariaSelected: undefined\r\n            }\r\n            : // single select\r\n                {\r\n                    role: 'listbox',\r\n                    ariaActiveDescendant: isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0 ? this._id + '-list' + selectedIndices[0] : optionId,\r\n                    childRole: 'option',\r\n                    ariaSetSize: this._sizePosCache.optionSetSize,\r\n                    ariaPosInSet: this._sizePosCache.positionInSet(selectedIndices[0]),\r\n                    ariaSelected: selectedIndices[0] === undefined ? undefined : true\r\n                };\r\n        this._classNames = getClassNames(propStyles, {\r\n            theme: theme,\r\n            className: className,\r\n            hasError: Boolean(errorMessage && errorMessage.length > 0),\r\n            isOpen: isOpen,\r\n            required: required,\r\n            disabled: disabled,\r\n            isRenderingPlaceholder: !selectedOptions.length,\r\n            panelClassName: !!panelProps ? panelProps.className : undefined,\r\n            calloutClassName: !!calloutProps ? calloutProps.className : undefined,\r\n            calloutRenderEdge: calloutRenderEdge\r\n        });\r\n        var labelStyles = this._classNames.subComponentStyles\r\n            ? this._classNames.subComponentStyles.label\r\n            : undefined;\r\n        return (React.createElement(\"div\", { className: this._classNames.root },\r\n            label && (React.createElement(Label, { className: this._classNames.label, id: id + '-label', htmlFor: id, required: required, styles: labelStyles }, label)),\r\n            React.createElement(KeytipData, { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"div\", tslib_1.__assign({}, keytipAttributes, { \"data-is-focusable\": !disabled, ref: _this._dropDown, id: id, tabIndex: disabled ? -1 : 0, \"aria-expanded\": isOpen ? 'true' : 'false', role: ariaAttrs.role, \"aria-label\": ariaLabel, \"aria-labelledby\": label && !ariaLabel ? id + '-label' : undefined, \"aria-describedby\": mergeAriaAttributeValues(optionId, keytipAttributes['aria-describedby']), \"aria-activedescendant\": isOpen ? ariaAttrs.ariaActiveDescendant : undefined, \"aria-required\": required, \"aria-disabled\": disabled, \"aria-owns\": isOpen ? id + '-list' : undefined }, divProps, { className: _this._classNames.dropdown, onBlur: _this._onDropdownBlur, onKeyDown: _this._onDropdownKeyDown, onKeyUp: _this._onDropdownKeyUp, onClick: _this._onDropdownClick, onFocus: _this._onFocus }),\r\n                React.createElement(\"span\", { id: optionId, className: _this._classNames.title, \"aria-atomic\": true, role: ariaAttrs.childRole, \"aria-live\": !hasFocus || disabled || multiSelect || isOpen ? 'off' : 'assertive', \"aria-label\": selectedOptions.length ? selectedOptions[0].text : _this._placeholder, \"aria-setsize\": ariaAttrs.ariaSetSize, \"aria-posinset\": ariaAttrs.ariaPosInSet, \"aria-selected\": ariaAttrs.ariaSelected }, // If option is selected render title, otherwise render the placeholder text\r\n                selectedOptions.length\r\n                    ? onRenderTitle(selectedOptions, _this._onRenderTitle)\r\n                    : onRenderPlaceHolder(_this.props, _this._onRenderPlaceholder)),\r\n                React.createElement(\"span\", { className: _this._classNames.caretDownWrapper }, onRenderCaretDown(_this.props, _this._onRenderCaretDown)))); }),\r\n            isOpen && onRenderContainer(this.props, this._onRenderContainer),\r\n            errorMessage && errorMessage.length > 0 && React.createElement(\"div\", { className: this._classNames.errorMessage }, errorMessage)));\r\n    };\r\n    DropdownBase.prototype.focus = function (shouldOpenOnFocus) {\r\n        if (this._dropDown.current && this._dropDown.current.tabIndex !== -1) {\r\n            this._dropDown.current.focus();\r\n            if (shouldOpenOnFocus) {\r\n                this.setState({\r\n                    isOpen: true\r\n                });\r\n            }\r\n        }\r\n    };\r\n    DropdownBase.prototype.setSelectedIndex = function (event, index) {\r\n        var _a = this.props, onChange = _a.onChange, onChanged = _a.onChanged, options = _a.options, selectedKey = _a.selectedKey, selectedKeys = _a.selectedKeys, multiSelect = _a.multiSelect, notifyOnReselect = _a.notifyOnReselect;\r\n        var _b = this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;\r\n        var checked = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\r\n        index = Math.max(0, Math.min(options.length - 1, index));\r\n        if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\r\n            return;\r\n        }\r\n        else if (!multiSelect && selectedKey === undefined) {\r\n            // Set the selected option if this is an uncontrolled component\r\n            this.setState({\r\n                selectedIndices: [index]\r\n            });\r\n        }\r\n        else if (multiSelect && selectedKeys === undefined) {\r\n            var newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\r\n            if (checked) {\r\n                var position = newIndexes.indexOf(index);\r\n                if (position > -1) {\r\n                    // unchecked the current one\r\n                    newIndexes.splice(position, 1);\r\n                }\r\n            }\r\n            else {\r\n                // add the new selected index into the existing one\r\n                newIndexes.push(index);\r\n            }\r\n            this.setState({\r\n                selectedIndices: newIndexes\r\n            });\r\n        }\r\n        if (onChange) {\r\n            // for single-select, option passed in will always be selected.\r\n            // for multi-select, flip the checked value\r\n            var changedOpt = multiSelect ? tslib_1.__assign({}, options[index], { selected: !checked }) : options[index];\r\n            onChange(event, changedOpt, index);\r\n        }\r\n        if (onChanged) {\r\n            // for single-select, option passed in will always be selected.\r\n            // for multi-select, flip the checked value\r\n            var changedOpt = multiSelect ? tslib_1.__assign({}, options[index], { selected: !checked }) : options[index];\r\n            onChanged(changedOpt, index);\r\n        }\r\n    };\r\n    Object.defineProperty(DropdownBase.prototype, \"_placeholder\", {\r\n        /** Get either props.placeholder (new name) or props.placeHolder (old name) */\r\n        get: function () {\r\n            return this.props.placeholder || this.props.placeHolder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DropdownBase.prototype._copyArray = function (array) {\r\n        var newArray = [];\r\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\r\n            var element = array_1[_i];\r\n            newArray.push(element);\r\n        }\r\n        return newArray;\r\n    };\r\n    /**\r\n     * Finds the next valid Dropdown option and sets the selected index to it.\r\n     * @param stepValue Value of how many items the function should traverse.  Should be -1 or 1.\r\n     * @param index Index of where the search should start\r\n     * @param selectedIndex The selectedIndex Dropdown's state\r\n     * @returns The next valid dropdown option's index\r\n     */\r\n    DropdownBase.prototype._moveIndex = function (event, stepValue, index, selectedIndex) {\r\n        var options = this.props.options;\r\n        // Return selectedIndex if nothing has changed or options is empty\r\n        if (selectedIndex === index || options.length === 0) {\r\n            return selectedIndex;\r\n        }\r\n        // Set starting index to 0 if index is < 0\r\n        if (index < 0) {\r\n            index = 0;\r\n        }\r\n        // Set starting index to last option index if greater than options.length\r\n        if (index >= options.length) {\r\n            index = options.length - 1;\r\n        }\r\n        var stepCounter = 0;\r\n        // If current index is a header or divider, or disabled, increment by step\r\n        while (options[index].itemType === DropdownMenuItemType.Header ||\r\n            options[index].itemType === DropdownMenuItemType.Divider ||\r\n            options[index].disabled) {\r\n            // If stepCounter exceeds length of options, then return selectedIndex (-1)\r\n            if (stepCounter >= options.length) {\r\n                return selectedIndex;\r\n            }\r\n            // If index + stepValue is out of bounds, wrap around\r\n            if (index + stepValue < 0) {\r\n                index = options.length;\r\n            }\r\n            else if (index + stepValue >= options.length) {\r\n                index = -1;\r\n            }\r\n            index = index + stepValue;\r\n            stepCounter++;\r\n        }\r\n        this.setSelectedIndex(event, index);\r\n        return index;\r\n    };\r\n    /** Wrap item list in a FocusZone */\r\n    DropdownBase.prototype._renderFocusableList = function (props) {\r\n        var _a = props.onRenderList, onRenderList = _a === void 0 ? this._onRenderList : _a, label = props.label;\r\n        var id = this._id;\r\n        return (React.createElement(\"div\", { className: this._classNames.dropdownItemsWrapper, onKeyDown: this._onZoneKeyDown, onKeyUp: this._onZoneKeyUp, ref: this._host, tabIndex: 0 },\r\n            React.createElement(FocusZone, { ref: this._focusZone, direction: FocusZoneDirection.vertical, id: id + '-list', className: this._classNames.dropdownItems, \"aria-labelledby\": label ? id + '-label' : undefined, role: \"listbox\" }, onRenderList(props, this._onRenderList))));\r\n    };\r\n    DropdownBase.prototype._renderSeparator = function (item) {\r\n        var index = item.index, key = item.key;\r\n        if (index > 0) {\r\n            return React.createElement(\"div\", { role: \"separator\", key: key, className: this._classNames.dropdownDivider });\r\n        }\r\n        return null;\r\n    };\r\n    DropdownBase.prototype._renderHeader = function (item) {\r\n        var _a = this.props.onRenderOption, onRenderOption = _a === void 0 ? this._onRenderOption : _a;\r\n        var key = item.key;\r\n        return (React.createElement(\"div\", { key: key, className: this._classNames.dropdownItemHeader }, onRenderOption(item, this._onRenderOption)));\r\n    };\r\n    DropdownBase.prototype._onItemMouseEnter = function (item, ev) {\r\n        if (this._shouldIgnoreMouseEvent()) {\r\n            return;\r\n        }\r\n        var targetElement = ev.currentTarget;\r\n        targetElement.focus();\r\n    };\r\n    DropdownBase.prototype._onItemMouseMove = function (item, ev) {\r\n        var targetElement = ev.currentTarget;\r\n        this._gotMouseMove = true;\r\n        if (!this._isScrollIdle || document.activeElement === targetElement) {\r\n            return;\r\n        }\r\n        targetElement.focus();\r\n    };\r\n    DropdownBase.prototype._shouldIgnoreMouseEvent = function () {\r\n        return !this._isScrollIdle || !this._gotMouseMove;\r\n    };\r\n    /** Get all selected indexes for multi-select mode */\r\n    DropdownBase.prototype._getSelectedIndexes = function (options, selectedKey) {\r\n        if (selectedKey === undefined) {\r\n            if (this.props.multiSelect) {\r\n                return this._getAllSelectedIndices(options);\r\n            }\r\n            var selectedIndex = this._getSelectedIndex(options, null);\r\n            return selectedIndex !== -1 ? [selectedIndex] : [];\r\n        }\r\n        else if (!Array.isArray(selectedKey)) {\r\n            return [this._getSelectedIndex(options, selectedKey)];\r\n        }\r\n        var selectedIndices = [];\r\n        for (var _i = 0, selectedKey_1 = selectedKey; _i < selectedKey_1.length; _i++) {\r\n            var key = selectedKey_1[_i];\r\n            selectedIndices.push(this._getSelectedIndex(options, key));\r\n        }\r\n        return selectedIndices;\r\n    };\r\n    /** Get all selected options for multi-select mode */\r\n    DropdownBase.prototype._getAllSelectedOptions = function (options, selectedIndices) {\r\n        var selectedOptions = [];\r\n        for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {\r\n            var index = selectedIndices_1[_i];\r\n            var option = options[index];\r\n            if (option) {\r\n                selectedOptions.push(option);\r\n            }\r\n        }\r\n        return selectedOptions;\r\n    };\r\n    DropdownBase.prototype._getAllSelectedIndices = function (options) {\r\n        return options.map(function (option, index) { return (option.selected ? index : -1); }).filter(function (index) { return index !== -1; });\r\n    };\r\n    DropdownBase.prototype._getSelectedIndex = function (options, selectedKey) {\r\n        return findIndex(options, function (option) {\r\n            // tslint:disable-next-line:triple-equals\r\n            if (selectedKey != null) {\r\n                return option.key === selectedKey;\r\n            }\r\n            else {\r\n                return !!option.isSelected || !!option.selected;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\r\n     */\r\n    DropdownBase.prototype._isAltOrMeta = function (ev) {\r\n        return ev.which === KeyCodes.alt || ev.key === 'Meta';\r\n    };\r\n    /**\r\n     * We close the menu on key up only if ALL of the following are true:\r\n     * - Most recent key down was alt or meta (command)\r\n     * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\r\n     *   expand/collapse the menu)\r\n     * - We're not on a Mac (or iOS)\r\n     *\r\n     * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\r\n     * closing any open context menus. There is not a similar behavior on Macs.\r\n     */\r\n    DropdownBase.prototype._shouldHandleKeyUp = function (ev) {\r\n        var keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\r\n        this._lastKeyDownWasAltOrMeta = false;\r\n        return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\r\n    };\r\n    DropdownBase.defaultProps = {\r\n        options: []\r\n    };\r\n    DropdownBase = tslib_1.__decorate([\r\n        withResponsiveMode\r\n    ], DropdownBase);\r\n    return DropdownBase;\r\n}(BaseComponent));\r\nexport { DropdownBase };\r\n//# sourceMappingURL=Dropdown.base.js.map","import { styled } from '../../Utilities';\r\nimport { DropdownBase } from './Dropdown.base';\r\nimport { getStyles } from './Dropdown.styles';\r\nexport var Dropdown = styled(DropdownBase, getStyles, undefined, {\r\n    scope: 'Dropdown'\r\n});\r\n//# sourceMappingURL=Dropdown.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { BaseComponent, classNamesFunction, divProperties, elementContains, focusFirstChild, getNativeProps } from '../../Utilities';\r\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\r\nvar getClassNames = classNamesFunction();\r\nvar OverflowSetBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OverflowSetBase, _super);\r\n    function OverflowSetBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._focusZone = React.createRef();\r\n        _this._persistedKeytips = {};\r\n        _this._keytipManager = KeytipManager.getInstance();\r\n        _this._divContainer = React.createRef();\r\n        _this._onRenderItems = function (items) {\r\n            return items.map(function (item, i) {\r\n                var wrapperDivProps = {\r\n                    className: _this._classNames.item\r\n                };\r\n                return (React.createElement(\"div\", tslib_1.__assign({ key: item.key }, wrapperDivProps), _this.props.onRenderItem(item)));\r\n            });\r\n        };\r\n        _this._onRenderOverflowButtonWrapper = function (items) {\r\n            var wrapperDivProps = {\r\n                className: _this._classNames.overflowButton\r\n            };\r\n            var overflowKeytipSequences = _this.props.keytipSequences;\r\n            var newOverflowItems = [];\r\n            if (overflowKeytipSequences) {\r\n                items.forEach(function (overflowItem) {\r\n                    var keytip = overflowItem.keytipProps;\r\n                    if (keytip) {\r\n                        // Create persisted keytip\r\n                        var persistedKeytip = {\r\n                            content: keytip.content,\r\n                            keySequences: keytip.keySequences,\r\n                            disabled: keytip.disabled || !!(overflowItem.disabled || overflowItem.isDisabled),\r\n                            hasDynamicChildren: keytip.hasDynamicChildren,\r\n                            hasMenu: keytip.hasMenu\r\n                        };\r\n                        if (keytip.hasDynamicChildren || _this._getSubMenuForItem(overflowItem)) {\r\n                            // If the keytip has a submenu or children nodes, change onExecute to persistedKeytipExecute\r\n                            persistedKeytip.onExecute = _this._keytipManager.menuExecute.bind(_this._keytipManager, overflowKeytipSequences, overflowItem.keytipProps.keySequences);\r\n                        }\r\n                        else {\r\n                            // If the keytip doesn't have a submenu, just execute the original function\r\n                            persistedKeytip.onExecute = keytip.onExecute;\r\n                        }\r\n                        // Add this persisted keytip to our internal list, use a temporary uniqueID (its content)\r\n                        // uniqueID will get updated on register\r\n                        _this._persistedKeytips[persistedKeytip.content] = persistedKeytip;\r\n                        // Add the overflow sequence to this item\r\n                        var newOverflowItem = tslib_1.__assign({}, overflowItem, { keytipProps: tslib_1.__assign({}, keytip, { overflowSetSequence: overflowKeytipSequences }) });\r\n                        newOverflowItems.push(newOverflowItem);\r\n                    }\r\n                    else {\r\n                        // Nothing to change, add overflowItem to list\r\n                        newOverflowItems.push(overflowItem);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                newOverflowItems = items;\r\n            }\r\n            return React.createElement(\"div\", tslib_1.__assign({}, wrapperDivProps), _this.props.onRenderOverflowButton(newOverflowItems));\r\n        };\r\n        if (props.doNotContainWithinFocusZone) {\r\n            _this._warnMutuallyExclusive({\r\n                doNotContainWithinFocusZone: 'focusZoneProps'\r\n            });\r\n        }\r\n        return _this;\r\n    }\r\n    OverflowSetBase.prototype.render = function () {\r\n        var _a = this.props, items = _a.items, overflowItems = _a.overflowItems, className = _a.className, focusZoneProps = _a.focusZoneProps, styles = _a.styles, vertical = _a.vertical, role = _a.role, doNotContainWithinFocusZone = _a.doNotContainWithinFocusZone;\r\n        this._classNames = getClassNames(styles, { className: className, vertical: vertical });\r\n        var Tag;\r\n        var uniqueComponentProps;\r\n        if (doNotContainWithinFocusZone) {\r\n            Tag = 'div';\r\n            uniqueComponentProps = tslib_1.__assign({}, getNativeProps(this.props, divProperties), { ref: this._divContainer });\r\n        }\r\n        else {\r\n            Tag = FocusZone;\r\n            uniqueComponentProps = tslib_1.__assign({}, getNativeProps(this.props, divProperties), focusZoneProps, { componentRef: this._focusZone, direction: vertical ? FocusZoneDirection.vertical : FocusZoneDirection.horizontal });\r\n        }\r\n        return (React.createElement(Tag, tslib_1.__assign({}, uniqueComponentProps, { className: this._classNames.root, role: role }),\r\n            items && this._onRenderItems(items),\r\n            overflowItems && overflowItems.length > 0 && this._onRenderOverflowButtonWrapper(overflowItems)));\r\n    };\r\n    /**\r\n     * Sets focus to the first tabbable item in the OverflowSet.\r\n     * @param forceIntoFirstElement - If true, focus will be forced into the first element,\r\n     * even if focus is already in theOverflowSet\r\n     * @returns True if focus could be set to an active element, false if no operation was taken.\r\n     */\r\n    OverflowSetBase.prototype.focus = function (forceIntoFirstElement) {\r\n        var focusSucceeded = false;\r\n        if (this.props.doNotContainWithinFocusZone) {\r\n            if (this._divContainer.current) {\r\n                focusSucceeded = focusFirstChild(this._divContainer.current);\r\n            }\r\n        }\r\n        else if (this._focusZone.current) {\r\n            focusSucceeded = this._focusZone.current.focus(forceIntoFirstElement);\r\n        }\r\n        return focusSucceeded;\r\n    };\r\n    /**\r\n     * Sets focus to a specific child element within the OverflowSet.\r\n     * @param childElement - The child element within the zone to focus.\r\n     * @returns True if focus could be set to an active element, false if no operation was taken.\r\n     */\r\n    OverflowSetBase.prototype.focusElement = function (childElement) {\r\n        var focusSucceeded = false;\r\n        if (!childElement) {\r\n            return false;\r\n        }\r\n        if (this.props.doNotContainWithinFocusZone) {\r\n            if (this._divContainer.current && elementContains(this._divContainer.current, childElement)) {\r\n                childElement.focus();\r\n                focusSucceeded = document.activeElement === childElement;\r\n            }\r\n        }\r\n        else if (this._focusZone.current) {\r\n            focusSucceeded = this._focusZone.current.focusElement(childElement);\r\n        }\r\n        return focusSucceeded;\r\n    };\r\n    // Add keytip register/unregister handlers to lifecycle functions to correctly manage persisted keytips\r\n    OverflowSetBase.prototype.componentDidMount = function () {\r\n        this._registerPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentWillUnmount = function () {\r\n        this._unregisterPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentWillUpdate = function () {\r\n        this._unregisterPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentDidUpdate = function () {\r\n        this._registerPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype._registerPersistedKeytips = function () {\r\n        var _this = this;\r\n        Object.keys(this._persistedKeytips).forEach(function (key) {\r\n            var keytip = _this._persistedKeytips[key];\r\n            var uniqueID = _this._keytipManager.register(keytip, true);\r\n            // Update map\r\n            _this._persistedKeytips[uniqueID] = keytip;\r\n            delete _this._persistedKeytips[key];\r\n        });\r\n    };\r\n    OverflowSetBase.prototype._unregisterPersistedKeytips = function () {\r\n        var _this = this;\r\n        // Delete all persisted keytips saved\r\n        Object.keys(this._persistedKeytips).forEach(function (uniqueID) {\r\n            _this._keytipManager.unregister(_this._persistedKeytips[uniqueID], uniqueID, true);\r\n        });\r\n        this._persistedKeytips = {};\r\n    };\r\n    /**\r\n     * Gets the subMenu for an overflow item\r\n     * Checks if itemSubMenuProvider has been defined, if not defaults to subMenuProps\r\n     */\r\n    OverflowSetBase.prototype._getSubMenuForItem = function (item) {\r\n        if (this.props.itemSubMenuProvider) {\r\n            return this.props.itemSubMenuProvider(item);\r\n        }\r\n        if (item.subMenuProps) {\r\n            return item.subMenuProps.items;\r\n        }\r\n        return undefined;\r\n    };\r\n    OverflowSetBase.defaultProps = {\r\n        vertical: false,\r\n        role: 'menubar'\r\n    };\r\n    return OverflowSetBase;\r\n}(BaseComponent));\r\nexport { OverflowSetBase };\r\n//# sourceMappingURL=OverflowSet.base.js.map","var overflowItemStyle = {\r\n    flexShrink: 0,\r\n    display: 'inherit'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, vertical = props.vertical;\r\n    return {\r\n        root: [\r\n            'ms-OverflowSet',\r\n            {\r\n                position: 'relative',\r\n                display: 'flex',\r\n                flexWrap: 'nowrap'\r\n            },\r\n            vertical && { flexDirection: 'column' },\r\n            className\r\n        ],\r\n        item: ['ms-OverflowSet-item', overflowItemStyle],\r\n        overflowButton: ['ms-OverflowSet-overflowButton', overflowItemStyle]\r\n    };\r\n};\r\n//# sourceMappingURL=OverflowSet.styles.js.map","import { styled } from '../../Utilities';\r\nimport { OverflowSetBase } from './OverflowSet.base';\r\nimport { getStyles } from './OverflowSet.styles';\r\nexport var OverflowSet = styled(OverflowSetBase, getStyles, undefined, {\r\n    scope: 'OverflowSet'\r\n});\r\n//# sourceMappingURL=OverflowSet.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { BaseComponent, divProperties, getNativeProps, provideContext } from '../../Utilities';\r\nvar RESIZE_DELAY = 16;\r\n/**\r\n * Returns a simple object is able to store measurements with a given key.\r\n */\r\nexport var getMeasurementCache = function () {\r\n    var measurementsCache = {};\r\n    return {\r\n        /**\r\n         * Checks if the provided data has a cacheKey. If it has a cacheKey and there is a\r\n         * corresponding entry in the measurementsCache, then it will return that value.\r\n         * Returns undefined otherwise.\r\n         */\r\n        getCachedMeasurement: function (data) {\r\n            if (data && data.cacheKey && measurementsCache.hasOwnProperty(data.cacheKey)) {\r\n                return measurementsCache[data.cacheKey];\r\n            }\r\n            return undefined;\r\n        },\r\n        /**\r\n         * Should be called whenever there is a new measurement associated with a given data object.\r\n         * If the data has a cacheKey, store that measurement in the measurementsCache.\r\n         */\r\n        addMeasurementToCache: function (data, measurement) {\r\n            if (data.cacheKey) {\r\n                measurementsCache[data.cacheKey] = measurement;\r\n            }\r\n        }\r\n    };\r\n};\r\n/**\r\n * Returns a function that is able to compute the next state for the ResizeGroup given the current\r\n * state and any measurement updates.\r\n */\r\nexport var getNextResizeGroupStateProvider = function (measurementCache) {\r\n    if (measurementCache === void 0) { measurementCache = getMeasurementCache(); }\r\n    var _measurementCache = measurementCache;\r\n    var _containerWidth;\r\n    /**\r\n     * Gets the width of the data rendered in a hidden div.\r\n     * @param measuredData - The data corresponding to the measurement we wish to take.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _getMeasuredWidth(measuredData, getElementToMeasureWidth) {\r\n        var cachedWidth = _measurementCache.getCachedMeasurement(measuredData);\r\n        if (cachedWidth !== undefined) {\r\n            return cachedWidth;\r\n        }\r\n        var measuredWidth = getElementToMeasureWidth();\r\n        _measurementCache.addMeasurementToCache(measuredData, measuredWidth);\r\n        return measuredWidth;\r\n    }\r\n    /**\r\n     * Will get the next IResizeGroupState based on the current data while trying to shrink contents\r\n     * to fit in the container.\r\n     * @param data - The initial data point to start measuring.\r\n     * @param onReduceData - Function that transforms the data into something that should render with less width.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _shrinkContentsUntilTheyFit(data, onReduceData, getElementToMeasureWidth) {\r\n        var dataToMeasure = data;\r\n        var measuredWidth = _getMeasuredWidth(data, getElementToMeasureWidth);\r\n        while (measuredWidth > _containerWidth) {\r\n            var nextMeasuredData = onReduceData(dataToMeasure);\r\n            // We don't want to get stuck in an infinite render loop when there are no more\r\n            // scaling steps, so implementations of onReduceData should return undefined when\r\n            // there are no more scaling states to apply.\r\n            if (nextMeasuredData === undefined) {\r\n                return {\r\n                    renderedData: dataToMeasure,\r\n                    resizeDirection: undefined,\r\n                    dataToMeasure: undefined\r\n                };\r\n            }\r\n            measuredWidth = _measurementCache.getCachedMeasurement(nextMeasuredData);\r\n            // If the measurement isn't in the cache, we need to rerender with some data in a hidden div\r\n            if (measuredWidth === undefined) {\r\n                return {\r\n                    dataToMeasure: nextMeasuredData,\r\n                    resizeDirection: 'shrink'\r\n                };\r\n            }\r\n            dataToMeasure = nextMeasuredData;\r\n        }\r\n        return {\r\n            renderedData: dataToMeasure,\r\n            resizeDirection: undefined,\r\n            dataToMeasure: undefined\r\n        };\r\n    }\r\n    /**\r\n     * This function should be called when the state changes in a manner that might allow for more content to fit\r\n     * on the screen, such as the window width growing.\r\n     * @param data - The initial data point to start measuring.\r\n     * @param onGrowData - Function that transforms the data into something that may take up more space when rendering.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _growDataUntilItDoesNotFit(data, onGrowData, getElementToMeasureWidth, onReduceData) {\r\n        var dataToMeasure = data;\r\n        var measuredWidth = _getMeasuredWidth(data, getElementToMeasureWidth);\r\n        while (measuredWidth < _containerWidth) {\r\n            var nextMeasuredData = onGrowData(dataToMeasure);\r\n            // We don't want to get stuck in an infinite render loop when there are no more\r\n            // scaling steps, so implementations of onGrowData should return undefined when\r\n            // there are no more scaling states to apply.\r\n            if (nextMeasuredData === undefined) {\r\n                return {\r\n                    renderedData: dataToMeasure,\r\n                    resizeDirection: undefined,\r\n                    dataToMeasure: undefined\r\n                };\r\n            }\r\n            measuredWidth = _measurementCache.getCachedMeasurement(nextMeasuredData);\r\n            // If the measurement isn't in the cache, we need to rerender with some data in a hidden div\r\n            if (measuredWidth === undefined) {\r\n                return {\r\n                    dataToMeasure: nextMeasuredData\r\n                };\r\n            }\r\n            dataToMeasure = nextMeasuredData;\r\n        }\r\n        // Once the loop is done, we should now shrink until the contents fit.\r\n        return tslib_1.__assign({ resizeDirection: 'shrink' }, _shrinkContentsUntilTheyFit(dataToMeasure, onReduceData, getElementToMeasureWidth));\r\n    }\r\n    /**\r\n     * Handles an update to the container width. Should only be called when we knew the previous container width.\r\n     * @param newWidth - The new width of the container.\r\n     * @param fullWidthData - The initial data passed in as a prop to resizeGroup.\r\n     * @param renderedData - The data that was rendered prior to the container size changing.\r\n     * @param onGrowData - Set to true if the Resize group has an onGrowData function.\r\n     */\r\n    function _updateContainerWidth(newWidth, fullWidthData, renderedData, onGrowData) {\r\n        var nextState;\r\n        if (newWidth > _containerWidth) {\r\n            if (onGrowData) {\r\n                nextState = {\r\n                    resizeDirection: 'grow',\r\n                    dataToMeasure: onGrowData(renderedData)\r\n                };\r\n            }\r\n            else {\r\n                nextState = {\r\n                    resizeDirection: 'shrink',\r\n                    dataToMeasure: fullWidthData\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            nextState = {\r\n                resizeDirection: 'shrink',\r\n                dataToMeasure: renderedData\r\n            };\r\n        }\r\n        _containerWidth = newWidth;\r\n        return tslib_1.__assign({}, nextState, { measureContainer: false });\r\n    }\r\n    function getNextState(props, currentState, getElementToMeasureWidth, newContainerWidth) {\r\n        // If there is no new container width or data to measure, there is no need for a new state update\r\n        if (newContainerWidth === undefined && currentState.dataToMeasure === undefined) {\r\n            return undefined;\r\n        }\r\n        if (newContainerWidth) {\r\n            // If we know what the last container size was and we rendered data at that width, we can do an optimized render\r\n            if (_containerWidth && currentState.renderedData && !currentState.dataToMeasure) {\r\n                return tslib_1.__assign({}, currentState, _updateContainerWidth(newContainerWidth, props.data, currentState.renderedData, props.onGrowData));\r\n            }\r\n            // If we are just setting the container width for the first time, we can't do any optimizations\r\n            _containerWidth = newContainerWidth;\r\n        }\r\n        var nextState = tslib_1.__assign({}, currentState, { measureContainer: false });\r\n        if (currentState.dataToMeasure) {\r\n            if (currentState.resizeDirection === 'grow' && props.onGrowData) {\r\n                nextState = tslib_1.__assign({}, nextState, _growDataUntilItDoesNotFit(currentState.dataToMeasure, props.onGrowData, getElementToMeasureWidth, props.onReduceData));\r\n            }\r\n            else {\r\n                nextState = tslib_1.__assign({}, nextState, _shrinkContentsUntilTheyFit(currentState.dataToMeasure, props.onReduceData, getElementToMeasureWidth));\r\n            }\r\n        }\r\n        return nextState;\r\n    }\r\n    /** Function that determines if we need to render content for measurement based on the measurement cache contents. */\r\n    function shouldRenderDataForMeasurement(dataToMeasure) {\r\n        if (!dataToMeasure || _measurementCache.getCachedMeasurement(dataToMeasure) !== undefined) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getInitialResizeGroupState(data) {\r\n        return {\r\n            dataToMeasure: tslib_1.__assign({}, data),\r\n            resizeDirection: 'grow',\r\n            measureContainer: true\r\n        };\r\n    }\r\n    return {\r\n        getNextState: getNextState,\r\n        shouldRenderDataForMeasurement: shouldRenderDataForMeasurement,\r\n        getInitialResizeGroupState: getInitialResizeGroupState\r\n    };\r\n};\r\n// Provides a context property that (if true) tells any child components that\r\n// they are only being used for measurement purposes and will not be visible.\r\nvar MeasuredContext = provideContext({\r\n    isMeasured: PropTypes.bool\r\n}, function () {\r\n    return { isMeasured: true };\r\n});\r\n// Styles for the hidden div used for measurement\r\nvar hiddenDivStyles = { position: 'fixed', visibility: 'hidden' };\r\nvar hiddenParentStyles = { position: 'relative' };\r\nvar ResizeGroupBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ResizeGroupBase, _super);\r\n    function ResizeGroupBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._nextResizeGroupStateProvider = getNextResizeGroupStateProvider();\r\n        // The root div which is the container inside of which we are trying to fit content.\r\n        _this._root = React.createRef();\r\n        // A div that can be used for the initial measurement so that we can avoid mounting a second instance\r\n        // of the component being measured for the initial render.\r\n        _this._initialHiddenDiv = React.createRef();\r\n        // A hidden div that is used for mounting a new instance of the component for measurement in a hidden\r\n        // div without unmounting the currently visible content.\r\n        _this._updateHiddenDiv = React.createRef();\r\n        // Tracks if any content has been rendered to the user. This enables us to do some performance optimizations\r\n        // for the initial render.\r\n        _this._hasRenderedContent = false;\r\n        _this.state = _this._nextResizeGroupStateProvider.getInitialResizeGroupState(_this.props.data);\r\n        _this._warnDeprecations({\r\n            styles: 'className'\r\n        });\r\n        return _this;\r\n    }\r\n    ResizeGroupBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, onRenderData = _a.onRenderData;\r\n        var _b = this.state, dataToMeasure = _b.dataToMeasure, renderedData = _b.renderedData;\r\n        var divProps = getNativeProps(this.props, divProperties, ['data']);\r\n        var dataNeedsMeasuring = this._nextResizeGroupStateProvider.shouldRenderDataForMeasurement(dataToMeasure);\r\n        var isInitialMeasure = !this._hasRenderedContent && dataNeedsMeasuring;\r\n        // We only ever render the final content to the user. All measurements are done in a hidden div.\r\n        // For the initial render, we want this to be as fast as possible, so we need to make sure that we only mount one version of the\r\n        // component for measurement and the final render. For renders that update what is on screen, we want to make sure that\r\n        // there are no jarring effects such as the screen flashing as we apply scaling steps for meassurement. In the update case,\r\n        // we mount a second version of the component just for measurement purposes and leave the rendered content untouched until we know the\r\n        // next state sto show to the user.\r\n        return (React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: className, ref: this._root }),\r\n            React.createElement(\"div\", { style: hiddenParentStyles },\r\n                dataNeedsMeasuring && !isInitialMeasure && (React.createElement(\"div\", { style: hiddenDivStyles, ref: this._updateHiddenDiv },\r\n                    React.createElement(MeasuredContext, null, onRenderData(dataToMeasure)))),\r\n                React.createElement(\"div\", { ref: this._initialHiddenDiv, style: isInitialMeasure ? hiddenDivStyles : undefined, \"data-automation-id\": \"visibleContent\" }, isInitialMeasure ? onRenderData(dataToMeasure) : renderedData && onRenderData(renderedData)))));\r\n    };\r\n    ResizeGroupBase.prototype.componentDidMount = function () {\r\n        this._afterComponentRendered();\r\n        this._events.on(window, 'resize', this._async.debounce(this._onResize, RESIZE_DELAY, { leading: true }));\r\n    };\r\n    ResizeGroupBase.prototype.componentWillReceiveProps = function (nextProps) {\r\n        this.setState({\r\n            dataToMeasure: tslib_1.__assign({}, nextProps.data),\r\n            resizeDirection: 'grow',\r\n            measureContainer: true // Receiving new props means the parent might rerender and the root width might change\r\n        });\r\n    };\r\n    ResizeGroupBase.prototype.componentDidUpdate = function (prevProps) {\r\n        if (this.state.renderedData) {\r\n            this._hasRenderedContent = true;\r\n            if (this.props.dataDidRender) {\r\n                this.props.dataDidRender(this.state.renderedData);\r\n            }\r\n        }\r\n        this._afterComponentRendered();\r\n    };\r\n    ResizeGroupBase.prototype.remeasure = function () {\r\n        if (this._root.current) {\r\n            this.setState({ measureContainer: true });\r\n        }\r\n    };\r\n    ResizeGroupBase.prototype._afterComponentRendered = function () {\r\n        var _this = this;\r\n        this._async.requestAnimationFrame(function () {\r\n            var containerWidth = undefined;\r\n            if (_this.state.measureContainer && _this._root.current) {\r\n                containerWidth = _this._root.current.getBoundingClientRect().width;\r\n            }\r\n            var nextState = _this._nextResizeGroupStateProvider.getNextState(_this.props, _this.state, function () {\r\n                var refToMeasure = !_this._hasRenderedContent ? _this._initialHiddenDiv : _this._updateHiddenDiv;\r\n                return refToMeasure.current ? refToMeasure.current.scrollWidth : 0;\r\n            }, containerWidth);\r\n            if (nextState) {\r\n                _this.setState(nextState);\r\n            }\r\n        });\r\n    };\r\n    ResizeGroupBase.prototype._onResize = function () {\r\n        if (this._root.current) {\r\n            this.setState({ measureContainer: true });\r\n        }\r\n    };\r\n    return ResizeGroupBase;\r\n}(BaseComponent));\r\nexport { ResizeGroupBase };\r\n//# sourceMappingURL=ResizeGroup.base.js.map","import { ResizeGroupBase } from './ResizeGroup.base';\r\nexport var ResizeGroup = ResizeGroupBase;\r\n//# sourceMappingURL=ResizeGroup.js.map","import { concatStyleSets, getFocusStyle, HighContrastSelector } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles, focusInset, focusColor) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var baseSplitButtonStyles = getSplitButtonStyles(theme);\r\n    var commandButtonHighContrastFocus = {\r\n        left: 4,\r\n        top: 4,\r\n        bottom: 4,\r\n        right: 4,\r\n        border: 'none'\r\n    };\r\n    var commandButtonStyles = {\r\n        root: [\r\n            getFocusStyle(theme, -1, 'relative', commandButtonHighContrastFocus),\r\n            theme.fonts.medium,\r\n            {\r\n                minWidth: '40px',\r\n                backgroundColor: theme.palette.neutralLighter,\r\n                color: theme.palette.neutralPrimary,\r\n                padding: '0 4px',\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        border: 'none'\r\n                    },\r\n                    _a)\r\n            }\r\n        ],\r\n        rootHovered: {\r\n            backgroundColor: theme.palette.neutralLight,\r\n            color: theme.palette.neutralDark,\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    color: 'Highlight'\r\n                },\r\n                _b)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.neutralQuaternary,\r\n            color: theme.palette.black\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_c = {},\r\n                _c[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _c)\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.neutralTertiaryAlt,\r\n            marginTop: 4,\r\n            marginBottom: 4\r\n        },\r\n        splitButtonMenuButton: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            color: theme.palette.neutralPrimary,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLight,\r\n                    color: theme.palette.neutralDark,\r\n                    selectors: (_d = {},\r\n                        _d[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _d)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralQuaternaryAlt\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralQuaternaryAlt\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.neutralPrimary\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        },\r\n        label: {\r\n            fontWeight: 'normal' // theme.fontWeights.semibold,\r\n        },\r\n        icon: {\r\n            color: theme.palette.themeDarkAlt\r\n        },\r\n        menuIcon: {\r\n            color: theme.palette.neutralSecondary\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, commandButtonStyles, baseSplitButtonStyles, customStyles);\r\n    var _a, _b, _c, _d;\r\n});\r\n//# sourceMappingURL=CommandBarButton.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './CommandBarButton.styles';\r\nvar CommandBarButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CommandBarButton, _super);\r\n    function CommandBarButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    CommandBarButton.prototype.render = function () {\r\n        var _a = this.props, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: \"ms-Button--commandBar\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\r\n    };\r\n    CommandBarButton = tslib_1.__decorate([\r\n        customizable('CommandBarButton', ['theme', 'styles'], true)\r\n    ], CommandBarButton);\r\n    return CommandBarButton;\r\n}(BaseComponent));\r\nexport { CommandBarButton };\r\n//# sourceMappingURL=CommandBarButton.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, css, nullRender } from '../../Utilities';\r\nimport { OverflowSet } from '../../OverflowSet';\r\nimport { ResizeGroup } from '../../ResizeGroup';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { classNamesFunction } from '../../Utilities';\r\nimport { CommandBarButton } from '../../Button';\r\nimport { TooltipHost } from '../../Tooltip';\r\nvar getClassNames = classNamesFunction();\r\nvar CommandBarBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CommandBarBase, _super);\r\n    function CommandBarBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._overflowSet = React.createRef();\r\n        _this._resizeGroup = React.createRef();\r\n        _this._onRenderData = function (data) {\r\n            return (React.createElement(FocusZone, { className: css(_this._classNames.root), direction: FocusZoneDirection.horizontal, role: 'menubar', \"aria-label\": _this.props.ariaLabel },\r\n                React.createElement(OverflowSet, { componentRef: _this._resolveRef('_overflowSet'), className: css(_this._classNames.primarySet), doNotContainWithinFocusZone: true, role: 'presentation', items: data.primaryItems, overflowItems: data.overflowItems.length ? data.overflowItems : undefined, onRenderItem: _this._onRenderItem, onRenderOverflowButton: _this._onRenderOverflowButton }),\r\n                data.farItems && (React.createElement(OverflowSet, { className: css(_this._classNames.secondarySet), doNotContainWithinFocusZone: true, role: 'presentation', items: data.farItems, onRenderItem: _this._onRenderItem, onRenderOverflowButton: nullRender }))));\r\n        };\r\n        _this._onRenderItem = function (item) {\r\n            var CommandButtonType = _this.props.buttonAs || item.commandBarButtonAs || CommandBarButton;\r\n            var itemText = item.text || item.name;\r\n            if (item.onRender) {\r\n                // These are the top level items, there is no relevant menu dismissing function to\r\n                // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\r\n                return item.onRender(item, function () { return undefined; });\r\n            }\r\n            var commandButtonProps = tslib_1.__assign({ allowDisabledFocus: true, role: 'menuitem' }, item, { styles: tslib_1.__assign({ root: { height: '100%' }, label: { whiteSpace: 'nowrap' } }, item.buttonStyles), className: css('ms-CommandBarItem-link', item.className), text: !item.iconOnly ? itemText : undefined, menuProps: item.subMenuProps, onClick: _this._onButtonClick(item) });\r\n            if (item.iconOnly && itemText !== undefined) {\r\n                return (React.createElement(TooltipHost, tslib_1.__assign({ content: itemText }, item.tooltipHostProps),\r\n                    React.createElement(CommandButtonType, tslib_1.__assign({}, commandButtonProps, { defaultRender: CommandBarButton }))));\r\n            }\r\n            return React.createElement(CommandButtonType, tslib_1.__assign({}, commandButtonProps, { defaultRender: CommandBarButton }));\r\n        };\r\n        _this._onRenderOverflowButton = function (overflowItems) {\r\n            var _a = _this.props, _b = _a.overflowButtonAs, OverflowButtonType = _b === void 0 ? CommandBarButton : _b, _c = _a.overflowButtonProps // assure that props is not empty\r\n            , overflowButtonProps = _c === void 0 ? {} : _c // assure that props is not empty\r\n            ;\r\n            var combinedOverflowItems = (overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []).concat(overflowItems);\r\n            var overflowProps = tslib_1.__assign({}, overflowButtonProps, { styles: tslib_1.__assign({ menuIcon: { fontSize: '17px' } }, overflowButtonProps.styles), className: css('ms-CommandBar-overflowButton', overflowButtonProps.className), menuProps: tslib_1.__assign({}, overflowButtonProps.menuProps, { items: combinedOverflowItems }), menuIconProps: tslib_1.__assign({ iconName: 'More' }, overflowButtonProps.menuIconProps) });\r\n            return React.createElement(OverflowButtonType, tslib_1.__assign({}, overflowProps));\r\n        };\r\n        _this._onReduceData = function (data) {\r\n            var _a = _this.props, shiftOnReduce = _a.shiftOnReduce, onDataReduced = _a.onDataReduced;\r\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\r\n            // Use first item if shiftOnReduce, otherwise use last item\r\n            var movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\r\n            if (movedItem !== undefined) {\r\n                movedItem.renderedInOverflow = true;\r\n                overflowItems = [movedItem].concat(overflowItems);\r\n                primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\r\n                var newData = tslib_1.__assign({}, data, { primaryItems: primaryItems, overflowItems: overflowItems });\r\n                cacheKey = _this._computeCacheKey(newData);\r\n                if (onDataReduced) {\r\n                    onDataReduced(movedItem);\r\n                }\r\n                newData.cacheKey = cacheKey;\r\n                return newData;\r\n            }\r\n            return undefined;\r\n        };\r\n        _this._onGrowData = function (data) {\r\n            var _a = _this.props, shiftOnReduce = _a.shiftOnReduce, onDataGrown = _a.onDataGrown;\r\n            var minimumOverflowItems = data.minimumOverflowItems;\r\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\r\n            var movedItem = overflowItems[0];\r\n            // Make sure that moved item exists and is not one of the original overflow items\r\n            if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\r\n                movedItem.renderedInOverflow = false;\r\n                overflowItems = overflowItems.slice(1);\r\n                // if shiftOnReduce, movedItem goes first, otherwise, last.\r\n                primaryItems = shiftOnReduce ? [movedItem].concat(primaryItems) : primaryItems.concat([movedItem]);\r\n                var newData = tslib_1.__assign({}, data, { primaryItems: primaryItems, overflowItems: overflowItems });\r\n                cacheKey = _this._computeCacheKey(newData);\r\n                if (onDataGrown) {\r\n                    onDataGrown(movedItem);\r\n                }\r\n                newData.cacheKey = cacheKey;\r\n                return newData;\r\n            }\r\n            return undefined;\r\n        };\r\n        return _this;\r\n    }\r\n    CommandBarBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, items = _a.items, overflowItems = _a.overflowItems, farItems = _a.farItems, styles = _a.styles, theme = _a.theme, _b = _a.onReduceData, onReduceData = _b === void 0 ? this._onReduceData : _b, _c = _a.onGrowData, onGrowData = _c === void 0 ? this._onGrowData : _c;\r\n        var commandBarData = {\r\n            primaryItems: items.slice(),\r\n            overflowItems: overflowItems.slice(),\r\n            minimumOverflowItems: overflowItems.slice().length,\r\n            farItems: farItems,\r\n            cacheKey: ''\r\n        };\r\n        this._classNames = getClassNames(styles, { theme: theme });\r\n        return (React.createElement(ResizeGroup, { componentRef: this._resizeGroup, className: className, data: commandBarData, onReduceData: onReduceData, onGrowData: onGrowData, onRenderData: this._onRenderData }));\r\n    };\r\n    CommandBarBase.prototype.focus = function () {\r\n        var overflowSet = this._overflowSet.current;\r\n        overflowSet && overflowSet.focus();\r\n    };\r\n    CommandBarBase.prototype.remeasure = function () {\r\n        this._resizeGroup.current && this._resizeGroup.current.remeasure();\r\n    };\r\n    CommandBarBase.prototype._onButtonClick = function (item) {\r\n        return function (ev) {\r\n            // inactive is deprecated. remove check in 7.0\r\n            if (item.inactive) {\r\n                return;\r\n            }\r\n            if (item.onClick) {\r\n                item.onClick(ev, item);\r\n            }\r\n        };\r\n    };\r\n    CommandBarBase.prototype._computeCacheKey = function (data) {\r\n        var primaryItems = data.primaryItems, _a = data.farItems, farItems = _a === void 0 ? [] : _a, overflowItems = data.overflowItems;\r\n        var returnKey = function (acc, current) {\r\n            var _a = current.cacheKey, cacheKey = _a === void 0 ? current.key : _a;\r\n            return acc + cacheKey;\r\n        };\r\n        var primaryKey = primaryItems.reduce(returnKey, '');\r\n        var farKey = farItems.reduce(returnKey, '');\r\n        var overflowKey = !!overflowItems.length ? 'overflow' : '';\r\n        return [primaryKey, farKey, overflowKey].join(' ');\r\n    };\r\n    CommandBarBase.defaultProps = {\r\n        items: [],\r\n        overflowItems: []\r\n    };\r\n    return CommandBarBase;\r\n}(BaseComponent));\r\nexport { CommandBarBase };\r\n//# sourceMappingURL=CommandBar.base.js.map","import { styled } from '../../Utilities';\r\nimport { CommandBarBase } from './CommandBar.base';\r\nimport { getStyles } from './CommandBar.styles';\r\n// Create a CommandBar variant which uses these default styles and this styled subcomponent.\r\nexport var CommandBar = styled(CommandBarBase, getStyles, undefined, {\r\n    scope: 'CommandBar'\r\n});\r\n//# sourceMappingURL=CommandBar.js.map","export var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme;\r\n    var palette = theme.palette;\r\n    return {\r\n        root: [\r\n            theme.fonts.medium,\r\n            'ms-CommandBar',\r\n            {\r\n                display: 'flex',\r\n                backgroundColor: palette.neutralLighter,\r\n                padding: '0 16px',\r\n                height: '40px'\r\n            },\r\n            className\r\n        ],\r\n        primarySet: [\r\n            'ms-CommandBar-primaryCommand',\r\n            {\r\n                flexGrow: '1',\r\n                display: 'flex',\r\n                alignItems: 'stretch'\r\n            }\r\n        ],\r\n        secondarySet: [\r\n            'ms-CommandBar-secondaryCommand',\r\n            {\r\n                flexShrink: '0',\r\n                display: 'flex',\r\n                alignItems: 'stretch'\r\n            }\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=CommandBar.styles.js.map","export var TooltipOverflowMode;\r\n(function (TooltipOverflowMode) {\r\n    /** Only show tooltip if parent DOM element is overflowing */\r\n    TooltipOverflowMode[TooltipOverflowMode[\"Parent\"] = 0] = \"Parent\";\r\n    /** Only show tooltip if tooltip host's content is overflowing */\r\n    TooltipOverflowMode[TooltipOverflowMode[\"Self\"] = 1] = \"Self\";\r\n})(TooltipOverflowMode || (TooltipOverflowMode = {}));\r\n//# sourceMappingURL=TooltipHost.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\r\nimport { TooltipDelay } from './Tooltip.types';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nvar getClassNames = classNamesFunction();\r\nvar TooltipBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TooltipBase, _super);\r\n    function TooltipBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._onRenderContent = function (props) {\r\n            return React.createElement(\"p\", { className: _this._classNames.subText }, props.content);\r\n        };\r\n        return _this;\r\n    }\r\n    TooltipBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, calloutProps = _a.calloutProps, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, styles = _a.styles, id = _a.id, maxWidth = _a.maxWidth, _b = _a.onRenderContent, onRenderContent = _b === void 0 ? this._onRenderContent : _b, targetElement = _a.targetElement, theme = _a.theme;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className || (calloutProps && calloutProps.className),\r\n            delay: delay,\r\n            maxWidth: maxWidth\r\n        });\r\n        return (React.createElement(Callout, tslib_1.__assign({ target: targetElement, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL }, calloutProps, getNativeProps(this.props, divProperties, ['id']), { className: this._classNames.root }),\r\n            React.createElement(\"div\", { className: this._classNames.content, id: id, role: \"tooltip\", onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, onRenderContent(this.props, this._onRenderContent))));\r\n    };\r\n    // Specify default props values\r\n    TooltipBase.defaultProps = {\r\n        directionalHint: DirectionalHint.topCenter,\r\n        delay: TooltipDelay.medium,\r\n        maxWidth: '364px',\r\n        calloutProps: {\r\n            isBeakVisible: true,\r\n            beakWidth: 16,\r\n            gapSpace: 0,\r\n            setInitialFocus: true,\r\n            doNotLayer: false\r\n        }\r\n    };\r\n    return TooltipBase;\r\n}(BaseComponent));\r\nexport { TooltipBase };\r\n//# sourceMappingURL=Tooltip.base.js.map","import { styled } from '../../Utilities';\r\nimport { TooltipBase } from './Tooltip.base';\r\nimport { getStyles } from './Tooltip.styles';\r\nexport var Tooltip = styled(TooltipBase, getStyles, undefined, {\r\n    scope: 'Tooltip'\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { TooltipDelay } from './Tooltip.types';\r\nimport { AnimationClassNames } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var className = props.className, delay = props.delay, maxWidth = props.maxWidth, theme = props.theme;\r\n    var palette = theme.palette, fonts = theme.fonts;\r\n    return {\r\n        root: [\r\n            'ms-Tooltip',\r\n            theme.fonts.medium,\r\n            AnimationClassNames.fadeIn200,\r\n            {\r\n                background: palette.white,\r\n                padding: '8px',\r\n                animationDelay: '300ms',\r\n                maxWidth: maxWidth\r\n            },\r\n            delay === TooltipDelay.zero && {\r\n                animationDelay: '0s'\r\n            },\r\n            delay === TooltipDelay.long && {\r\n                animationDelay: '500ms'\r\n            },\r\n            className\r\n        ],\r\n        content: [\r\n            'ms-Tooltip-content',\r\n            fonts.small,\r\n            palette.neutralPrimary,\r\n            {\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word',\r\n                overflow: 'hidden'\r\n            }\r\n        ],\r\n        subText: [\r\n            'ms-Tooltip-subtext',\r\n            {\r\n                margin: 0\r\n            }\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=Tooltip.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, divProperties, getNativeProps, getId, assign, hasOverflow, portalContainsElement, classNamesFunction } from '../../Utilities';\r\nimport { TooltipOverflowMode } from './TooltipHost.types';\r\nimport { Tooltip } from './Tooltip';\r\nimport { TooltipDelay } from './Tooltip.types';\r\nvar getClassNames = classNamesFunction();\r\nvar TooltipHostBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TooltipHostBase, _super);\r\n    // Constructor\r\n    function TooltipHostBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // The wrapping div that gets the hover events\r\n        _this._tooltipHost = React.createRef();\r\n        // The ID of the setTimeout that will eventually close the tooltip if the\r\n        // the tooltip isn't hovered over.\r\n        _this._closingTimer = -1;\r\n        _this.show = function () {\r\n            _this._toggleTooltip(true);\r\n        };\r\n        _this.dismiss = function () {\r\n            _this._hideTooltip();\r\n        };\r\n        // Show Tooltip\r\n        _this._onTooltipMouseEnter = function (ev) {\r\n            var overflowMode = _this.props.overflowMode;\r\n            if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== _this) {\r\n                TooltipHostBase._currentVisibleTooltip.dismiss();\r\n            }\r\n            TooltipHostBase._currentVisibleTooltip = _this;\r\n            if (overflowMode !== undefined) {\r\n                var overflowElement = _this._getTargetElement();\r\n                if (overflowElement && !hasOverflow(overflowElement)) {\r\n                    return;\r\n                }\r\n            }\r\n            if (ev.target && portalContainsElement(ev.target, _this._getTargetElement())) {\r\n                // Do not show tooltip when target is inside a portal relative to TooltipHost.\r\n                return;\r\n            }\r\n            _this._toggleTooltip(true);\r\n            _this._clearDismissTimer();\r\n        };\r\n        // Hide Tooltip\r\n        _this._onTooltipMouseLeave = function (ev) {\r\n            if (_this.props.closeDelay) {\r\n                _this._clearDismissTimer();\r\n                _this._closingTimer = _this._async.setTimeout(function () {\r\n                    _this._toggleTooltip(false);\r\n                }, _this.props.closeDelay);\r\n            }\r\n            else {\r\n                _this._toggleTooltip(false);\r\n            }\r\n            if (TooltipHostBase._currentVisibleTooltip === _this) {\r\n                TooltipHostBase._currentVisibleTooltip = undefined;\r\n            }\r\n        };\r\n        _this._clearDismissTimer = function () {\r\n            _this._async.clearTimeout(_this._closingTimer);\r\n        };\r\n        // Hide Tooltip\r\n        _this._hideTooltip = function () {\r\n            _this._toggleTooltip(false);\r\n        };\r\n        _this.state = {\r\n            isTooltipVisible: false\r\n        };\r\n        return _this;\r\n    }\r\n    // Render\r\n    TooltipHostBase.prototype.render = function () {\r\n        var _a = this.props, calloutProps = _a.calloutProps, children = _a.children, content = _a.content, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, className = _a.hostClassName, id = _a.id, _b = _a.setAriaDescribedBy, setAriaDescribedBy = _b === void 0 ? true : _b, tooltipProps = _a.tooltipProps, styles = _a.styles, theme = _a.theme;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className\r\n        });\r\n        var isTooltipVisible = this.state.isTooltipVisible;\r\n        var tooltipId = id || getId('tooltip');\r\n        var isContentPresent = !!(content || (tooltipProps && tooltipProps.onRenderContent && tooltipProps.onRenderContent()));\r\n        var showTooltip = isTooltipVisible && isContentPresent;\r\n        var ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && isContentPresent ? tooltipId : undefined;\r\n        return (React.createElement(\"div\", tslib_1.__assign({ className: this._classNames.root, ref: this._tooltipHost }, { onFocusCapture: this._onTooltipMouseEnter }, { onBlurCapture: this._hideTooltip }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, \"aria-describedby\": ariaDescribedBy }),\r\n            children,\r\n            showTooltip && (React.createElement(Tooltip, tslib_1.__assign({ id: tooltipId, delay: delay, content: content, targetElement: this._getTargetElement(), directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, calloutProps: assign({}, calloutProps, {\r\n                    onMouseEnter: this._onTooltipMouseEnter,\r\n                    onMouseLeave: this._onTooltipMouseLeave\r\n                }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, getNativeProps(this.props, divProperties), tooltipProps)))));\r\n    };\r\n    TooltipHostBase.prototype.componentWillUnmount = function () {\r\n        if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {\r\n            TooltipHostBase._currentVisibleTooltip = undefined;\r\n        }\r\n    };\r\n    TooltipHostBase.prototype._getTargetElement = function () {\r\n        if (!this._tooltipHost.current) {\r\n            return undefined;\r\n        }\r\n        var overflowMode = this.props.overflowMode;\r\n        // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative\r\n        // to the parent element, otherwise it might look off.\r\n        if (overflowMode !== undefined) {\r\n            switch (overflowMode) {\r\n                case TooltipOverflowMode.Parent:\r\n                    return this._tooltipHost.current.parentElement;\r\n                case TooltipOverflowMode.Self:\r\n                    return this._tooltipHost.current;\r\n            }\r\n        }\r\n        return this._tooltipHost.current;\r\n    };\r\n    TooltipHostBase.prototype._toggleTooltip = function (isTooltipVisible) {\r\n        var _this = this;\r\n        if (this.state.isTooltipVisible !== isTooltipVisible) {\r\n            this.setState({ isTooltipVisible: isTooltipVisible }, function () { return _this.props.onTooltipToggle && _this.props.onTooltipToggle(_this.state.isTooltipVisible); });\r\n        }\r\n    };\r\n    TooltipHostBase.defaultProps = {\r\n        delay: TooltipDelay.medium\r\n    };\r\n    return TooltipHostBase;\r\n}(BaseComponent));\r\nexport { TooltipHostBase };\r\n//# sourceMappingURL=TooltipHost.base.js.map","import { getGlobalClassNames } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-TooltipHost'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            {\r\n                display: 'inline'\r\n            },\r\n            className\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=TooltipHost.styles.js.map","import { styled } from '../../Utilities';\r\nimport { TooltipHostBase } from './TooltipHost.base';\r\nimport { getStyles } from './TooltipHost.styles';\r\nexport var TooltipHost = styled(TooltipHostBase, getStyles, undefined, {\r\n    scope: 'TooltipHost'\r\n});\r\n//# sourceMappingURL=TooltipHost.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { Label } from '../../Label';\r\nimport { Icon } from '../../Icon';\r\nimport { DelayedRender, BaseComponent, getId, getNativeProps, inputProperties, textAreaProperties, createRef, classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar DEFAULT_STATE_VALUE = '';\r\nvar TextFieldBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextFieldBase, _super);\r\n    function TextFieldBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._textElement = createRef();\r\n        _this._onFocus = function (ev) {\r\n            if (_this.props.onFocus) {\r\n                _this.props.onFocus(ev);\r\n            }\r\n            _this.setState({ isFocused: true });\r\n            if (_this.props.validateOnFocusIn) {\r\n                _this._validate(_this.state.value);\r\n            }\r\n        };\r\n        _this._onBlur = function (ev) {\r\n            if (_this.props.onBlur) {\r\n                _this.props.onBlur(ev);\r\n            }\r\n            _this.setState({ isFocused: false });\r\n            if (_this.props.validateOnFocusOut) {\r\n                _this._validate(_this.state.value);\r\n            }\r\n        };\r\n        _this._onRenderLabel = function (props) {\r\n            var label = props.label, required = props.required;\r\n            // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\r\n            var labelStyles = _this._classNames.subComponentStyles\r\n                ? _this._classNames.subComponentStyles.label\r\n                : undefined;\r\n            if (label) {\r\n                return (React.createElement(Label, { required: required, htmlFor: _this._id, styles: labelStyles, disabled: props.disabled }, props.label));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderDescription = function (props) {\r\n            if (props.description) {\r\n                return React.createElement(\"span\", { className: _this._classNames.description }, props.description);\r\n            }\r\n            return null;\r\n        };\r\n        _this._onInputChange = function (event) {\r\n            event.persist();\r\n            var element = event.target;\r\n            var value = element.value;\r\n            // Avoid doing unnecessary work when the value has not changed.\r\n            if (value === _this._latestValue) {\r\n                return;\r\n            }\r\n            _this._latestValue = value;\r\n            _this.setState({ value: value }, function () {\r\n                _this._adjustInputHeight();\r\n                if (_this.props.onChange) {\r\n                    _this.props.onChange(event, value);\r\n                }\r\n                if (_this.props.onChanged) {\r\n                    _this.props.onChanged(value);\r\n                }\r\n            });\r\n            var _a = _this.props, validateOnFocusIn = _a.validateOnFocusIn, validateOnFocusOut = _a.validateOnFocusOut;\r\n            if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n                _this._delayedValidate(value);\r\n            }\r\n            if (_this.props.onBeforeChange) {\r\n                _this.props.onBeforeChange(value);\r\n            }\r\n        };\r\n        _this._warnDeprecations({\r\n            iconClass: 'iconProps',\r\n            addonString: 'prefix',\r\n            onRenderAddon: 'onRenderPrefix',\r\n            onChanged: 'onChange'\r\n        });\r\n        _this._warnMutuallyExclusive({\r\n            value: 'defaultValue'\r\n        });\r\n        _this._id = props.id || getId('TextField');\r\n        _this._descriptionId = getId('TextFieldDescription');\r\n        if (props.value !== undefined) {\r\n            _this._latestValue = props.value;\r\n        }\r\n        else if (props.defaultValue !== undefined) {\r\n            _this._latestValue = props.defaultValue;\r\n        }\r\n        else {\r\n            _this._latestValue = DEFAULT_STATE_VALUE;\r\n        }\r\n        _this.state = {\r\n            value: _this._latestValue,\r\n            isFocused: false,\r\n            errorMessage: ''\r\n        };\r\n        _this._delayedValidate = _this._async.debounce(_this._validate, _this.props.deferredValidationTime);\r\n        _this._lastValidation = 0;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TextFieldBase.prototype, \"value\", {\r\n        /**\r\n         * Gets the current value of the text field.\r\n         */\r\n        get: function () {\r\n            return this.state.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldBase.prototype.componentDidMount = function () {\r\n        this._isMounted = true;\r\n        this._adjustInputHeight();\r\n        if (this.props.validateOnLoad) {\r\n            this._validate(this.state.value);\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        var onBeforeChange = this.props.onBeforeChange;\r\n        // If old value prop was undefined, then component is controlled and we should\r\n        //    respect new undefined value and update state accordingly.\r\n        if (newProps.value !== this.state.value && (newProps.value !== undefined || this.props.value !== undefined)) {\r\n            if (onBeforeChange) {\r\n                onBeforeChange(newProps.value);\r\n            }\r\n            this._id = newProps.id || this._id;\r\n            this._setValue(newProps.value);\r\n            var validateOnFocusIn = newProps.validateOnFocusIn, validateOnFocusOut = newProps.validateOnFocusOut;\r\n            if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n                this._delayedValidate(newProps.value);\r\n            }\r\n        }\r\n        // If component is not currently controlled and defaultValue changes, set value to new defaultValue.\r\n        if (newProps.defaultValue !== this.props.defaultValue && newProps.value === undefined) {\r\n            this._setValue(newProps.defaultValue);\r\n        }\r\n        // Text field is changing between single- and multi-line. After the change is complete,\r\n        // we'll need to reset focus and selection/cursor.\r\n        if (!!newProps.multiline !== !!this.props.multiline && this.state.isFocused) {\r\n            this._shouldResetFocusAfterRender = true;\r\n            this._selectionBeforeInputTypeChange = [this.selectionStart, this.selectionEnd];\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentDidUpdate = function () {\r\n        if (this._shouldResetFocusAfterRender) {\r\n            // The text field has just changed between single- and multi-line, so we need to reset focus\r\n            // and selection/cursor.\r\n            this._shouldResetFocusAfterRender = false;\r\n            this.focus();\r\n            if (this._selectionBeforeInputTypeChange) {\r\n                var _a = this._selectionBeforeInputTypeChange, start = _a[0], end = _a[1];\r\n                if (start !== null && end !== null) {\r\n                    this.setSelectionRange(start, end);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentWillUnmount = function () {\r\n        this._isMounted = false;\r\n    };\r\n    TextFieldBase.prototype.render = function () {\r\n        var _a = this.props, borderless = _a.borderless, className = _a.className, disabled = _a.disabled, iconClass = _a.iconClass, iconProps = _a.iconProps, inputClassName = _a.inputClassName, label = _a.label, multiline = _a.multiline, required = _a.required, underlined = _a.underlined, addonString = _a.addonString, // @deprecated\r\n        prefix = _a.prefix, resizable = _a.resizable, suffix = _a.suffix, theme = _a.theme, styles = _a.styles, autoAdjustHeight = _a.autoAdjustHeight, _b = _a.onRenderAddon, onRenderAddon = _b === void 0 ? this._onRenderAddon : _b, // @deprecated\r\n        _c = _a.onRenderPrefix, // @deprecated\r\n        onRenderPrefix = _c === void 0 ? this._onRenderPrefix : _c, _d = _a.onRenderSuffix, onRenderSuffix = _d === void 0 ? this._onRenderSuffix : _d, _e = _a.onRenderLabel, onRenderLabel = _e === void 0 ? this._onRenderLabel : _e, _f = _a.onRenderDescription, onRenderDescription = _f === void 0 ? this._onRenderDescription : _f;\r\n        var isFocused = this.state.isFocused;\r\n        var errorMessage = this._errorMessage;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            focused: isFocused,\r\n            required: required,\r\n            multiline: multiline,\r\n            hasLabel: !!label,\r\n            hasErrorMessage: !!errorMessage,\r\n            borderless: borderless,\r\n            resizable: resizable,\r\n            hasIcon: !!iconProps,\r\n            underlined: underlined,\r\n            iconClass: iconClass,\r\n            inputClassName: inputClassName,\r\n            autoAdjustHeight: autoAdjustHeight\r\n        });\r\n        return (React.createElement(\"div\", { className: this._classNames.root },\r\n            React.createElement(\"div\", { className: this._classNames.wrapper },\r\n                onRenderLabel(this.props, this._onRenderLabel),\r\n                React.createElement(\"div\", { className: this._classNames.fieldGroup },\r\n                    (addonString !== undefined || this.props.onRenderAddon) && (React.createElement(\"div\", { className: this._classNames.prefix }, onRenderAddon(this.props, this._onRenderAddon))),\r\n                    (prefix !== undefined || this.props.onRenderPrefix) && (React.createElement(\"div\", { className: this._classNames.prefix }, onRenderPrefix(this.props, this._onRenderPrefix))),\r\n                    multiline ? this._renderTextArea() : this._renderInput(),\r\n                    (iconClass || iconProps) && React.createElement(Icon, tslib_1.__assign({ className: this._classNames.icon }, iconProps)),\r\n                    (suffix !== undefined || this.props.onRenderSuffix) && (React.createElement(\"div\", { className: this._classNames.suffix }, onRenderSuffix(this.props, this._onRenderSuffix))))),\r\n            this._isDescriptionAvailable && (React.createElement(\"span\", { id: this._descriptionId },\r\n                onRenderDescription(this.props, this._onRenderDescription),\r\n                errorMessage && (React.createElement(\"div\", { role: \"alert\" },\r\n                    React.createElement(DelayedRender, null,\r\n                        React.createElement(\"p\", { className: this._classNames.errorMessage },\r\n                            React.createElement(\"span\", { \"data-automation-id\": \"error-message\" }, errorMessage)))))))));\r\n    };\r\n    /**\r\n     * Sets focus on the text field\r\n     */\r\n    TextFieldBase.prototype.focus = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.focus();\r\n        }\r\n    };\r\n    /**\r\n     * Blurs the text field.\r\n     */\r\n    TextFieldBase.prototype.blur = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.blur();\r\n        }\r\n    };\r\n    /**\r\n     * Selects the text field\r\n     */\r\n    TextFieldBase.prototype.select = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.select();\r\n        }\r\n    };\r\n    /**\r\n     * Sets the selection start of the text field to a specified value\r\n     */\r\n    TextFieldBase.prototype.setSelectionStart = function (value) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.selectionStart = value;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the selection end of the text field to a specified value\r\n     */\r\n    TextFieldBase.prototype.setSelectionEnd = function (value) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.selectionEnd = value;\r\n        }\r\n    };\r\n    Object.defineProperty(TextFieldBase.prototype, \"selectionStart\", {\r\n        /**\r\n         * Gets the selection start of the text field\r\n         */\r\n        get: function () {\r\n            return this._textElement.current ? this._textElement.current.selectionStart : -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldBase.prototype, \"selectionEnd\", {\r\n        /**\r\n         * Gets the selection end of the text field\r\n         */\r\n        get: function () {\r\n            return this._textElement.current ? this._textElement.current.selectionEnd : -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets the start and end positions of a selection in a text field.\r\n     * @param start - Index of the start of the selection.\r\n     * @param end - Index of the end of the selection.\r\n     */\r\n    TextFieldBase.prototype.setSelectionRange = function (start, end) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.setSelectionRange(start, end);\r\n        }\r\n    };\r\n    TextFieldBase.prototype._setValue = function (value) {\r\n        var _this = this;\r\n        this._latestValue = value;\r\n        this.setState({\r\n            value: value || DEFAULT_STATE_VALUE,\r\n            errorMessage: ''\r\n        }, function () {\r\n            _this._adjustInputHeight();\r\n        });\r\n    };\r\n    // @deprecated\r\n    TextFieldBase.prototype._onRenderAddon = function (props) {\r\n        var addonString = props.addonString;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, addonString);\r\n    };\r\n    TextFieldBase.prototype._onRenderPrefix = function (props) {\r\n        var prefix = props.prefix;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, prefix);\r\n    };\r\n    TextFieldBase.prototype._onRenderSuffix = function (props) {\r\n        var suffix = props.suffix;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, suffix);\r\n    };\r\n    Object.defineProperty(TextFieldBase.prototype, \"_errorMessage\", {\r\n        get: function () {\r\n            var errorMessage = this.state.errorMessage;\r\n            if (!errorMessage && this.props.errorMessage) {\r\n                errorMessage = this.props.errorMessage;\r\n            }\r\n            return errorMessage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldBase.prototype, \"_isDescriptionAvailable\", {\r\n        /**\r\n         * If a custom description render function is supplied then treat description as always available.\r\n         * Otherwise defer to the presence of description or error message text.\r\n         */\r\n        get: function () {\r\n            var props = this.props;\r\n            return !!(props.onRenderDescription || props.description || this._errorMessage);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldBase.prototype._renderTextArea = function () {\r\n        var textAreaProps = getNativeProps(this.props, textAreaProperties, ['defaultValue']);\r\n        return (React.createElement(\"textarea\", tslib_1.__assign({ id: this._id }, textAreaProps, { ref: this._textElement, value: this.state.value, onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, \"aria-describedby\": this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], \"aria-invalid\": !!this.state.errorMessage, \"aria-label\": this.props.ariaLabel, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur })));\r\n    };\r\n    TextFieldBase.prototype._renderInput = function () {\r\n        var inputProps = getNativeProps(this.props, inputProperties, ['defaultValue']);\r\n        return (React.createElement(\"input\", tslib_1.__assign({ type: 'text', id: this._id }, inputProps, { ref: this._textElement, value: this.state.value, onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, \"aria-label\": this.props.ariaLabel, \"aria-describedby\": this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], \"aria-invalid\": !!this.state.errorMessage, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur })));\r\n    };\r\n    TextFieldBase.prototype._validate = function (value) {\r\n        var _this = this;\r\n        var _a = this.props, validateOnFocusIn = _a.validateOnFocusIn, validateOnFocusOut = _a.validateOnFocusOut;\r\n        // In case of _validate called multi-times during executing validate logic with promise return.\r\n        if (this._latestValidateValue === value && !(validateOnFocusIn || validateOnFocusOut)) {\r\n            return;\r\n        }\r\n        this._latestValidateValue = value;\r\n        var onGetErrorMessage = this.props.onGetErrorMessage;\r\n        var result = onGetErrorMessage(value || '');\r\n        if (result !== undefined) {\r\n            if (typeof result === 'string') {\r\n                this.setState({ errorMessage: result });\r\n                this._notifyAfterValidate(value, result);\r\n            }\r\n            else {\r\n                var currentValidation_1 = ++this._lastValidation;\r\n                result.then(function (errorMessage) {\r\n                    if (_this._isMounted && currentValidation_1 === _this._lastValidation) {\r\n                        _this.setState({ errorMessage: errorMessage });\r\n                    }\r\n                    _this._notifyAfterValidate(value, errorMessage);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._notifyAfterValidate(value, '');\r\n        }\r\n    };\r\n    TextFieldBase.prototype._notifyAfterValidate = function (value, errorMessage) {\r\n        if (this._isMounted && value === this.state.value && this.props.onNotifyValidationResult) {\r\n            this.props.onNotifyValidationResult(errorMessage, value);\r\n        }\r\n    };\r\n    TextFieldBase.prototype._adjustInputHeight = function () {\r\n        if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\r\n            var textField = this._textElement.current;\r\n            textField.style.height = '';\r\n            textField.style.height = textField.scrollHeight + 'px';\r\n        }\r\n    };\r\n    TextFieldBase.defaultProps = {\r\n        multiline: false,\r\n        resizable: true,\r\n        autoAdjustHeight: false,\r\n        underlined: false,\r\n        borderless: false,\r\n        onChange: function () {\r\n            /* noop */\r\n        },\r\n        onBeforeChange: function () {\r\n            /* noop */\r\n        },\r\n        onNotifyValidationResult: function () {\r\n            /* noop */\r\n        },\r\n        onGetErrorMessage: function () { return undefined; },\r\n        deferredValidationTime: 200,\r\n        errorMessage: '',\r\n        validateOnFocusIn: false,\r\n        validateOnFocusOut: false,\r\n        validateOnLoad: true\r\n    };\r\n    return TextFieldBase;\r\n}(BaseComponent));\r\nexport { TextFieldBase };\r\n//# sourceMappingURL=TextField.base.js.map","import { AnimationClassNames, FontSizes, getGlobalClassNames, HighContrastSelector, normalize } from '../../Styling';\r\nvar globalClassNames = {\r\n    root: 'ms-TextField',\r\n    description: 'ms-TextField-description',\r\n    errorMessage: 'ms-TextField-errorMessage',\r\n    field: 'ms-TextField-field',\r\n    fieldGroup: 'ms-TextField-fieldGroup',\r\n    prefix: 'ms-TextField-prefix',\r\n    suffix: 'ms-TextField-suffix',\r\n    wrapper: 'ms-TextField-wrapper',\r\n    multiline: 'ms-TextField--multiline',\r\n    borderless: 'ms-TextField--borderless',\r\n    underlined: 'ms-TextField--underlined',\r\n    unresizable: 'ms-TextField--unresizable',\r\n    required: 'is-required',\r\n    disabled: 'is-disabled',\r\n    active: 'is-active'\r\n};\r\nfunction getLabelStyles(props) {\r\n    var underlined = props.underlined, disabled = props.disabled, focused = props.focused;\r\n    return function () {\r\n        return ({\r\n            root: [\r\n                underlined &&\r\n                    disabled && {\r\n                    color: props.theme.palette.neutralTertiary\r\n                },\r\n                underlined && {\r\n                    fontSize: FontSizes.medium,\r\n                    marginRight: 8,\r\n                    paddingLeft: 12,\r\n                    paddingRight: 0,\r\n                    lineHeight: '22px',\r\n                    height: 32\r\n                },\r\n                underlined &&\r\n                    focused && {\r\n                    selectors: (_a = {},\r\n                        _a[HighContrastSelector] = {\r\n                            height: 31 // -1px to prevent jumpiness in HC with the increased border-width to 2px\r\n                        },\r\n                        _a)\r\n                }\r\n            ]\r\n        });\r\n        var _a;\r\n    };\r\n}\r\nexport function getStyles(props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, focused = props.focused, required = props.required, multiline = props.multiline, hasLabel = props.hasLabel, borderless = props.borderless, underlined = props.underlined, hasIcon = props.hasIcon, resizable = props.resizable, hasErrorMessage = props.hasErrorMessage, iconClass = props.iconClass, inputClassName = props.inputClassName, autoAdjustHeight = props.autoAdjustHeight;\r\n    var semanticColors = theme.semanticColors;\r\n    var classNames = getGlobalClassNames(globalClassNames, theme);\r\n    var fieldPrefixSuffix = {\r\n        background: semanticColors.disabledBackground,\r\n        color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 10px',\r\n        lineHeight: 1,\r\n        whiteSpace: 'nowrap'\r\n    };\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            required && classNames.required,\r\n            disabled && classNames.disabled,\r\n            focused && classNames.active,\r\n            multiline && classNames.multiline,\r\n            borderless && classNames.borderless,\r\n            underlined && classNames.underlined,\r\n            normalize,\r\n            {\r\n                position: 'relative'\r\n            },\r\n            className\r\n        ],\r\n        wrapper: [\r\n            classNames.wrapper,\r\n            underlined && {\r\n                display: 'flex',\r\n                borderBottomWidth: 1,\r\n                borderBottomStyle: 'solid',\r\n                borderBottomColor: semanticColors.inputBorder,\r\n                width: '100%'\r\n            },\r\n            hasErrorMessage &&\r\n                underlined &&\r\n                !disabled && {\r\n                borderBottomColor: semanticColors.errorText,\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderBottomColor: semanticColors.errorText,\r\n                        selectors: (_a = {},\r\n                            _a[HighContrastSelector] = {\r\n                                borderBottomColor: 'Highlight'\r\n                            },\r\n                            _a)\r\n                    }\r\n                }\r\n            },\r\n            underlined &&\r\n                disabled && {\r\n                borderBottomColor: semanticColors.disabledBackground\r\n            },\r\n            underlined &&\r\n                !disabled &&\r\n                !focused &&\r\n                !hasErrorMessage && {\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderBottomColor: semanticColors.inputBorderHovered,\r\n                        selectors: (_b = {},\r\n                            _b[HighContrastSelector] = {\r\n                                borderBottomColor: 'Highlight'\r\n                            },\r\n                            _b)\r\n                    }\r\n                }\r\n            },\r\n            underlined &&\r\n                focused && {\r\n                borderBottomColor: !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\r\n                selectors: (_c = {},\r\n                    _c[HighContrastSelector] = {\r\n                        borderBottomWidth: 2,\r\n                        borderBottomColor: 'Highlight'\r\n                    },\r\n                    _c)\r\n            }\r\n        ],\r\n        fieldGroup: [\r\n            classNames.fieldGroup,\r\n            normalize,\r\n            {\r\n                border: \"1px solid \" + semanticColors.inputBorder,\r\n                background: semanticColors.inputBackground,\r\n                cursor: 'text',\r\n                height: 32,\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'stretch',\r\n                position: 'relative',\r\n                selectors: {\r\n                    ':hover': {\r\n                        selectors: (_d = {},\r\n                            _d[HighContrastSelector] = {\r\n                                borderColor: 'Highlight'\r\n                            },\r\n                            _d)\r\n                    }\r\n                }\r\n            },\r\n            multiline && {\r\n                minHeight: '60px',\r\n                height: 'auto',\r\n                display: 'flex'\r\n            },\r\n            borderless && {\r\n                border: 'none'\r\n            },\r\n            !focused &&\r\n                !disabled && {\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderColor: semanticColors.inputBorderHovered\r\n                    }\r\n                }\r\n            },\r\n            focused && {\r\n                borderColor: semanticColors.inputFocusBorderAlt,\r\n                selectors: (_e = {},\r\n                    _e[HighContrastSelector] = {\r\n                        borderWidth: 2,\r\n                        borderColor: 'Highlight'\r\n                    },\r\n                    _e)\r\n            },\r\n            disabled && {\r\n                backgroundColor: semanticColors.disabledBackground,\r\n                borderColor: semanticColors.disabledBackground,\r\n                cursor: 'default'\r\n            },\r\n            underlined && {\r\n                flex: '1 1 0px',\r\n                border: 'none',\r\n                textAlign: 'left'\r\n            },\r\n            underlined &&\r\n                focused && {\r\n                selectors: (_f = {},\r\n                    _f[HighContrastSelector] = {\r\n                        height: 31 // -1px to prevent jumpiness in HC with the increased border-width to 2px\r\n                    },\r\n                    _f)\r\n            },\r\n            underlined &&\r\n                disabled && {\r\n                backgroundColor: 'transparent'\r\n            },\r\n            hasErrorMessage && {\r\n                borderColor: semanticColors.errorText,\r\n                selectors: {\r\n                    '&:focus, &:hover': {\r\n                        borderColor: semanticColors.errorText\r\n                    }\r\n                }\r\n            },\r\n            hasErrorMessage &&\r\n                focused && {\r\n                borderColor: semanticColors.errorText\r\n            },\r\n            !hasLabel &&\r\n                required && {\r\n                selectors: (_g = {\r\n                        ':after': {\r\n                            content: \"'*'\",\r\n                            color: semanticColors.errorText,\r\n                            position: 'absolute',\r\n                            top: -5,\r\n                            right: -10\r\n                        }\r\n                    },\r\n                    _g[HighContrastSelector] = {\r\n                        selectors: {\r\n                            ':after': {\r\n                                right: -14 // moving the * 4 pixel to right to alleviate border clipping in HC mode.\r\n                            }\r\n                        }\r\n                    },\r\n                    _g)\r\n            }\r\n        ],\r\n        field: [\r\n            theme.fonts.medium,\r\n            classNames.field,\r\n            normalize,\r\n            {\r\n                fontSize: FontSizes.medium,\r\n                borderRadius: 0,\r\n                border: 'none',\r\n                background: 'none',\r\n                backgroundColor: 'transparent',\r\n                color: semanticColors.inputText,\r\n                padding: '0 12px',\r\n                width: '100%',\r\n                minWidth: 0,\r\n                textOverflow: 'ellipsis',\r\n                outline: 0,\r\n                selectors: {\r\n                    '&:active, &:focus, &:hover': { outline: 0 },\r\n                    '::-ms-clear': {\r\n                        display: 'none'\r\n                    },\r\n                    '::placeholder': [\r\n                        theme.fonts.medium,\r\n                        {\r\n                            color: semanticColors.inputPlaceholderText,\r\n                            opacity: 1\r\n                        }\r\n                    ],\r\n                    ':-ms-input-placeholder': [\r\n                        theme.fonts.medium,\r\n                        {\r\n                            color: semanticColors.inputPlaceholderText,\r\n                            opacity: 1\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            multiline &&\r\n                !resizable && [\r\n                classNames.unresizable,\r\n                {\r\n                    resize: 'none'\r\n                }\r\n            ],\r\n            multiline && {\r\n                minHeight: 'inherit',\r\n                lineHeight: 17,\r\n                flexGrow: 1,\r\n                paddingTop: 6,\r\n                overflow: 'auto',\r\n                width: '100%'\r\n            },\r\n            multiline &&\r\n                autoAdjustHeight && {\r\n                overflow: 'hidden'\r\n            },\r\n            hasIcon && {\r\n                paddingRight: 24\r\n            },\r\n            multiline &&\r\n                hasIcon && {\r\n                paddingRight: 40\r\n            },\r\n            disabled && {\r\n                backgroundColor: 'transparent',\r\n                borderColor: 'transparent',\r\n                color: semanticColors.disabledText,\r\n                selectors: {\r\n                    '::placeholder': {\r\n                        color: semanticColors.disabledText\r\n                    },\r\n                    ':-ms-input-placeholder': {\r\n                        color: semanticColors.disabledText\r\n                    }\r\n                }\r\n            },\r\n            underlined && {\r\n                textAlign: 'left'\r\n            },\r\n            focused &&\r\n                !borderless && {\r\n                selectors: (_h = {},\r\n                    _h[HighContrastSelector] = {\r\n                        paddingLeft: 11,\r\n                        paddingRight: 11\r\n                    },\r\n                    _h)\r\n            },\r\n            focused &&\r\n                multiline &&\r\n                !borderless && {\r\n                selectors: (_j = {},\r\n                    _j[HighContrastSelector] = {\r\n                        paddingTop: 4 // take into consideration the 2px increased border-width (not when borderless).\r\n                    },\r\n                    _j)\r\n            },\r\n            inputClassName\r\n        ],\r\n        icon: [\r\n            multiline && {\r\n                paddingRight: 24,\r\n                paddingBottom: 8,\r\n                alignItems: 'flex-end'\r\n            },\r\n            {\r\n                pointerEvents: 'none',\r\n                position: 'absolute',\r\n                bottom: 5,\r\n                right: 8,\r\n                top: 'auto',\r\n                fontSize: 16,\r\n                lineHeight: 18\r\n            },\r\n            disabled && {\r\n                color: semanticColors.disabledText\r\n            },\r\n            iconClass\r\n        ],\r\n        description: [\r\n            classNames.description,\r\n            {\r\n                color: semanticColors.bodySubtext,\r\n                fontSize: FontSizes.xSmall\r\n            }\r\n        ],\r\n        errorMessage: [\r\n            classNames.errorMessage,\r\n            AnimationClassNames.slideDownIn20,\r\n            theme.fonts.small,\r\n            {\r\n                color: semanticColors.errorText,\r\n                margin: 0,\r\n                paddingTop: 5,\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n            }\r\n        ],\r\n        prefix: [classNames.prefix, fieldPrefixSuffix],\r\n        suffix: [classNames.suffix, fieldPrefixSuffix],\r\n        subComponentStyles: {\r\n            label: getLabelStyles(props)\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n}\r\n//# sourceMappingURL=TextField.styles.js.map","import { styled } from '../../Utilities';\r\nimport { TextFieldBase } from './TextField.base';\r\nimport { getStyles } from './TextField.styles';\r\nexport var TextField = styled(TextFieldBase, getStyles, undefined, {\r\n    scope: 'TextField'\r\n});\r\n//# sourceMappingURL=TextField.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, divProperties, getNativeProps } from '../../Utilities';\r\nimport { classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar LabelBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LabelBase, _super);\r\n    function LabelBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    LabelBase.prototype.render = function () {\r\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'label' : _b, children = _a.children, className = _a.className, disabled = _a.disabled, styles = _a.styles, required = _a.required, theme = _a.theme;\r\n        var classNames = getClassNames(styles, {\r\n            className: className,\r\n            disabled: disabled,\r\n            required: required,\r\n            theme: theme\r\n        });\r\n        return (React.createElement(RootType, tslib_1.__assign({}, getNativeProps(this.props, divProperties), { className: classNames.root }), children));\r\n    };\r\n    return LabelBase;\r\n}(BaseComponent));\r\nexport { LabelBase };\r\n//# sourceMappingURL=Label.base.js.map","import { styled } from '../../Utilities';\r\nimport { LabelBase } from './Label.base';\r\nimport { getStyles } from './Label.styles';\r\nexport var Label = styled(LabelBase, getStyles, undefined, {\r\n    scope: 'Label'\r\n});\r\n//# sourceMappingURL=Label.js.map","import { HighContrastSelector } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, required = props.required;\r\n    return {\r\n        root: [\r\n            'ms-Label',\r\n            theme.fonts.medium,\r\n            {\r\n                color: theme.semanticColors.bodyText,\r\n                boxSizing: 'border-box',\r\n                boxShadow: 'none',\r\n                margin: 0,\r\n                display: 'block',\r\n                padding: '5px 0',\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word'\r\n            },\r\n            disabled && {\r\n                color: theme.semanticColors.disabledBodyText,\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        color: 'GrayText'\r\n                    },\r\n                    _a)\r\n            },\r\n            required && {\r\n                selectors: {\r\n                    '::after': {\r\n                        content: \"' *'\",\r\n                        color: theme.semanticColors.errorText,\r\n                        paddingRight: 12\r\n                    }\r\n                }\r\n            },\r\n            className\r\n        ]\r\n    };\r\n    var _a;\r\n};\r\n//# sourceMappingURL=Label.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\n// if the percentComplete is near 0, don't animate it.\r\n// This prevents animations on reset to 0 scenarios\r\nvar ZERO_THRESHOLD = 0.01;\r\n/**\r\n * ProgressIndicator with no default styles.\r\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\r\nvar ProgressIndicatorBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProgressIndicatorBase, _super);\r\n    function ProgressIndicatorBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._onRenderProgress = function (props) {\r\n            var _a = _this.props, ariaValueText = _a.ariaValueText, barHeight = _a.barHeight, className = _a.className, styles = _a.styles, theme = _a.theme;\r\n            var percentComplete = typeof _this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, _this.props.percentComplete * 100)) : undefined;\r\n            var classNames = getClassNames(styles, {\r\n                theme: theme,\r\n                className: className,\r\n                barHeight: barHeight,\r\n                indeterminate: percentComplete === undefined ? true : false\r\n            });\r\n            var progressBarStyles = {\r\n                width: percentComplete !== undefined ? percentComplete + '%' : undefined,\r\n                transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined\r\n            };\r\n            var ariaValueMin = percentComplete !== undefined ? 0 : undefined;\r\n            var ariaValueMax = percentComplete !== undefined ? 100 : undefined;\r\n            var ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete) : undefined;\r\n            return (React.createElement(\"div\", { className: classNames.itemProgress },\r\n                React.createElement(\"div\", { className: classNames.progressTrack }),\r\n                React.createElement(\"div\", { className: classNames.progressBar, style: progressBarStyles, role: \"progressbar\", \"aria-valuemin\": ariaValueMin, \"aria-valuemax\": ariaValueMax, \"aria-valuenow\": ariaValueNow, \"aria-valuetext\": ariaValueText })));\r\n        };\r\n        return _this;\r\n    }\r\n    ProgressIndicatorBase.prototype.render = function () {\r\n        var _a = this.props, barHeight = _a.barHeight, className = _a.className, _b = _a.label, label = _b === void 0 ? this.props.title : _b, // Fall back to deprecated value.\r\n        description = _a.description, styles = _a.styles, theme = _a.theme, progressHidden = _a.progressHidden, _c = _a.onRenderProgress, onRenderProgress = _c === void 0 ? this._onRenderProgress : _c;\r\n        var percentComplete = typeof this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, this.props.percentComplete * 100)) : undefined;\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            barHeight: barHeight,\r\n            indeterminate: percentComplete === undefined ? true : false\r\n        });\r\n        return (React.createElement(\"div\", { className: classNames.root },\r\n            label ? React.createElement(\"div\", { className: classNames.itemName }, label) : null,\r\n            !progressHidden\r\n                ? onRenderProgress(tslib_1.__assign({}, this.props, { percentComplete: percentComplete }), this._onRenderProgress)\r\n                : null,\r\n            description ? React.createElement(\"div\", { className: classNames.itemDescription }, description) : null));\r\n    };\r\n    ProgressIndicatorBase.defaultProps = {\r\n        label: '',\r\n        description: '',\r\n        width: 180\r\n    };\r\n    return ProgressIndicatorBase;\r\n}(React.Component));\r\nexport { ProgressIndicatorBase };\r\n//# sourceMappingURL=ProgressIndicator.base.js.map","import { FontSizes, FontWeights, HighContrastSelector, keyframes, noWrap, getGlobalClassNames } from '../../Styling';\r\nimport { getRTL } from '../../Utilities';\r\nvar GlobalClassNames = {\r\n    root: 'ms-ProgressIndicator',\r\n    itemName: 'ms-ProgressIndicator-itemName',\r\n    itemDescription: 'ms-ProgressIndicator-itemDescription',\r\n    itemProgress: 'ms-ProgressIndicator-itemProgress',\r\n    progressTrack: 'ms-ProgressIndicator-progressTrack',\r\n    progressBar: 'ms-ProgressIndicator-progressBar'\r\n};\r\nvar IndeterminateProgress = keyframes({\r\n    '0%': {\r\n        left: '-30%'\r\n    },\r\n    '100%': {\r\n        left: '100%'\r\n    }\r\n});\r\nvar IndeterminateProgressRTL = keyframes({\r\n    '100%': {\r\n        right: '-30%'\r\n    },\r\n    '0%': {\r\n        right: '100%'\r\n    }\r\n});\r\nexport var getStyles = function (props) {\r\n    var isRTL = getRTL();\r\n    var className = props.className, indeterminate = props.indeterminate, theme = props.theme, _a = props.barHeight, barHeight = _a === void 0 ? 2 : _a;\r\n    var palette = theme.palette, semanticColors = theme.semanticColors;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var marginBetweenText = 8;\r\n    var textHeight = 18;\r\n    var progressTrackColor = palette.neutralLight;\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            {\r\n                fontWeight: FontWeights.regular\r\n            },\r\n            className\r\n        ],\r\n        itemName: [\r\n            classNames.itemName,\r\n            noWrap,\r\n            {\r\n                color: semanticColors.bodyText,\r\n                fontSize: FontSizes.medium,\r\n                paddingTop: marginBetweenText / 2,\r\n                lineHeight: textHeight + 2\r\n            }\r\n        ],\r\n        itemDescription: [\r\n            classNames.itemDescription,\r\n            {\r\n                color: semanticColors.bodySubtext,\r\n                fontSize: FontSizes.xSmall,\r\n                lineHeight: textHeight\r\n            }\r\n        ],\r\n        itemProgress: [\r\n            classNames.itemProgress,\r\n            {\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                height: barHeight,\r\n                padding: marginBetweenText + \"px 0\"\r\n            }\r\n        ],\r\n        progressTrack: [\r\n            classNames.progressTrack,\r\n            {\r\n                position: 'absolute',\r\n                width: '100%',\r\n                height: barHeight,\r\n                backgroundColor: progressTrackColor,\r\n                selectors: (_b = {},\r\n                    _b[HighContrastSelector] = {\r\n                        borderBottom: '1px solid WindowText'\r\n                    },\r\n                    _b)\r\n            }\r\n        ],\r\n        progressBar: [\r\n            {\r\n                backgroundColor: palette.themePrimary,\r\n                height: barHeight,\r\n                position: 'absolute',\r\n                transition: 'width .3s ease',\r\n                width: 0,\r\n                selectors: (_c = {},\r\n                    _c[HighContrastSelector] = {\r\n                        backgroundColor: 'WindowText'\r\n                    },\r\n                    _c)\r\n            },\r\n            indeterminate\r\n                ? {\r\n                    position: 'absolute',\r\n                    minWidth: '33%',\r\n                    background: \"linear-gradient(to right, \" + progressTrackColor + \" 0%, \" + palette.themePrimary + \" 50%, \" + progressTrackColor + \" 100%)\",\r\n                    animation: (isRTL ? IndeterminateProgressRTL : IndeterminateProgress) + \" 3s infinite\"\r\n                }\r\n                : {\r\n                    transition: 'width .15s linear'\r\n                },\r\n            classNames.progressBar\r\n        ]\r\n    };\r\n    var _b, _c;\r\n};\r\n//# sourceMappingURL=ProgressIndicator.styles.js.map","import { styled } from '../../Utilities';\r\nimport { ProgressIndicatorBase } from './ProgressIndicator.base';\r\nimport { getStyles } from './ProgressIndicator.styles';\r\n/**\r\n * ProgressIndicator description\r\n */\r\nexport var ProgressIndicator = styled(ProgressIndicatorBase, getStyles, undefined, { scope: 'ProgressIndicator' });\r\n//# sourceMappingURL=ProgressIndicator.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, getId, inputProperties, getNativeProps } from '../../Utilities';\r\nimport { Label } from '../../Label';\r\nimport { KeytipData } from '../../KeytipData';\r\nvar getClassNames = classNamesFunction();\r\nvar ToggleBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ToggleBase, _super);\r\n    function ToggleBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._toggleButton = React.createRef();\r\n        _this._onClick = function (ev) {\r\n            var _a = _this.props, disabled = _a.disabled, checkedProp = _a.checked, onChange = _a.onChange, onChanged = _a.onChanged, onClick = _a.onClick;\r\n            var checked = _this.state.checked;\r\n            if (!disabled) {\r\n                // Only update the state if the user hasn't provided it.\r\n                if (checkedProp === undefined) {\r\n                    _this.setState({\r\n                        checked: !checked\r\n                    });\r\n                }\r\n                if (onChange) {\r\n                    onChange(ev, !checked);\r\n                }\r\n                if (onChanged) {\r\n                    onChanged(!checked);\r\n                }\r\n                if (onClick) {\r\n                    onClick(ev);\r\n                }\r\n            }\r\n        };\r\n        _this._warnMutuallyExclusive({\r\n            checked: 'defaultChecked'\r\n        });\r\n        _this._warnDeprecations({\r\n            onAriaLabel: 'ariaLabel',\r\n            offAriaLabel: undefined,\r\n            onChanged: 'onChange'\r\n        });\r\n        _this.state = {\r\n            checked: !!(props.checked || props.defaultChecked)\r\n        };\r\n        _this._id = props.id || getId('Toggle');\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ToggleBase.prototype, \"checked\", {\r\n        /**\r\n         * Gets the current checked state of the toggle.\r\n         */\r\n        get: function () {\r\n            return this.state.checked;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ToggleBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.checked !== undefined) {\r\n            this.setState({\r\n                checked: !!newProps.checked // convert null to false\r\n            });\r\n        }\r\n    };\r\n    ToggleBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'div' : _b, className = _a.className, theme = _a.theme, disabled = _a.disabled, keytipProps = _a.keytipProps, label = _a.label, ariaLabel = _a.ariaLabel, onAriaLabel = _a.onAriaLabel, offAriaLabel = _a.offAriaLabel, offText = _a.offText, onText = _a.onText, styles = _a.styles, inlineLabel = _a.inlineLabel;\r\n        var checked = this.state.checked;\r\n        var stateText = checked ? onText : offText;\r\n        var badAriaLabel = checked ? onAriaLabel : offAriaLabel;\r\n        var toggleNativeProps = getNativeProps(this.props, inputProperties, ['defaultChecked']);\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            checked: checked,\r\n            inlineLabel: inlineLabel,\r\n            onOffMissing: !onText && !offText\r\n        });\r\n        return (React.createElement(RootType, { className: classNames.root, hidden: toggleNativeProps.hidden },\r\n            label && (React.createElement(Label, { htmlFor: this._id, className: classNames.label }, label)),\r\n            React.createElement(\"div\", { className: classNames.container },\r\n                React.createElement(KeytipData, { keytipProps: keytipProps, ariaDescribedBy: toggleNativeProps['aria-describedby'], disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"button\", tslib_1.__assign({}, toggleNativeProps, keytipAttributes, { className: classNames.pill, disabled: disabled, id: _this._id, type: \"button\", role: \"switch\" // ARIA 1.1 definition; \"checkbox\" in ARIA 1.0\r\n                    , ref: _this._toggleButton, \"aria-disabled\": disabled, \"aria-checked\": checked, \"aria-label\": ariaLabel ? ariaLabel : badAriaLabel, \"data-is-focusable\": true, onChange: _this._noop, onClick: _this._onClick }),\r\n                    React.createElement(\"div\", { className: classNames.thumb }))); }),\r\n                stateText && React.createElement(Label, { className: classNames.text }, stateText))));\r\n    };\r\n    ToggleBase.prototype.focus = function () {\r\n        if (this._toggleButton.current) {\r\n            this._toggleButton.current.focus();\r\n        }\r\n    };\r\n    ToggleBase.prototype._noop = function () {\r\n        /* no-op */\r\n    };\r\n    return ToggleBase;\r\n}(BaseComponent));\r\nexport { ToggleBase };\r\n//# sourceMappingURL=Toggle.base.js.map","import { styled } from '../../Utilities';\r\nimport { ToggleBase } from './Toggle.base';\r\nimport { getStyles } from './Toggle.styles';\r\nexport var Toggle = styled(ToggleBase, getStyles, undefined, { scope: 'Toggle' });\r\n//# sourceMappingURL=Toggle.js.map","import { HighContrastSelector, getFocusStyle } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, checked = props.checked, inlineLabel = props.inlineLabel, onOffMissing = props.onOffMissing;\r\n    var semanticColors = theme.semanticColors;\r\n    var pillUncheckedBackground = semanticColors.bodyBackground;\r\n    var pillCheckedBackground = semanticColors.inputBackgroundChecked;\r\n    var pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;\r\n    var pillCheckedDisabledBackground = semanticColors.disabledBodySubtext;\r\n    var thumbBackground = semanticColors.inputBorderHovered;\r\n    var thumbCheckedBackground = semanticColors.inputForegroundChecked;\r\n    var thumbDisabledBackground = semanticColors.disabledBodySubtext;\r\n    var thumbCheckedDisabledBackground = semanticColors.disabledBackground;\r\n    var pillBorderColor = semanticColors.smallInputBorder;\r\n    var pillBorderHoveredColor = semanticColors.inputBorderHovered;\r\n    var pillBorderDisabledColor = semanticColors.disabledBodySubtext;\r\n    var textDisabledColor = semanticColors.disabledText;\r\n    return {\r\n        root: [\r\n            'ms-Toggle',\r\n            checked && 'is-checked',\r\n            !disabled && 'is-enabled',\r\n            disabled && 'is-disabled',\r\n            theme.fonts.medium,\r\n            {\r\n                marginBottom: '8px'\r\n            },\r\n            inlineLabel && {\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n            },\r\n            className\r\n        ],\r\n        label: [\r\n            'ms-Toggle-label',\r\n            disabled && {\r\n                color: textDisabledColor,\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        color: 'GrayText'\r\n                    },\r\n                    _a)\r\n            },\r\n            inlineLabel &&\r\n                !onOffMissing && {\r\n                marginRight: 16\r\n            },\r\n            onOffMissing &&\r\n                inlineLabel && {\r\n                order: 1,\r\n                marginLeft: 16\r\n            }\r\n        ],\r\n        container: [\r\n            'ms-Toggle-innerContainer',\r\n            {\r\n                display: 'inline-flex',\r\n                position: 'relative'\r\n            }\r\n        ],\r\n        pill: [\r\n            'ms-Toggle-background',\r\n            getFocusStyle(theme, -3),\r\n            {\r\n                fontSize: '20px',\r\n                boxSizing: 'border-box',\r\n                width: '2.2em',\r\n                height: '1em',\r\n                borderRadius: '1em',\r\n                transition: 'all 0.1s ease',\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                background: pillUncheckedBackground,\r\n                borderColor: pillBorderColor,\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: '0 .2em'\r\n            },\r\n            !disabled && [\r\n                !checked && {\r\n                    selectors: {\r\n                        ':hover': [\r\n                            {\r\n                                borderColor: pillBorderHoveredColor\r\n                            }\r\n                        ],\r\n                        ':hover .ms-Toggle-thumb': [\r\n                            {\r\n                                selectors: (_b = {},\r\n                                    _b[HighContrastSelector] = {\r\n                                        borderColor: 'Highlight'\r\n                                    },\r\n                                    _b)\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                checked && [\r\n                    {\r\n                        background: pillCheckedBackground,\r\n                        borderColor: 'transparent',\r\n                        justifyContent: 'flex-end'\r\n                    },\r\n                    {\r\n                        selectors: (_c = {\r\n                                ':hover': [\r\n                                    {\r\n                                        backgroundColor: pillCheckedHoveredBackground,\r\n                                        borderColor: 'transparent',\r\n                                        selectors: (_d = {},\r\n                                            _d[HighContrastSelector] = {\r\n                                                backgroundColor: 'Highlight'\r\n                                            },\r\n                                            _d)\r\n                                    }\r\n                                ]\r\n                            },\r\n                            _c[HighContrastSelector] = {\r\n                                backgroundColor: 'WindowText'\r\n                            },\r\n                            _c)\r\n                    }\r\n                ]\r\n            ],\r\n            disabled && [\r\n                {\r\n                    cursor: 'default'\r\n                },\r\n                !checked && [\r\n                    {\r\n                        borderColor: pillBorderDisabledColor\r\n                    }\r\n                ],\r\n                checked && [\r\n                    {\r\n                        backgroundColor: pillCheckedDisabledBackground,\r\n                        borderColor: 'transparent',\r\n                        justifyContent: 'flex-end'\r\n                    }\r\n                ]\r\n            ],\r\n            !disabled && {\r\n                selectors: {\r\n                    '&:hover': {\r\n                        selectors: (_e = {},\r\n                            _e[HighContrastSelector] = {\r\n                                borderColor: 'Highlight'\r\n                            },\r\n                            _e)\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        thumb: [\r\n            'ms-Toggle-thumb',\r\n            {\r\n                width: '.5em',\r\n                height: '.5em',\r\n                borderRadius: '.5em',\r\n                transition: 'all 0.1s ease',\r\n                backgroundColor: thumbBackground,\r\n                /* Border is added to handle high contrast mode for Firefox */\r\n                borderColor: 'transparent',\r\n                borderWidth: '.28em',\r\n                borderStyle: 'solid',\r\n                boxSizing: 'border-box'\r\n            },\r\n            !disabled &&\r\n                checked && [\r\n                {\r\n                    backgroundColor: thumbCheckedBackground,\r\n                    selectors: (_f = {},\r\n                        _f[HighContrastSelector] = {\r\n                            backgroundColor: 'Window',\r\n                            borderColor: 'Window'\r\n                        },\r\n                        _f)\r\n                }\r\n            ],\r\n            disabled && [\r\n                !checked && [\r\n                    {\r\n                        backgroundColor: thumbDisabledBackground\r\n                    }\r\n                ],\r\n                checked && [\r\n                    {\r\n                        backgroundColor: thumbCheckedDisabledBackground\r\n                    }\r\n                ]\r\n            ]\r\n        ],\r\n        text: [\r\n            'ms-Toggle-stateText',\r\n            {\r\n                selectors: {\r\n                    // Workaround: make rules more specific than Label rules.\r\n                    '&&': {\r\n                        padding: '0',\r\n                        margin: '0 8px',\r\n                        userSelect: 'none'\r\n                    }\r\n                }\r\n            },\r\n            disabled && {\r\n                selectors: {\r\n                    '&&': {\r\n                        color: textDisabledColor,\r\n                        selectors: (_g = {},\r\n                            _g[HighContrastSelector] = {\r\n                                color: 'GrayText'\r\n                            },\r\n                            _g)\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n};\r\n//# sourceMappingURL=Toggle.styles.js.map"],"sourceRoot":""}