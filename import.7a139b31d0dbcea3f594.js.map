{"version":3,"sources":["webpack:///./useLocalStorage.ts","webpack:///./components/DelimiterInput.tsx","webpack:///./components/NewlineDropdown.tsx","webpack:///./components/ProgressBar.tsx","webpack:///./components/BottomBar.tsx","webpack:///./components/ParserOutputBox.tsx","webpack:///./components/Page.tsx","webpack:///./components/EncodingDropdownOptions.ts","webpack:///./components/EncodingDropdown.tsx","webpack:///./components/SourceInput.tsx","webpack:///./components/Import.tsx"],"names":["namespacedUseLocalStorage","namespace","key","initialValue","value","item","window","localStorage","getItem","JSON","parse","e","console","warn","storedValue","setStoredValue","setItem","stringify","useLocalStorage","stringToDropdownKey","dropdownToString","DelimiterInput","showLengthError","onChange","otherSelected","setOtherSelected","customInput","className","_","v","description","onGetErrorMessage","length","deferredValidationTime","placeholder","spellCheck","label","options","text","responsiveMode","large","selectedKey","option","includes","delimiter","charCodeAt","toString","toUpperCase","padStart","autoDetectOption","newlineSequeneceMenu","NewlineDropdown","showAutoDetect","ProgressBar","stopText","onClick","progress","aborting","variant","show","percentComplete","percent","BottomBar","style","marginTop","to","ParserOutputBox","output","type","rows","multiline","readOnly","error","stack","Page","helpLink","mac","children","firstVisit","setFirstVisit","width","display","justifyContent","marginRight","iconProps","iconName","title","ariaLabel","href","target","rel","EncodingDropdownOptions","AutoDetectOption","EncodingDropdown","dropdownOptions","Dropdown","fileSourceMenu","SourceInput","input","inputType","file","accept","files","id","TextField","wrap","textInput","Import","buttonTooltipContent","initialized","state","platform","dispatch","source","setSource","setDelimiter","newline","setNewline","encoding","setEncoding","Office","PlatformType","Mac","TooltipHost","styles","root","content","delay","zero","PrimaryButton","disabled"],"mappings":"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","file":"import.7a139b31d0dbcea3f594.js","sourcesContent":["import {Dispatch, useState} from 'react';\n\nexport function useLocalStorage<T>(key: string, initialValue: T): [T, Dispatch<T>] {\n\tconst [storedValue, setStoredValue] = useState<T>(() => {\n\t\tlet value: T = initialValue;\n\t\ttry {\n\t\t\tconst item = window.localStorage.getItem(key);\n\t\t\tif (item) {\n\t\t\t\tvalue = JSON.parse(item);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t}\n\t\treturn value;\n\t});\n\n\tconst setValue = value => {\n\t\tsetStoredValue(value);\n\t\ttry {\n\t\t\twindow.localStorage.setItem(key, JSON.stringify(value));\n\t\t} catch (e) {\n\t\t\tconsole.warn(e);\n\t\t}\n\t};\n\n\treturn [storedValue, setValue];\n}\n\nexport function namespacedUseLocalStorage(namespace: string): typeof useLocalStorage {\n\treturn function (key: string, initialValue) {\n\t\treturn useLocalStorage(namespace + '-' + key, initialValue);\n\t}\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField, ResponsiveMode} from '@fluentui/react';\nimport * as style from './style.css';\nimport {useState} from 'react';\n\nexport const enum DropdownOptionKey {comma, space, tab, other}\n\ninterface Props {\n\tshowLengthError: boolean;\n\tvalue: string;\n\tonChange: (value: string) => void;\n}\n\nconst stringToDropdownKey = {\n\t'\\u002c': DropdownOptionKey.comma,\n\t'\\u0020': DropdownOptionKey.space,\n\t'\\u0009': DropdownOptionKey.tab,\n};\n\nconst dropdownToString = {\n\t[DropdownOptionKey.comma]: '\\u002c',\n\t[DropdownOptionKey.space]: '\\u0020',\n\t[DropdownOptionKey.tab]: '\\u0009',\n\t[DropdownOptionKey.other]: '',\n};\n\nexport function DelimiterInput({showLengthError, value, onChange}: Props): React.ReactElement {\n\tconst dropdownOptions: IDropdownOption[] = [\n\t\t{\n\t\t\tkey: DropdownOptionKey.comma,\n\t\t\ttext: 'Comma (U+002C)',\n\t\t},\n\t\t{\n\t\t\tkey: DropdownOptionKey.space,\n\t\t\ttext: 'Space (U+0020)',\n\t\t},\n\t\t{\n\t\t\tkey: DropdownOptionKey.tab,\n\t\t\ttext: 'Tab (U+0009)',\n\t\t},\n\t\t{\n\t\t\tkey: DropdownOptionKey.other,\n\t\t\ttext: 'Other',\n\t\t},\n\t];\n\n\tconst [otherSelected, setOtherSelected] = useState(false);\n\n\tconst selectedKey = (): DropdownOptionKey => {\n\t\tif (!otherSelected && value in stringToDropdownKey) {\n\t\t\treturn stringToDropdownKey[value];\n\t\t}\n\n\t\treturn DropdownOptionKey.other;\n\t}\n\n\tconst customInput = (\n\t\t<div className={style.smallDivider}>\n\t\t\t<TextField\n\t\t\t\tclassName={style.monospace}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(_, v) => onChange(v)}\n\t\t\t\tdescription={description(value)}\n\t\t\t\tonGetErrorMessage={\n\t\t\t\t\t(v) => showLengthError && v.length > 1 ? 'Delimiter length must be 1' : ''\n\t\t\t\t}\n\t\t\t\tdeferredValidationTime={1}\n\t\t\t\tplaceholder={'Enter custom delimiter'}\n\t\t\t\tspellCheck={false}\n\t\t\t/>\n\t\t</div>\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tlabel={'Delimiter'}\n\t\t\t\toptions={dropdownOptions}\n\t\t\t\tresponsiveMode={ResponsiveMode.large}\n\t\t\t\tselectedKey={selectedKey()}\n\t\t\t\tonChange={(_, option: IDropdownOption) => {\n\t\t\t\t\tsetOtherSelected(option.key === DropdownOptionKey.other);\n\t\t\t\t\tonChange(dropdownToString[option.key]);\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{\n\t\t\t\totherSelected || !['\\u002c', '\\u0020', '\\u0009'].includes(value)\n\t\t\t\t\t? customInput\n\t\t\t\t\t: null\n\t\t\t}\n\t\t</>\n\t);\n}\n\nfunction description(delimiter: string): string {\n\tif (delimiter.length == 1) {\n\t\treturn codePoint(delimiter);\n\t} else {\n\t\treturn '\\u00A0';\n\t}\n}\n\nexport function codePoint(c: string): string {\n\treturn 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, ResponsiveMode} from '@fluentui/react';\nimport {NewlineSequence} from '../parser';\n\ninterface Props {\n\tshowAutoDetect: boolean;\n\tvalue: NewlineSequence;\n\tonChange: (value: NewlineSequence) => void;\n}\n\nconst autoDetectOption: IDropdownOption = {\n\tkey: NewlineSequence.AutoDetect,\n\ttext: 'Auto-detect',\n};\n\nconst newlineSequeneceMenu = [\n\t{\n\t\tkey: NewlineSequence.CRLF,\n\t\ttext: 'CRLF',\n\t},\n\t{\n\t\tkey: NewlineSequence.CR,\n\t\ttext: 'CR',\n\t},\n\t{\n\t\tkey: NewlineSequence.LF,\n\t\ttext: 'LF',\n\t},\n];\n\nexport function NewlineDropdown({showAutoDetect, value, onChange}: Props): React.ReactElement {\n\tlet options: IDropdownOption[];\n\tif (showAutoDetect) {\n\t\toptions = [autoDetectOption, ...newlineSequeneceMenu];\n\t} else {\n\t\toptions = newlineSequeneceMenu;\n\t}\n\n\treturn (\n\t\t<Dropdown\n\t\t\tlabel={'Newline sequence'}\n\t\t\tresponsiveMode={ResponsiveMode.large}\n\t\t\tselectedKey={value}\n\t\t\toptions={options}\n\t\t\tonChange={(_, option) => onChange(option.key as NewlineSequence)}\n\t\t/>\n\t);\n}","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from '@fluentui/react';\nimport * as style from './style.css';\nimport {AppState} from '../state';\n\ninterface Props {\n\t// Fired when the \"Stop\" link is clicked.\n\tonClick: () => void;\n\tprogress: AppState['progress'];\n}\n\nexport function ProgressBar({onClick, progress}: Props): React.ReactElement {\n\tlet stopText: React.ReactElement;\n\tif (progress.aborting) {\n\t\tstopText = <Text variant='small'>Stopping</Text>;\n\t} else {\n\t\tstopText = <Text variant='small'><Link onClick={onClick}>Stop</Link></Text>\n\t}\n\n\treturn (\n\t\t<div className={style.smallDivider}>\n\t\t\t{\n\t\t\t\tprogress.show\n\t\t\t\t\t? <>\n\t\t\t\t\t\t<Text variant='small'>{stopText}</Text>\n\t\t\t\t\t\t<ProgressIndicator percentComplete={progress.percent} />\n\t\t\t\t\t</>\n\t\t\t\t\t: <Text variant='small'>&nbsp;</Text>\n\t\t\t}\n\t\t</div>\n\t);\n}","import * as style from './style.css';\nimport {Link, Text} from '@fluentui/react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\n\nexport function BottomBar(): React.ReactElement {\n\treturn (\n\t\t<div\n\t\t\tclassName={style.centerContent + ' ' + style.fullWidth}\n\t\t\tstyle={{marginTop: '30px'}}\n\t\t>\n\t\t\t<Text variant='medium'>\n\t\t\t\t<RouterLink to={Pages.about} className={style.removeUnderline}>\n\t\t\t\t\t<Link>About</Link>\n\t\t\t\t</RouterLink>\n\t\t\t</Text>\n\t\t</div>\n\t);\n}","import {TextField} from '@fluentui/react';\nimport * as React from 'react';\nimport * as style from './style.css';\nimport {AppState, OutputType} from '../state';\n\ninterface Props {\n\toutput: AppState['output'];\n}\n\nexport function ParserOutputBox({output}: Props): React.ReactElement {\n\tswitch (output.type) {\n\tcase OutputType.text:\n\t\treturn (\n\t\t\t<TextField\n\t\t\t\tclassName={style.monospace}\n\t\t\t\tvalue={output.text}\n\t\t\t\trows={20} multiline\n\t\t\t\tspellCheck={false}\n\t\t\t\treadOnly\n\t\t\t/>\n\t\t);\n\tcase OutputType.error:\n\t\treturn (\n\t\t\t<TextField\n\t\t\t\tclassName={style.monospace + ' ' + style.redText}\n\t\t\t\tvalue={output.error.toString() + '\\n' + output.error.stack}\n\t\t\t\trows={20} multiline\n\t\t\t\tspellCheck={false}\n\t\t\t\treadOnly\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn null;\n}","import {IconButton, PrimaryButton, Text} from '@fluentui/react';\nimport * as React from 'react';\nimport * as style from './style.css';\nimport {namespacedUseLocalStorage} from '../useLocalStorage';\n\ninterface Props {\n\ttext: string;\n\thelpLink: string;\n\tmac: boolean;\n\tchildren: React.ReactElement[];\n}\n\nconst useLocalStorage = namespacedUseLocalStorage('app');\n\n// TitleBar contains the page title and a question mark icon in the top right corner for linking to\n// the help page. This app was designed to be self-explanatory, but Office Store policies demands\n// that a getting started prompt is provided. Their platform, their own stupid rules.\n// Policy 11.3: Your Office Add-in must provide a seamless first run experience, with a clear value\n// proposition.\n// Validation report: Please provide additional information on the first screen explaining how to\n// use the add-in, or directing the user to help / configuration information.\nexport function Page({text, helpLink, mac, children}: Props): React.ReactElement {\n\tconst [firstVisit, setFirstVisit] = useLocalStorage('firstVisit', true);\n\n\treturn (\n\t\t<div className={style.pageMargin}>\n\t\t\t<div\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'space-between',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Text variant='xLarge'><strong>{text}</strong></Text>\n\t\t\t\t<div className={style.smallIcon}>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\t// Mac platform puts a big button in the top right corner\n\t\t\t\t\t\tstyle={{marginRight: mac ? '30px' : '4px'}}\n\t\t\t\t\t\ticonProps={{iconName: 'Help'}}\n\t\t\t\t\t\ttitle={'Help page'}\n\t\t\t\t\t\tariaLabel={'Help page'}\n\t\t\t\t\t\thref={helpLink}\n\t\t\t\t\t\ttarget='_blank'\n\t\t\t\t\t\trel='noopener noreferrer'\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tfirstVisit\n\t\t\t\t\t? <>\n\t\t\t\t\t\t<Text variant='mediumPlus'>\n\t\t\t\t\t\t\t{/* eslint-disable-next-line max-len */}\n\t\t\t\t\t\t\tCSV Import+Export can open and save CSV files of various formats. If you need any help, the &quot;?&quot; icon in the top right corner will take you to the help page.\n\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t<br /><br />\n\t\t\t\t\t\t<PrimaryButton\n\t\t\t\t\t\t\ttext={'Continue'}\n\t\t\t\t\t\t\tonClick={() => setFirstVisit(false)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</>\n\t\t\t\t\t: children\n\t\t\t}\n\t\t</div>\n\t);\n}","import {IDropdownOption} from '@fluentui/react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n\t// Use generateEncodingList.js to generate list\n\t{\n\t\t\"key\": \"Big5\",\n\t\t\"text\": \"Big5\",\n\t},\n\t{\n\t\t\"key\": \"EUC-JP\",\n\t\t\"text\": \"EUC-JP\",\n\t},\n\t{\n\t\t\"key\": \"EUC-KR\",\n\t\t\"text\": \"EUC-KR\",\n\t},\n\t{\n\t\t\"key\": \"gb18030\",\n\t\t\"text\": \"gb18030\",\n\t},\n\t{\n\t\t\"key\": \"GBK\",\n\t\t\"text\": \"GBK\",\n\t},\n\t{\n\t\t\"key\": \"IBM866\",\n\t\t\"text\": \"IBM866 (Cyrillic)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-2022-JP\",\n\t\t\"text\": \"ISO-2022-JP (JIS)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-10\",\n\t\t\"text\": \"ISO-8859-10 (Latin-6)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-13\",\n\t\t\"text\": \"ISO-8859-13 (Latin-7)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-14\",\n\t\t\"text\": \"ISO-8859-14 (Latin-8)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-15\",\n\t\t\"text\": \"ISO-8859-15 (Latin-9)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-16\",\n\t\t\"text\": \"ISO-8859-16 (Latin-10)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-2\",\n\t\t\"text\": \"ISO-8859-2 (Central European)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-3\",\n\t\t\"text\": \"ISO-8859-3 (Latin 3)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-4\",\n\t\t\"text\": \"ISO-8859-4 (Latin-4)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-5\",\n\t\t\"text\": \"ISO-8859-5 (Cryillic)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-6\",\n\t\t\"text\": \"ISO-8859-6 (Arabic)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-7\",\n\t\t\"text\": \"ISO-8859-7 (Greek)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-8\",\n\t\t\"text\": \"ISO-8859-8 (Hebrew)\",\n\t},\n\t{\n\t\t\"key\": \"ISO-8859-8-I\",\n\t\t\"text\": \"ISO-8859-8-I (Hebrew)\",\n\t},\n\t{\n\t\t\"key\": \"KOI8-R\",\n\t\t\"text\": \"KOI8-R\",\n\t},\n\t{\n\t\t\"key\": \"KOI8-U\",\n\t\t\"text\": \"KOI8-U\",\n\t},\n\t{\n\t\t\"key\": \"x-mac-cyrillic\",\n\t\t\"text\": \"Mac OS Cyrillic\",\n\t},\n\t{\n\t\t\"key\": \"macintosh\",\n\t\t\"text\": \"Mac OS Roman\",\n\t},\n\t{\n\t\t\"key\": \"Shift_JIS\",\n\t\t\"text\": \"Shift_JIS\",\n\t},\n\t{\n\t\t\"key\": \"UTF-16BE\",\n\t\t\"text\": \"UTF-16BE\",\n\t},\n\t{\n\t\t\"key\": \"UTF-16LE\",\n\t\t\"text\": \"UTF-16LE\",\n\t},\n\t{\n\t\t\"key\": \"UTF-8\",\n\t\t\"text\": \"UTF-8\",\n\t},\n\t{\n\t\t\"key\": \"windows-1250\",\n\t\t\"text\": \"windows-1250 (Central European)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1251\",\n\t\t\"text\": \"windows-1251 (Cyrillic)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1252\",\n\t\t\"text\": \"windows-1252 (Western European)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1253\",\n\t\t\"text\": \"windows-1253 (Greek)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1254\",\n\t\t\"text\": \"windows-1254 (Turkish)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1255\",\n\t\t\"text\": \"windows-1255 (Hebrew)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1256\",\n\t\t\"text\": \"windows-1256 (Arabic)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1257\",\n\t\t\"text\": \"windows-1257 (Baltic)\",\n\t},\n\t{\n\t\t\"key\": \"windows-1258\",\n\t\t\"text\": \"windows-1258 (Vietnamese)\",\n\t},\n\t{\n\t\t\"key\": \"windows-874\",\n\t\t\"text\": \"windows-874 (Thai)\",\n\t},\n];","import * as React from 'react';\nimport {Dropdown, IDropdownOption} from '@fluentui/react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\n\ninterface Props {\n\tshowAutoDetect: boolean;\n\tvalue: string;\n\tonChange: (value: string) => void;\n}\n\nconst AutoDetectOption: IDropdownOption = {\n\t'key': '',\n\t'text': 'Auto-detect',\n};\n\nexport function EncodingDropdown({showAutoDetect, value, onChange}: Props): React.ReactElement {\n\tlet dropdownOptions: IDropdownOption[];\n\tif (showAutoDetect) {\n\t\tdropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n\t} else {\n\t\tdropdownOptions = EncodingDropdownOptions;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tlabel={'Encoding'}\n\t\t\t\tselectedKey={value}\n\t\t\t\toptions={dropdownOptions}\n\t\t\t\tonChange={(_, option) => onChange(option.key as string)}\n\t\t\t/>\n\t\t\t<br/>\n\t\t</>\n\t);\n}","import * as React from 'react';\nimport {InputType, Source} from '../parser';\nimport * as style from './style.css';\nimport {Dropdown, IDropdownOption, ResponsiveMode, TextField} from '@fluentui/react';\n\ninterface Props {\n\tvalue: Source;\n\tonChange: (value: Source) => void;\n}\n\nconst fileSourceMenu: IDropdownOption[] = [\n\t{\n\t\tkey: InputType.file,\n\t\ttext: 'File',\n\t},\n\t{\n\t\tkey: InputType.text,\n\t\ttext: 'Text input',\n\t},\n];\n\nfunction fileInput(onChange: (value: File) => void): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\tclassName={style.fullWidth}\n\t\t\t\ttype='file'\n\t\t\t\taccept='text/csv'\n\t\t\t\tonChange={e => onChange(e.target.files[0])}\n\t\t\t\tid='SourceInput-FileInput'\n\t\t\t/>\n\t\t\t<br />\n\t\t</>\n\t);\n}\n\nfunction textInput(value: string, onChange: (value: string) => void): React.ReactElement {\n\treturn (\n\t\t<TextField\n\t\t\tclassName={style.monospace}\n\t\t\tmultiline rows={10}\n\t\t\tspellCheck={false}\n\t\t\twrap='off'\n\t\t\tonChange={(_, text) => onChange(text)}\n\t\t\tvalue={value}\n\t\t\tid='SourceInput-TextInput'\n\t\t/>\n\t);\n}\n\nexport function SourceInput({value, onChange}: Props): React.ReactElement {\n\tlet input: React.ReactElement;\n\tswitch (value.inputType) {\n\tcase InputType.file:\n\t\tinput = fileInput(file => onChange({inputType: InputType.file, file, text: ''}));\n\t\tbreak;\n\tcase InputType.text:\n\t\tinput = textInput(\n\t\t\tvalue.text,\n\t\t\ttext => onChange({inputType: InputType.text, file: null, text}),\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tlabel={'Import type'}\n\t\t\t\toptions={fileSourceMenu}\n\t\t\t\tresponsiveMode={ResponsiveMode.large}\n\t\t\t\tselectedKey={value.inputType}\n\t\t\t\tonChange={\n\t\t\t\t\t(_, option) => onChange(\n\t\t\t\t\t\t{inputType: option.key as InputType, file: null, text: ''},\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tid='SourceInput-Dropdown'\n\t\t\t/>\n\t\t\t<div className={style.smallDivider} />\n\t\t\t{input}\n\t\t</>\n\t);\n}","import * as React from 'react';\nimport {useState} from 'react';\nimport {PrimaryButton, TooltipDelay, TooltipHost} from '@fluentui/react';\nimport {InputType, NewlineSequence, Source} from '../parser';\nimport {SourceInput} from './SourceInput';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {Page} from './Page';\nimport {namespacedUseLocalStorage} from '../useLocalStorage';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {abort, Dispatch, importCSV} from '../action';\nimport {AppState} from '../state';\n\nconst useLocalStorage = namespacedUseLocalStorage('import');\n\nexport default function Import(): React.ReactElement {\n\tconst initialized = useSelector(state => state.initialized) as AppState['initialized'];\n\tconst platform = useSelector(state => state.platform) as AppState['platform'];\n\tconst progress = useSelector(state => state.progress) as AppState['progress'];\n\tconst output = useSelector(state => state.output) as AppState['output'];\n\tconst dispatch = useDispatch() as Dispatch;\n\n\tconst [source, setSource] = useState(\n\t\t{inputType: InputType.file, file: null, text: ''} as Source,\n\t);\n\tconst [delimiter, setDelimiter] = useLocalStorage('delimiter', '\\u002c');\n\tconst [newline, setNewline] = useLocalStorage('newline', NewlineSequence.AutoDetect);\n\tconst [encoding, setEncoding] = useLocalStorage('encoding', '');\n\n\tlet buttonTooltipContent: string;\n\tif (source.inputType == InputType.file && source.file == null) {\n\t\tbuttonTooltipContent = 'Import source is not selected';\n\t} else if (delimiter.length !== 1) {\n\t\tbuttonTooltipContent = 'Delimiter is invalid';\n\t} else if (!initialized) {\n\t\tbuttonTooltipContent = 'Excel API is not initialized';\n\t} else {\n\t\tbuttonTooltipContent = '';\n\t}\n\n\treturn (\n\t\t<Page\n\t\t\ttext={'Import CSV'}\n\t\t\thelpLink={'https://github.com/Emurasoft/excel-csv-import-help/blob/master/en.md'}\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tmac={platform === Office.PlatformType.Mac}\n\t\t>\n\t\t\t{/* eslint-enable no-undef */}\n\t\t\t<SourceInput\n\t\t\t\tvalue={source}\n\t\t\t\tonChange={setSource}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tsource.inputType === InputType.file\n\t\t\t\t\t? <EncodingDropdown\n\t\t\t\t\t\tvalue={encoding}\n\t\t\t\t\t\tonChange={setEncoding}\n\t\t\t\t\t\tshowAutoDetect={true}\n\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<DelimiterInput\n\t\t\t\tvalue={delimiter}\n\t\t\t\tonChange={setDelimiter}\n\t\t\t\tshowLengthError={true}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<NewlineDropdown\n\t\t\t\tvalue={newline}\n\t\t\t\tonChange={setNewline}\n\t\t\t\tshowAutoDetect={true}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<TooltipHost\n\t\t\t\tstyles={{root: {display: 'inline-block'}} /* Resize to fit button */}\n\t\t\t\tcontent={buttonTooltipContent}\n\t\t\t\tdelay={TooltipDelay.zero}\n\t\t\t>\n\t\t\t\t<PrimaryButton\n\t\t\t\t\tdisabled={buttonTooltipContent !== ''}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\tasync () => dispatch(importCSV({source, newline, delimiter, encoding}))\n\t\t\t\t\t}\n\t\t\t\t\ttext={'Import CSV'}\n\t\t\t\t/>\n\t\t\t</TooltipHost>\n\t\t\t<br />\n\t\t\t<ProgressBar\n\t\t\t\tonClick={() => dispatch(abort())}\n\t\t\t\tprogress={progress}\n\t\t\t/>\n\t\t\t<ParserOutputBox output={output} />\n\t\t\t<BottomBar />\n\t\t</Page>\n\t);\n}"],"sourceRoot":""}