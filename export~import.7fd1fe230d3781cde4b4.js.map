{"version":3,"sources":["webpack:///./src/connect.tsx","webpack:///./src/components/StoredComponent.tsx","webpack:///./src/components/DelimiterInput.tsx","webpack:///./src/components/NewlineDropdown.tsx","webpack:///./src/components/ProgressBar.tsx","webpack:///./src/components/BottomBar.tsx","webpack:///./src/components/ParserOutputBox.tsx","webpack:///./src/components/MenuBar.tsx","webpack:///./src/components/TitleBar.tsx","webpack:///./src/components/EncodingDropdownOptions.ts","webpack:///./src/components/EncodingDropdown.tsx"],"names":["__webpack_require__","d","__webpack_exports__","connect","react__WEBPACK_IMPORTED_MODULE_0__","_Store__WEBPACK_IMPORTED_MODULE_1__","Component","props","Consumer","store","Object","assign","StoredComponent","_React$Component","namespace","defaultState","saveKeys","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","_namespace","_saveKeys","_initialSave","localStorage","_save","loadedState","loadState","state","_inherits","key","value","_arr2","entries","_i2","length","entry","substring","includes","JSON","parse","children","_get","prototype","_typeof","saveState","save","setItem","clear","_arr","_i","stringify","DropdownOptionKey","DelimiterInputComponent","dropdownOnChange","_","option","_dropdownToString","dropdownToString","_defineProperty","comma","space","tab","other","setState","otherSelected","onChange","getErrorMessage","showLengthError","t","_stringToDropdownKey",","," ","\t","delimiter","codePoint","c","charCodeAt","toString","toUpperCase","padStart","_this2","dropdownOptions","text","customInput","className","_style_css__WEBPACK_IMPORTED_MODULE_3__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_1__","description","onGetErrorMessage","deferredValidationTime","placeholder","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_2__","label","options","responsiveMode","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_4__","large","selectedKey","showCustomInput","DelimiterInput","react_i18next__WEBPACK_IMPORTED_MODULE_5__","NewlineDropdownComponent","autoDetectOption","_Parser__WEBPACK_IMPORTED_MODULE_3__","AutoDetect","newlineSequeneceMenu","CRLF","CR","LF","showAutoDetect","_options","concat","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_1__","NewlineDropdown","react_i18next__WEBPACK_IMPORTED_MODULE_4__","ProgressBarComponent","apply","arguments","_style_css__WEBPACK_IMPORTED_MODULE_4__","contents","progress","show","variant","stopLink","percentComplete","percent","aborting","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_3__","onClick","ProgressBar","BottomBar","_style_css__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","_Pages__WEBPACK_IMPORTED_MODULE_5__","react_i18next__WEBPACK_IMPORTED_MODULE_6__","style","marginTop","to","about","ParserOutputBox","_Store__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","parserOutput","type","hidden","info","output","rows","multiline","spellCheck","readOnly","error","MenuBar","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_Pages__WEBPACK_IMPORTED_MODULE_2__","react_i18next__WEBPACK_IMPORTED_MODULE_3__","items","name","iconProps","iconName","import","export","TitleBarComponent","_StoredComponent","firstVisit","visible","_StoredComponent__WEBPACK_IMPORTED_MODULE_0__","_icon","react__WEBPACK_IMPORTED_MODULE_5__","width","display","justifyContent","ref","_style_css__WEBPACK_IMPORTED_MODULE_6__","marginRight","title","ariaLabel","href","helpLink","target","rel","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_4__","current","onDismiss","TitleBar","react_i18next__WEBPACK_IMPORTED_MODULE_1__","EncodingDropdownOptions","EncodingDropdown_EncodingDropdownComponent","EncodingDropdownComponent","AutoDetectOption","_dropdownOptions","_toConsumableArray","react","Dropdown","EncodingDropdown","es"],"mappings":"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","file":"export~import.7fd1fe230d3781cde4b4.js","sourcesContent":["import * as React from 'react';\nimport {Context, Store} from './Store';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect<P extends {store: Store}>(Component: React.ComponentClass): any {\n    // eslint-disable-next-line react/display-name\n    return (props: Pick<P, Exclude<keyof P, 'store'>>) => {\n        return (\n            <Context.Consumer>\n                {(store: Store) => <Component {...props} store={store}/>}\n            </Context.Consumer>\n        );\n    };\n}","import * as React from 'react';\n\ninterface StringKey {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport class StoredComponent<P = {}, S extends StringKey = {}> extends React.Component<P, S> {\n    public constructor(\n        props: Readonly<P>,\n        namespace: string,\n        defaultState: Readonly<S>,\n        saveKeys: ReadonlyArray<keyof S>\n    ) {\n        super(props);\n        this._namespace = namespace;\n        this._saveKeys = saveKeys;\n        this._initialSave = localStorage && localStorage['StoredComponent-save'] === '\"true\"';\n        this._save = this._initialSave;\n\n        let loadedState = {};\n        if (this._save) {\n            loadedState = StoredComponent.loadState(namespace, saveKeys as string[]);\n        }\n        this.state = {...defaultState, ...loadedState};\n    }\n\n    public render(): React.ReactNode {\n        return this.props.children;\n    }\n\n    // State is saved only if state is an object.\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null))\n        | (Pick<S, K> | S | null),\n    ): void {\n        super.setState(state);\n        if (this._save && typeof state === 'object') {\n            this.saveState(state);\n        }\n    }\n\n    public initialSaveStatus(): boolean {\n        return this._initialSave;\n    }\n\n    public setSaveStatus(save: boolean): void {\n        this._save = save;\n\n        if (save) {\n            localStorage.setItem('StoredComponent-save', '\"true\"');\n            this.saveState(this.state);\n        } else {\n            localStorage.clear();\n            localStorage.setItem('app-firstVisit', 'false'); // TODO refactor (if necessary)\n        }\n    }\n\n    protected static loadState(namespace: string, saveKeys: string[]): {} {\n        const loadedState = {};\n        for (const entry of Object.entries(localStorage)) {\n            if (\n                entry[0].substring(0, namespace.length + 1) === namespace + '-'\n                && saveKeys.includes(entry[0].substring(namespace.length + 1))\n            ) {\n                loadedState[entry[0].substring(namespace.length + 1)] = JSON.parse(entry[1]);\n            }\n        }\n        return loadedState;\n    }\n\n    private readonly _namespace: string;\n    private readonly _saveKeys: ReadonlyArray<keyof S>;\n    private readonly _initialSave: boolean;\n    protected _save: boolean;\n\n    private saveState<K extends keyof S>(state: Pick<S, K> | S | null): void {\n        for (const entry of Object.entries(state)) {\n            if (this._saveKeys.includes(entry[0])) {\n                const key = this._namespace + '-' + entry[0];\n                localStorage.setItem(key, JSON.stringify(entry[1]));\n            }\n        }\n    }\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {BaseProps} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\n\nexport enum DropdownOptionKey {comma, space, tab, other}\n\ninterface Props extends BaseProps<string> {\n    showLengthError: boolean;\n}\n\ninterface State {\n    otherSelected: boolean;\n}\n\nexport class DelimiterInputComponent extends React.Component<Props, State> {\n    public constructor(props) {\n        super(props);\n        this.state = {otherSelected: false};\n\n        this._stringToDropdownKey = {\n            '\\u002c': DropdownOptionKey.comma,\n            '\\u0020': DropdownOptionKey.space,\n            '\\u0009': DropdownOptionKey.tab,\n        };\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n\n        const dropdownOptions: IDropdownOption[] = [\n            {\n                key: DropdownOptionKey.comma,\n                text: 'Comma (U+002C)',\n            },\n            {\n                key: DropdownOptionKey.space,\n                text: 'Space (U+0020)',\n            },\n            {\n                key: DropdownOptionKey.tab,\n                text: 'Tab (U+0009)',\n            },\n            {\n                key: DropdownOptionKey.other,\n                text: t('Other'),\n            },\n        ];\n\n        const customInput = (\n            <div className={style.smallDivider}>\n                <TextField\n                    className={style.monospace}\n                    value={this.props.value}\n                    onChange={(_, value) => this.props.onChange(value)}\n                    description={DelimiterInputComponent.description(this.props.value)}\n                    onGetErrorMessage={this.getErrorMessage}\n                    deferredValidationTime={1}\n                    placeholder={t('Enter custom delimiter')}\n                />\n            </div>\n        );\n\n        return (\n            <>\n                <Dropdown\n                    label={t('Delimiter')}\n                    options={dropdownOptions}\n                    responsiveMode={ResponsiveMode.large}\n                    selectedKey={this.selectedKey()}\n                    onChange={this.dropdownOnChange}\n                />\n                {this.showCustomInput() ? customInput : null}\n            </>\n        );\n    }\n\n    private static description(delimiter: string): string {\n        if (delimiter.length == 1) {\n            return DelimiterInputComponent.codePoint(delimiter);\n        } else {\n            return '\\u00A0';\n        }\n    }\n\n    private static codePoint(c: string): string {\n        return 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n    }\n\n    private readonly _stringToDropdownKey: {[key: string]: DropdownOptionKey};\n\n    private showCustomInput(): boolean {\n        if (this.state.otherSelected) {\n            return true;\n        }\n\n        return !['\\u002c', '\\u0020', '\\u0009'].includes(this.props.value);\n    }\n\n    private selectedKey(): DropdownOptionKey {\n        if (this.state.otherSelected) {\n            return DropdownOptionKey.other;\n        }\n\n        if (this.props.value in this._stringToDropdownKey) {\n            return this._stringToDropdownKey[this.props.value];\n        } else {\n            return DropdownOptionKey.other;\n        }\n    }\n\n    private dropdownOnChange = (_, option: IDropdownOption) => {\n        const dropdownToString = {\n            [DropdownOptionKey.comma]: '\\u002c',\n            [DropdownOptionKey.space]: '\\u0020',\n            [DropdownOptionKey.tab]: '\\u0009',\n            [DropdownOptionKey.other]: '',\n        };\n\n        this.setState({otherSelected: option.key === DropdownOptionKey.other});\n        this.props.onChange(dropdownToString[option.key]);\n    }\n\n    private getErrorMessage = (value: string) => {\n        if (this.props.showLengthError && value.length > 1) {\n            return this.props.t('Delimiter length must be 1');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport const DelimiterInput = withTranslation('importExport')(DelimiterInputComponent);","import * as React from 'react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {BaseProps} from './BaseProps';\nimport {NewlineSequence} from '../Parser';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<NewlineSequence> {\n    showAutoDetect: boolean;\n}\n\nexport class NewlineDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n        const autoDetectOption: IDropdownOption = {\n            key: NewlineSequence.AutoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        const newlineSequeneceMenu = [\n            {\n                key: NewlineSequence.CRLF,\n                text: 'CRLF',\n            },\n            {\n                key: NewlineSequence.CR,\n                text: 'CR',\n            },\n            {\n                key: NewlineSequence.LF,\n                text: 'LF',\n            },\n        ];\n\n        if (props.showAutoDetect) {\n            this._options = [autoDetectOption, ...newlineSequeneceMenu];\n        } else {\n            this._options = newlineSequeneceMenu;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        return (\n            <Dropdown\n                label={t('Newline sequence')}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                options={this._options}\n                onChange={(_, option) => this.props.onChange(option.key as NewlineSequence)}\n            />\n        );\n    }\n\n    private readonly _options: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const NewlineDropdown = withTranslation('importExport')(NewlineDropdownComponent);","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {Progress} from '../Store';\nimport {withTranslation} from 'react-i18next';\nimport {TranslateFunction} from './BaseProps';\n\ninterface Props extends TranslateFunction{\n    // Fired when the \"Stop\" link is clicked.\n    onClick: () => void;\n    progress: Progress;\n}\n\nexport class ProgressBarComponent extends React.Component<Props, {}> {\n    public render(): JSX.Element {\n        return (\n            <div className={style.smallDivider}>{this.contents()}</div>\n        );\n    }\n\n    private contents(): React.ReactNode {\n        if (this.props.progress.show) {\n            return (\n                <>\n                    <Text variant='small'>{this.stopLink()}</Text>\n                    <ProgressIndicator percentComplete={this.props.progress.percent}/>\n                </>\n            );\n        } else {\n            return <Text variant='small'>&nbsp;</Text>;\n        }\n    }\n\n    private stopLink(): React.ReactNode {\n        if (this.props.progress.aborting) {\n            return this.props.t('Stopping');\n        } else {\n            return <Link onClick={this.props.onClick}>{this.props.t('Stop')}</Link>;\n        }\n    }\n}\n\n// @ts-ignore\nexport const ProgressBar = withTranslation('importExport')(ProgressBarComponent)","import * as style from './style.css';\nimport {Link, Text} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\nexport function BottomBar(): JSX.Element {\n    const {t} = useTranslation('importExport');\n    return (\n        <div\n            className={style.centerContent + ' ' + style.fullWidth}\n            style={{marginTop: '30px'}}\n        >\n            <Text variant='medium'>\n                <RouterLink to={Pages.about} className={style.removeUnderline}>\n                    <Link>{t('About')}</Link>\n                </RouterLink>\n            </Text>\n        </div>\n    );\n}","import {OutputType, ParserOutput} from '../Store';\nimport {TextField} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\nexport function ParserOutputBox(props: {parserOutput: ParserOutput}): JSX.Element {\n    switch (props.parserOutput.type) {\n    case OutputType.hidden:\n        return null;\n    case OutputType.info:\n        return (\n            <TextField\n                className={style.monospace}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    case OutputType.error:\n        return (\n            <TextField\n                className={style.monospace  + ' ' + style.redText}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    }\n}","import {CommandBar} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\ninterface Props {\n    hidden: boolean;\n    onClick: (page: string) => void;\n}\n\nexport function MenuBar(props: Props): JSX.Element {\n    // Only shown on Excel for iPad because it has only one ribbon button for this app.\n    if (props.hidden) {\n        return null;\n    }\n\n    const {t} = useTranslation('importExport');\n\n    return (\n        <CommandBar\n            items={[\n                {\n                    key: 'import',\n                    name: t('Import CSV'),\n                    iconProps: {iconName: 'Add'},\n                    onClick: () => props.onClick(Pages.import),\n                },\n                {\n                    key: 'export',\n                    name: t('Export CSV'),\n                    iconProps: {iconName: 'Download'},\n                    onClick: () => props.onClick(Pages.export),\n                },\n            ]}\n        />\n    );\n}","import {StoredComponent} from './StoredComponent';\nimport {TranslateFunction} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\nimport {Callout, IconButton, Text} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\ninterface Props extends TranslateFunction{\n    text: string;\n    helpLink: string;\n}\n\ninterface State {\n    firstVisit: boolean;\n    visible: boolean;\n}\n\n// TitleBar contains the page title and a question mark icon in the top right corner for linking to\n// the help page. This app was designed to be self-explanatory, but Office Store policies demands\n// that a getting started prompt is provided. Their platform, their own stupid rules.\n// Policy 11.3: Your Office Add-in must provide a seamless first run experience, with a clear value\n// proposition.\n// Validation report: Please provide additional information on the first screen explaining how to\n// use the add-in, or directing the user to help / configuration information.\nexport class TitleBarComponent extends StoredComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props, 'app', {firstVisit: true, visible: false}, ['firstVisit']);\n        this._save = true;\n        this.state = {...this.state, ...StoredComponent.loadState('app', ['firstVisit'])};\n        this._icon = React.createRef();\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        return (\n            <>\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <Text variant='xLarge'><strong>{this.props.text}</strong></Text>\n                    <div ref={this._icon} className={style.smallIcon}>\n                        <IconButton\n                            style={{marginRight: '4px'}}\n                            iconProps={{iconName: 'Help'}}\n                            title={t('Help page')}\n                            ariaLabel={t('Help page')}\n                            href={this.props.helpLink}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        />\n                    </div>\n                </div>\n                <Callout\n                    target={this._icon.current}\n                    hidden={!this.state.visible}\n                    onDismiss={() => this.setState({visible: false})}\n                >\n                    {t('CSV Import+Export makes it easy to add CSV data to Excel. Click on this' +\n                        ' question mark to open the help page.')}\n                </Callout>\n            </>\n        );\n    }\n\n    public componentDidMount(): void {\n        this.setState(state => ({visible: state.firstVisit}));\n        this.setState({firstVisit: false});\n    }\n\n    private readonly _icon: React.RefObject<HTMLDivElement>;\n}\n\n// @ts-ignore\nexport const TitleBar = withTranslation('importExport')(TitleBarComponent);","import {IDropdownOption} from 'office-ui-fabric-react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n    // Use generateEncodingList.js to generate list\n    {\n        \"key\": \"Big5\",\n        \"text\": \"Big5\",\n    },\n    {\n        \"key\": \"EUC-JP\",\n        \"text\": \"EUC-JP\",\n    },\n    {\n        \"key\": \"EUC-KR\",\n        \"text\": \"EUC-KR\",\n    },\n    {\n        \"key\": \"gb18030\",\n        \"text\": \"gb18030\",\n    },\n    {\n        \"key\": \"GBK\",\n        \"text\": \"GBK\",\n    },\n    {\n        \"key\": \"IBM866\",\n        \"text\": \"IBM866 (Cyrillic)\",\n    },\n    {\n        \"key\": \"ISO-2022-JP\",\n        \"text\": \"ISO-2022-JP (JIS)\",\n    },\n    {\n        \"key\": \"ISO-8859-10\",\n        \"text\": \"ISO-8859-10 (Latin-6)\",\n    },\n    {\n        \"key\": \"ISO-8859-13\",\n        \"text\": \"ISO-8859-13 (Latin-7)\",\n    },\n    {\n        \"key\": \"ISO-8859-14\",\n        \"text\": \"ISO-8859-14 (Latin-8)\",\n    },\n    {\n        \"key\": \"ISO-8859-15\",\n        \"text\": \"ISO-8859-15 (Latin-9)\",\n    },\n    {\n        \"key\": \"ISO-8859-16\",\n        \"text\": \"ISO-8859-16 (Latin-10)\",\n    },\n    {\n        \"key\": \"ISO-8859-2\",\n        \"text\": \"ISO-8859-2 (Central European)\",\n    },\n    {\n        \"key\": \"ISO-8859-3\",\n        \"text\": \"ISO-8859-3 (Latin 3)\",\n    },\n    {\n        \"key\": \"ISO-8859-4\",\n        \"text\": \"ISO-8859-4 (Latin-4)\",\n    },\n    {\n        \"key\": \"ISO-8859-5\",\n        \"text\": \"ISO-8859-5 (Cryillic)\",\n    },\n    {\n        \"key\": \"ISO-8859-6\",\n        \"text\": \"ISO-8859-6 (Arabic)\",\n    },\n    {\n        \"key\": \"ISO-8859-7\",\n        \"text\": \"ISO-8859-7 (Greek)\",\n    },\n    {\n        \"key\": \"ISO-8859-8\",\n        \"text\": \"ISO-8859-8 (Hebrew)\",\n    },\n    {\n        \"key\": \"ISO-8859-8-I\",\n        \"text\": \"ISO-8859-8-I (Hebrew)\",\n    },\n    {\n        \"key\": \"KOI8-R\",\n        \"text\": \"KOI8-R\",\n    },\n    {\n        \"key\": \"KOI8-U\",\n        \"text\": \"KOI8-U\",\n    },\n    {\n        \"key\": \"x-mac-cyrillic\",\n        \"text\": \"Mac OS Cyrillic\",\n    },\n    {\n        \"key\": \"macintosh\",\n        \"text\": \"Mac OS Roman\",\n    },\n    {\n        \"key\": \"Shift_JIS\",\n        \"text\": \"Shift_JIS\",\n    },\n    {\n        \"key\": \"UTF-16BE\",\n        \"text\": \"UTF-16BE\",\n    },\n    {\n        \"key\": \"UTF-16LE\",\n        \"text\": \"UTF-16LE\",\n    },\n    {\n        \"key\": \"UTF-8\",\n        \"text\": \"UTF-8\",\n    },\n    {\n        \"key\": \"windows-1250\",\n        \"text\": \"windows-1250 (Central European)\",\n    },\n    {\n        \"key\": \"windows-1251\",\n        \"text\": \"windows-1251 (Cyrillic)\",\n    },\n    {\n        \"key\": \"windows-1252\",\n        \"text\": \"windows-1252 (Western European)\",\n    },\n    {\n        \"key\": \"windows-1253\",\n        \"text\": \"windows-1253 (Greek)\",\n    },\n    {\n        \"key\": \"windows-1254\",\n        \"text\": \"windows-1254 (Turkish)\",\n    },\n    {\n        \"key\": \"windows-1255\",\n        \"text\": \"windows-1255 (Hebrew)\",\n    },\n    {\n        \"key\": \"windows-1256\",\n        \"text\": \"windows-1256 (Arabic)\",\n    },\n    {\n        \"key\": \"windows-1257\",\n        \"text\": \"windows-1257 (Baltic)\",\n    },\n    {\n        \"key\": \"windows-1258\",\n        \"text\": \"windows-1258 (Vietnamese)\",\n    },\n    {\n        \"key\": \"windows-874\",\n        \"text\": \"windows-874 (Thai)\",\n    },\n];","import {BaseProps} from './BaseProps';\nimport * as React from 'react';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    hidden: boolean;\n}\n\nexport class EncodingDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n\n        const AutoDetectOption: IDropdownOption = {\n            'key': '',\n            'text': props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._dropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n        } else {\n            this._dropdownOptions = EncodingDropdownOptions;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        if (this.props.hidden) {\n            return null;\n        } else {\n            return (\n                <>\n                    <Dropdown\n                        label={t('Encoding')}\n                        selectedKey={this.props.value}\n                        options={this._dropdownOptions}\n                        onChange={(_, option) => this.props.onChange(option.key as string)}\n                    />\n                    <br/>\n                </>\n            );\n        }\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const EncodingDropdown = withTranslation('importExport')(EncodingDropdownComponent);"],"sourceRoot":""}