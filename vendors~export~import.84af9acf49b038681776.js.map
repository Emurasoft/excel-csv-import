{"version":3,"sources":["webpack:///./node_modules/@uifabric/utilities/lib/dom/getRect.js","webpack:///./node_modules/@uifabric/utilities/lib/AutoScroll.js","webpack:///./node_modules/@uifabric/utilities/lib/FabricPerformance.js","webpack:///./node_modules/@uifabric/utilities/lib/asAsync.js","webpack:///./node_modules/@uifabric/utilities/lib/assertNever.js","webpack:///./node_modules/@uifabric/utilities/lib/autobind.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/mergeSettings.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/mergeCustomizations.js","webpack:///./node_modules/@uifabric/utilities/lib/customizations/Customizer.js","webpack:///./node_modules/@uifabric/utilities/lib/dom/getChildren.js","webpack:///./node_modules/@uifabric/utilities/lib/initials.js","webpack:///./node_modules/@uifabric/utilities/lib/math.js","webpack:///./node_modules/@uifabric/utilities/lib/resources.js","webpack:///./node_modules/@uifabric/utilities/lib/string.js","webpack:///./node_modules/@uifabric/utilities/lib/version.js","webpack:///./node_modules/@uifabric/utilities/lib/index.js","webpack:///./node_modules/@uifabric/set-version/lib/index.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode.js","webpack:///./node_modules/react-router-dom/esm/react-router-dom.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ButtonThemes.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.types.js","webpack:///./node_modules/@uifabric/utilities/lib/DelayedRender.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/Utilities.js","webpack:///./node_modules/@uifabric/utilities/lib/Context.js","webpack:///./node_modules/@uifabric/utilities/lib/overflow.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/DefaultButton/DefaultButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/DefaultButton/DefaultButton.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/utilities/decorators/BaseDecorator.js","webpack:///./node_modules/office-ui-fabric-react/lib-commonjs/version.js","webpack:///./node_modules/@uifabric/styling/lib/styles/GeneralStyles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/PrimaryButton/PrimaryButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/utilities/selectableOption/SelectableOption.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Checkbox/Checkbox.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ActionButton/ActionButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandButton/CommandButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/ActionButton/ActionButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/utilities/DropdownSizePosCache.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Overlay/Overlay.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/FocusTrapZone/FocusTrapZone.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Panel/Panel.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Dropdown/Dropdown.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/OverflowSet/OverflowSet.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ResizeGroup/ResizeGroup.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ResizeGroup/ResizeGroup.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandBarButton/CommandBarButton.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Button/CommandBarButton/CommandBarButton.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/CommandBar/CommandBar.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.types.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/Tooltip.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Tooltip/TooltipHost.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/TextField/TextField.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Label/Label.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.styles.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/ProgressIndicator/ProgressIndicator.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.base.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.js","webpack:///./node_modules/office-ui-fabric-react/lib/components/Toggle/Toggle.styles.js"],"names":["getRect","element","rect","window","left","top","width","innerWidth","height","innerHeight","right","bottom","getBoundingClientRect","AutoScroll_AutoScroll","AutoScroll","this","_events","EventGroup","_scrollableParent","Object","lib_scroll","_incrementScroll","bind","_scrollRect","document","body","on","_onMouseMove","_onTouchMove","prototype","dispose","_stopScroll","ev","_computeScrollVelocity","clientY","touches","length","scrollRectTop","scrollClientBottom","_scrollVelocity","Math","max","min","_startScroll","_timeoutId","scrollTop","round","setTimeout","clearTimeout","now","performance","Date","FabricPerformance","measure","name","func","setPeriodicReset","start","end","measurement","summary","totalDuration","count","all","duration","push","timeStamp","reset","NaN","_syncModuleCache","WeakMap","undefined","asAsync","options","Async","_super","_this","apply","arguments","state","Component","get","load","tslib_es6","render","_a","props","forwardedRef","Placeholder","asyncPlaceholder","rest","react","ref","componentDidMount","then","LoadedComponent","set","setState","onLoad","catch","onError","assertNever","x","Error","autobind","target","key","descriptor","fn","value","defining","configurable","hasOwnProperty","fnBound","defineProperty","writable","enumerable","newValue","mergeSettings","oldSettings","newSettings","_isSettingsFunction","settings","_settingsMergeWith","mergeScopedSettings","scopedSettingsFromProps","oldScopedSettings","newScopedSettings","scopeName","_scopedSettingsMergeWith","mergeCustomizations","parentContext","customizations","scopedSettings","inCustomizerContext","Customizer_Customizer","Customizer","_changeCount","_onCustomizationChange","forceUpdate","Customizations","observe","componentWillUnmount","unobserve","contextTransform","CustomizerContext","Consumer","newContext","Provider","children","BaseComponent","getChildren","parent","allowVirtualChildren","i","item","isVirtualElement","_virtual","UNWANTED_CHARS_REGEX","PHONENUMBER_REGEX","MULTIPLE_WHITESPACES_REGEX","UNSUPPORTED_TEXT_REGEX","getInitials","displayName","isRtl","allowPhoneInitials","replace","trim","cleanupDisplayName","test","initials","splits","split","charAt","toUpperCase","getInitialsLatin","getDistanceBetweenPoints","point1","point2","sqrt","pow","y","fitContentToBounds","scale","contentSize","boundsSize","mode","_b","maxScale","contentAspectRatio","boundsAspectRatio","finalScale","calculatePrecision","groups","exec","String","precisionRound","precision","base","exp","_baseUrl","getResourceUrl","url","setBaseUrl","baseUrl","FORMAT_ARGS_REGEX","FORMAT_REGEX","format","s","values","_i","args","match","replacement","setVersion","__webpack_require__","d","__webpack_exports__","lib_Async","Context","DelayedRender","GlobalSettings","KeyCodes","Rectangle","appendFunction","aria","array","classNamesFunction","createRef","css","customizable","getDocument","elementContains","elementContainsAttribute","findElementRecursive","getParent","getVirtualParent","getWindow","portalContainsElement","raiseClick","setPortalAttribute","setVirtualParent","extendComponent","lib_focus","hoist","hoistStatics","initializeComponentRef","initializeFocusRects","keyboard","language","memoize","merge","mobileDetector","object","osDetector","overflow","properties","rtl","styled","warn","warnConditionallyRequiredProps","warnDeprecations","warnMutuallyExclusive","setSSR","r","_setVersion__WEBPACK_IMPORTED_MODULE_0__","exports","ResponsiveMode","tslib_1","React","BaseDecorator_1","Utilities_1","_defaultMode","RESPONSIVE_MAX_CONSTRAINT","setResponsiveMode","responsiveMode","withResponsiveMode","ComposedComponent","resultClass","WithResponsiveMode","call","_updateComposedComponentRef","_getResponsiveMode","__extends","createElement","__assign","small","win","e","large","BaseDecorator","Link","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","n","react_router__WEBPACK_IMPORTED_MODULE_2__","history__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_6__","tiny_invariant__WEBPACK_IMPORTED_MODULE_7__","a","_React$Component","_proto","handleClick","event","history","onClick","defaultPrevented","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","preventDefault","to","_this$props","innerRef","context","location","href","createHref","standardStyles","primaryStyles","_Styling__WEBPACK_IMPORTED_MODULE_0__","theme","_c","semanticColors","buttonBackground","buttonBackgroundChecked","buttonBackgroundHovered","buttonText","buttonTextHovered","buttonTextChecked","buttonTextCheckedHovered","root","backgroundColor","color","rootHovered","selectors","borderColor","rootPressed","rootExpanded","rootChecked","rootCheckedHovered","palette","neutralLight","splitButtonContainer","border","splitButtonMenuButton","white","neutralLighter",":hover","splitButtonMenuButtonDisabled","splitButtonDivider","neutralTertiaryAlt","splitButtonMenuButtonChecked","themePrimary","splitButtonMenuButtonExpanded","splitButtonMenuIcon","neutralPrimary","splitButtonMenuIconDisabled","neutralTertiary","MsHighContrastAdjust","themeDarkAlt","themeDark","rootDisabled","_d","_e","themeLighter","_f","TooltipDelay","tslib__WEBPACK_IMPORTED_MODULE_0__","isRendered","delay","only","defaultProps","__exportStar","provideContext","contextTypes","mapPropsToContext","getChildContext","childContextTypes","hasHorizontalOverflow","clientWidth","scrollWidth","hasVerticalOverflow","clientHeight","scrollHeight","hasOverflow","getStyles","customStyles","primary","baseButtonStyles","BaseButton_styles","splitButtonStyles","SplitButton_styles","defaultButtonStyles","minWidth","label","fontWeight","fonts","semibold","concatStyleSets","ButtonThemes","DefaultButton_DefaultButton","DefaultButton","_skipComponentRefResolution","styles","BaseButton","variantClassName","onRenderDescription","composedComponentInstance","_composedComponentInstance","_hoisted","hoistMethods","unhoistMethods","normalize","noWrap","boxShadow","margin","padding","boxSizing","textOverflow","whiteSpace","PrimaryButton","_Utilities__WEBPACK_IMPORTED_MODULE_2__","_Utilities__WEBPACK_IMPORTED_MODULE_3__","_DefaultButton_DefaultButton__WEBPACK_IMPORTED_MODULE_4__","SelectableOptionMenuItemType","getClassNames","Checkbox_base_CheckboxBase","CheckboxBase","_checkBox","_onFocus","inputProps","onFocus","_onBlur","onBlur","_onChange","disabled","onChange","isChecked","checked","_onRenderLabel","className","_classNames","text","_warnMutuallyExclusive","_id","id","defaultChecked","componentWillReceiveProps","newProps","boxSide","ariaLabel","ariaLabelledBy","ariaDescribedBy","onRenderLabel","checkmarkIconProps","ariaPositionInSet","ariaSetSize","keytipProps","title","isReversed","reversed","isUsingCustomLabelRender","KeytipData","keytipAttributes","type","data-ktp-execute-target","input","aria-disabled","aria-label","aria-labelledby","aria-describedby","aria-posinset","aria-setsize","htmlFor","checkbox","data-ktp-target","Icon","iconName","checkmark","focus","current","Checkbox","_g","_h","_j","checkmarkFontColor","inputForegroundChecked","checkmarkFontColorCheckedDisabled","disabledBackground","checkmarkFontColorHovered","inputBorder","checkboxBorderColor","smallInputBorder","checkboxBorderColorChecked","inputBackgroundChecked","checkboxBorderColorDisabled","disabledBodySubtext","checkboxBorderHoveredColor","inputBorderHovered","checkboxBackgroundChecked","checkboxBackgroundCheckedHovered","inputBackgroundCheckedHovered","checkboxBorderColorCheckedHovered","checkboxHoveredTextColor","bodyText","checkboxBackgroundDisabledChecked","checkboxTextColor","checkboxTextColorDisabled","disabledText","position","display",":hover .ms-Checkbox-checkbox","CommonStyles",":focus .ms-Checkbox-checkbox",":hover .ms-Checkbox-checkmark","opacity","background",":focus:hover .ms-Checkbox-checkbox",":focus:hover .ms-Checkbox-checkmark",":hover .ms-Checkbox-text",":focus .ms-Checkbox-text","outline","neutralSecondary","outlineOffset","medium","alignItems","cursor","userSelect","textAlign","flexDirection","justifyContent","&::before","content","pointerEvents","flexShrink","borderWidth","borderStyle","transitionProperty","transitionDuration","transitionTimingFunction","marginLeft","marginRight","fontSize","lineHeight","scope","ActionButton_styles_getStyles","actionButtonStyles","iconHovered","black","iconPressed","themeDarker","iconChecked","flexContainer","icon","iconDisabled","menuIcon","textContainer","flexGrow","CommandButton","ActionButton","PanelType","DropdownSizePosCache_DropdownSizePosCache","DropdownSizePosCache","_size","updateOptions","displayOnlyOptionsCache","size","itemType","Divider","Header","_displayOnlyOptionsCache","positionInSet","index","offset","Overlay_base_getClassNames","Overlay_base_OverlayBase","OverlayBase","isDark","isDarkThemed","divProps","classNames","GlobalClassNames","rootDark","Overlay","isNone","getGlobalClassNames","whiteTranslucent40","visibility","blackTranslucent40","FocusTrapZone_FocusTrapZone","FocusTrapZone","_root","_onFocusCapture","onFocusCapture","currentTarget","_previouslyFocusedElementInTrapZone","_onKeyboardHandler","onKeyDown","isDefaultPrevented","which","tab","_firstTabbableChild","firstChild","_lastTabbableChild","lastChild","stopPropagation","_bringFocusIntoZone","_updateEventHandlers","nextProps","elementToFocusOnDismiss","_previouslyFocusedElementOutsideTrapZone","componentDidUpdate","prevProps","prevForceFocusInsideTrap","forceFocusInsideTrap","newForceFocusInsideTrap","_returnFocusToInitiator","focusPreviouslyFocusedInnerElement","firstFocusableSelector","_firstFocusableChild","focusSelector","querySelector","disableFirstFocus","_focusStack","activeElement","ignoreExternalFocusing","filter","isClickableOutsideFocusTrap","_hasFocusHandler","_forceFocusInTrap","off","_hasClickHandler","_forceClickInTrap","focusedElement","relatedTarget","clickedElement","Panel_styles_a","Panel_styles_b","Panel_styles_c","Panel_styles_d","Panel_styles_e","Panel_styles_f","Dropdown_styles_a","Dropdown_styles_b","Panel_base_getClassNames","Panel_base_PanelBase","PanelBase","_panel","dismiss","isOpen","onDismiss","isAnimating","_async","_onTransitionComplete","_allowScrollOnPanel","elt","_scrollableContent","_onRenderNavigation","onRenderNavigationContent","_onRenderNavigationContent","navigation","closeButtonAriaLabel","hasCloseButton","styles_theme","IconButton","closeButton","_onPanelClick","data-is-visible","iconProps","_onRenderHeader","defaultRender","headerTextId","headerText","header","role","aria-level","_onRenderBody","_onRenderFooter","onRenderFooterContent","footer","footerInner","_updateFooterPosition","onDismissed","_warnDeprecations","isFooterSticky","_shouldListenForOuterClick","_dismissOnOuterClick","open","previousProps","shouldListenOnOuterClick","previousShouldListenOnOuterClick","focusTrapZoneProps","headerClassName","isBlocking","isFooterAtBottom","isLightDismiss","isHiddenOnDismiss","layerProps","customWidth","onLightDismissClick","onRenderNavigation","onRenderHeader","onRenderBody","onRenderFooter","isLeft","smallFixedNear","customNear","isOnRightSide","customWidthStyles","custom","nativeProps","focusTrapZoneClassName","overlay","Layer","Popup","aria-modal","hiddenPanel","aria-hidden","main","style","commands","contentInner","scrollableContent","data-is-scrollable","innerHeight_1","panel","onOuterClick","smallFixedFar","Panel_styles_GlobalClassNames","smallFluid","largeFixed","extraLarge","panelWidth","panelMargin","smallPanelSelectors","mediumPanelSelectors","largePanelSelectors","largeFixedPanelSelectors","extraLargePanelSelectors","getPanelBreakpoints","sharedPaddingStyles","paddingLeft","paddingRight","Panel","isCustomPanel","windowHeight","AnimationClassNames","fadeIn100","fadeOut100","overflowX","overflowY","WebkitOverflowScrolling","maxHeight","maxWidth","slideRightIn40","slideLeftIn40","slideLeftOut40","slideRightOut40","marginTop","DefaultFontStyles","xLarge","marginBottom","paddingBottom","borderTop","transition","AnimationStyles","durationValue3","easeFunction2","borderTopColor","paddingTop","Dropdown_base_getClassNames","Dropdown_base_DropdownBase","DropdownBase","selectedIndices","_host","_focusZone","_dropDown","_scrollIdleDelay","_sizePosCache","_onRenderTitle","multiSelectDelimiter","displayTxt","map","join","_onRenderPlaceholder","_placeholder","_onRenderContainer","calloutProps","panelProps","dropdownWidth","isSmall","panelStyles","subComponentStyles","_onDismiss","_renderFocusableList","Callout","isBeakVisible","gapSpace","doNotLayer","directionalHintFixed","directionalHint","DirectionalHint","bottomLeftEdge","callout","onScroll","_onScroll","onPositioned","_onPositioned","calloutWidth","_onRenderCaretDown","caretDown","_onRenderList","onRenderItem","_onRenderItem","_renderSeparator","_renderHeader","_renderOption","onRenderOption","_onRenderOption","isItemSelected","indexOf","itemClassName","dropdownItemSelectedAndDisabled","dropdownItemSelected","dropdownItemDisabled","dropdownItem","multiSelect","data-index","data-is-focusable","_onItemClick","onMouseEnter","_onItemMouseEnter","onMouseLeave","_onMouseItemLeave","onMouseMove","_onItemMouseMove","aria-selected","dropdownOptionText","positions","requestAnimationFrame","focusElement","calloutRenderEdge","targetEdge","setSelectedIndex","_isScrollIdle","_scrollIdleTimeoutId","_shouldIgnoreMouseEvent","setActive","_onDropdownBlur","_isDisabled","hasFocus","_onDropdownKeyDown","_lastKeyDownWasAltOrMeta","_isAltOrMeta","newIndex","selectedIndex","containsExpandCollapseModifier","enter","escape","up","_moveIndex","down","home","space","_onDropdownKeyUp","shouldHandleKey","_shouldHandleKeyUp","onKeyUp","_onZoneKeyDown","elementToFocus","pageUp","pageDown","_onZoneKeyUp","_onDropdownClick","isDisabled","onChanged","placeHolder","defaultSelectedKey","defaultSelectedKeys","selectedKeys","selectedKey","_getSelectedIndexes","selectedKeyProp","didOptionsChange","prevState","_gotMouseMove","required","errorMessage","propStyles","onRenderTitle","onRenderContainer","onRenderPlaceHolder","onRenderCaretDown","selectedOptions","_getAllSelectedOptions","optionId","ariaAttrs","ariaActiveDescendant","childRole","ariaPosInSet","ariaSelected","optionSetSize","hasError","Boolean","isRenderingPlaceholder","panelClassName","calloutClassName","labelStyles","Label","tabIndex","aria-expanded","aria-activedescendant","aria-required","aria-owns","dropdown","aria-atomic","aria-live","caretDownWrapper","shouldOpenOnFocus","notifyOnReselect","newIndexes","_copyArray","splice","selected","placeholder","newArray","array_1","stepValue","stepCounter","onRenderList","dropdownItemsWrapper","FocusZone","direction","FocusZone_types","vertical","dropdownItems","dropdownDivider","dropdownItemHeader","targetElement","_getAllSelectedIndices","_getSelectedIndex","Array","isArray","selectedKey_1","selectedIndices_1","option","isSelected","alt","keyPressIsAltOrMetaAlone","Dropdown_styles_GlobalClassNames","titleIsPlaceHolder","titleHasError","highContrastAdjustMixin","@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: black-on-white)","highContrastItemAndTitleStateMixin","highContrastBorderState","Dropdown","globalClassnames","rootHoverFocusActiveSelectorNeutralDarkMixin","neutralDark","rootHoverFocusActiveSelectorBodySubtextMixin","bodySubtext","borderColorError","errorText","dropdownItemStyle","minHeight","wordWrap","overflowWrap","concat","neutralQuaternaryAlt","GeneralStyles","inputBackground","DROPDOWN_HEIGHT","inputPlaceholderText","&:focus","listItemBackgroundHovered","listHeaderBackgroundHovered","bodyDivider","menuHeader","OverflowSet_base_OverflowSetBase","OverflowSetBase","_persistedKeytips","_keytipManager","KeytipManager","getInstance","_divContainer","_onRenderItems","items","wrapperDivProps","_onRenderOverflowButtonWrapper","overflowButton","overflowKeytipSequences","keytipSequences","newOverflowItems","forEach","overflowItem","keytip","persistedKeytip","keySequences","hasDynamicChildren","hasMenu","_getSubMenuForItem","onExecute","menuExecute","newOverflowItem","overflowSetSequence","onRenderOverflowButton","doNotContainWithinFocusZone","Tag","uniqueComponentProps","overflowItems","focusZoneProps","componentRef","horizontal","forceIntoFirstElement","focusSucceeded","childElement","_registerPersistedKeytips","_unregisterPersistedKeytips","componentWillUpdate","keys","uniqueID","register","unregister","itemSubMenuProvider","subMenuProps","overflowItemStyle","OverflowSet","flexWrap","getNextResizeGroupStateProvider","measurementCache","measurementsCache","getCachedMeasurement","data","cacheKey","addMeasurementToCache","_containerWidth","_measurementCache","_getMeasuredWidth","measuredData","getElementToMeasureWidth","cachedWidth","measuredWidth","_shrinkContentsUntilTheyFit","onReduceData","dataToMeasure","nextMeasuredData","renderedData","resizeDirection","getNextState","currentState","newContainerWidth","newWidth","fullWidthData","onGrowData","nextState","measureContainer","_updateContainerWidth","_growDataUntilItDoesNotFit","shouldRenderDataForMeasurement","getInitialResizeGroupState","MeasuredContext","isMeasured","prop_types","hiddenDivStyles","hiddenParentStyles","ResizeGroup","ResizeGroupBase","_nextResizeGroupStateProvider","_initialHiddenDiv","_updateHiddenDiv","_hasRenderedContent","onRenderData","dataNeedsMeasuring","isInitialMeasure","data-automation-id","_afterComponentRendered","debounce","_onResize","leading","dataDidRender","remeasure","containerWidth","refToMeasure","CommandBarButton_styles_getStyles","focusInset","focusColor","baseSplitButtonStyles","commandButtonStyles","getFocusStyle","neutralQuaternary","CommandBarButton_CommandBarButton","CommandBarButton","CommandBar_base_getClassNames","CommandBar_base_CommandBarBase","CommandBarBase","_overflowSet","_resizeGroup","_onRenderData","_resolveRef","primarySet","primaryItems","_onRenderOverflowButton","farItems","secondarySet","CommandButtonType","buttonAs","commandBarButtonAs","itemText","onRender","commandButtonProps","allowDisabledFocus","buttonStyles","iconOnly","menuProps","_onButtonClick","TooltipHost","tooltipHostProps","overflowButtonAs","OverflowButtonType","overflowButtonProps","combinedOverflowItems","overflowProps","menuIconProps","_onReduceData","shiftOnReduce","onDataReduced","movedItem","renderedInOverflow","slice","newData","_computeCacheKey","_onGrowData","onDataGrown","minimumOverflowItems","commandBarData","overflowSet","inactive","returnKey","acc","reduce","CommandBar","TooltipOverflowMode","Tooltip_base_TooltipBase","TooltipBase","_onRenderContent","subText","directionalHintForRTL","onRenderContent","topCenter","Tooltip_types","beakWidth","setInitialFocus","Tooltip","fadeIn200","animationDelay","zero","long","TooltipHost_base_getClassNames","TooltipHost_base_TooltipHostBase","TooltipHostBase","_tooltipHost","_closingTimer","show","_toggleTooltip","_hideTooltip","_onTooltipMouseEnter","overflowMode","_currentVisibleTooltip","overflowElement","_getTargetElement","_clearDismissTimer","_onTooltipMouseLeave","closeDelay","isTooltipVisible","hostClassName","setAriaDescribedBy","tooltipProps","tooltipId","isContentPresent","showTooltip","onBlurCapture","Parent","parentElement","Self","onTooltipToggle","DEFAULT_STATE_VALUE","TextField_base_TextFieldBase","TextFieldBase","_textElement","isFocused","validateOnFocusIn","_validate","validateOnFocusOut","_onRenderDescription","description","_onInputChange","persist","_latestValue","_adjustInputHeight","_delayedValidate","onBeforeChange","iconClass","addonString","onRenderAddon","_descriptionId","defaultValue","deferredValidationTime","_lastValidation","_isMounted","validateOnLoad","_setValue","multiline","_shouldResetFocusAfterRender","_selectionBeforeInputTypeChange","selectionStart","selectionEnd","setSelectionRange","borderless","inputClassName","underlined","prefix","resizable","suffix","autoAdjustHeight","_onRenderAddon","onRenderPrefix","_onRenderPrefix","onRenderSuffix","_onRenderSuffix","_errorMessage","focused","hasLabel","hasErrorMessage","hasIcon","wrapper","fieldGroup","_renderTextArea","_renderInput","_isDescriptionAvailable","blur","select","setSelectionStart","setSelectionEnd","textAreaProps","onInput","field","aria-invalid","readOnly","_latestValidateValue","result","onGetErrorMessage","_notifyAfterValidate","currentValidation_1","onNotifyValidationResult","textField","globalClassNames","unresizable","active","getLabelStyles","TextField","fieldPrefixSuffix","borderBottomWidth","borderBottomStyle","borderBottomColor","inputFocusBorderAlt","flex","&:focus, &:hover",":after","borderRadius","inputText","&:active, &:focus, &:hover","::-ms-clear","::placeholder",":-ms-input-placeholder","resize","xSmall","slideDownIn20","Label_base_LabelBase","LabelBase","as","RootType","disabledBodyText","::after","ZERO_THRESHOLD","ProgressIndicator_base_ProgressIndicatorBase","ProgressIndicatorBase","_onRenderProgress","ariaValueText","barHeight","percentComplete","indeterminate","progressBarStyles","ariaValueMin","ariaValueMax","ariaValueNow","floor","itemProgress","progressTrack","progressBar","aria-valuemin","aria-valuemax","aria-valuenow","aria-valuetext","progressHidden","onRenderProgress","itemName","itemDescription","IndeterminateProgress","keyframes","0%","100%","IndeterminateProgressRTL","ProgressIndicator","isRTL","progressTrackColor","regular","marginBetweenText","textHeight","borderBottom","animation","Toggle_base_ToggleBase","ToggleBase","_toggleButton","_onClick","checkedProp","onAriaLabel","offAriaLabel","offText","onText","inlineLabel","stateText","badAriaLabel","toggleNativeProps","onOffMissing","hidden","container","pill","aria-checked","_noop","thumb","Toggle","pillUncheckedBackground","bodyBackground","pillCheckedBackground","pillCheckedHoveredBackground","pillCheckedDisabledBackground","thumbBackground","thumbCheckedBackground","thumbDisabledBackground","thumbCheckedDisabledBackground","pillBorderColor","pillBorderHoveredColor","pillBorderDisabledColor","textDisabledColor","order",":hover .ms-Toggle-thumb","&:hover","&&"],"mappings":"gIAKO,SAAAA,EAAAC,GACP,IAAAC,EAgBA,OAfAD,IACAA,IAAAE,OACAD,EAAA,CACAE,KAAA,EACAC,IAAA,EACAC,MAAAH,OAAAI,WACAC,OAAAL,OAAAM,YACAC,MAAAP,OAAAI,WACAI,OAAAR,OAAAM,aAGAR,EAAAW,wBACAV,EAAAD,EAAAW,0BAGAV,ECnBA,IAWIW,EAAU,WACd,SAAAC,EAAAb,GACAc,KAAAC,QAAA,IAA2BC,EAAA,EAAUF,MACrCA,KAAAG,kBAAiCC,OAAAC,EAAA,EAAAD,CAAoBlB,GACrDc,KAAAM,iBAAAN,KAAAM,iBAAAC,KAAAP,MACAA,KAAAQ,YAA2BvB,EAAOe,KAAAG,mBAElCH,KAAAG,oBAAAf,SACAY,KAAAG,kBAAAM,SAAAC,MAEAV,KAAAG,oBACAH,KAAAC,QAAAU,GAAAvB,OAAA,YAAAY,KAAAY,cAAA,GACAZ,KAAAC,QAAAU,GAAAvB,OAAA,YAAAY,KAAAa,cAAA,IAsDA,OAnDAd,EAAAe,UAAAC,QAAA,WACAf,KAAAC,QAAAc,UACAf,KAAAgB,eAEAjB,EAAAe,UAAAF,aAAA,SAAAK,GACAjB,KAAAkB,uBAAAD,EAAAE,UAEApB,EAAAe,UAAAD,aAAA,SAAAI,GACAA,EAAAG,QAAAC,OAAA,GACArB,KAAAkB,uBAAAD,EAAAG,QAAA,GAAAD,UAGApB,EAAAe,UAAAI,uBAAA,SAAAC,GACA,GAAAnB,KAAAQ,YAAA,CAGA,IAAAc,EAAAtB,KAAAQ,YAAAlB,IACAiC,EAAAD,EAAAtB,KAAAQ,YAAAf,OA1CA,IA4CAO,KAAAwB,gBADAL,EAAAG,EA3CA,IA4CAG,KAAAC,KA3CA,IADA,KA4CAP,EAAAG,IA5CA,KACA,IA6CAH,EAAAI,EACAE,KAAAE,IA9CA,IA8CAR,EAAAI,GA/CA,IACA,IAiDA,EAEAvB,KAAAwB,gBACAxB,KAAA4B,eAGA5B,KAAAgB,gBAGAjB,EAAAe,UAAAc,aAAA,WACA5B,KAAA6B,YACA7B,KAAAM,oBAGAP,EAAAe,UAAAR,iBAAA,WACAN,KAAAG,oBACAH,KAAAG,kBAAA2B,WAAAL,KAAAM,MAAA/B,KAAAwB,kBAEAxB,KAAA6B,WAAAG,WAAAhC,KAAAM,iBArEA,KAuEAP,EAAAe,UAAAE,YAAA,WACAhB,KAAA6B,aACAI,aAAAjC,KAAA6B,mBACA7B,KAAA6B,aAGA9B,EAlEc,8BCddmC,EAAA,WAAuB,0BAAAC,yBAAAD,IAAAC,YAAAD,MAAAE,KAAAF,OAOvBG,EAAA,WACA,SAAAA,KAsCA,OA9BAA,EAAAC,QAAA,SAAAC,EAAAC,GACAH,EAAAR,YACAQ,EAAAI,mBAEA,IAAAC,EAAAR,IACAM,IACA,IAAAG,EAAAT,IACAU,EAAAP,EAAAQ,QAAAN,IAAA,CACAO,cAAA,EACAC,MAAA,EACAC,IAAA,IAEAC,EAAAN,EAAAD,EACAE,EAAAE,eAAAG,EACAL,EAAAG,QACAH,EAAAI,IAAAE,KAAA,CACAD,WACAE,UAAAR,IAEAN,EAAAQ,QAAAN,GAAAK,GAEAP,EAAAe,MAAA,WACAf,EAAAQ,QAAA,GACAZ,aAAAI,EAAAR,YACAQ,EAAAR,WAAAwB,KAEAhB,EAAAI,iBAAA,WACAJ,EAAAR,WAAAG,WAAA,WAA+D,OAAAK,EAAAe,SA1C/D,OA4CAf,EAAAQ,QAAA,GACAR,EAvCA,wECcAiB,EAAA,oBAAAC,QAEA,IAAAA,aACAC,EAOO,SAAAC,EAAAC,GACP,IAAAC,EAAA,SAAAC,GAEA,SAAAD,IACA,IAAAE,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAIA,OAHA6D,EAAAG,MAAA,CACAC,UAAAX,IAAAY,IAAAR,EAAAS,WAAAX,GAEAK,EA4BA,OAlCQO,EAAA,UAAiBT,EAAAC,GAQzBD,EAAA7C,UAAAuD,OAAA,WAGA,IAAAC,EAAAtE,KAAAuE,MAAAC,EAAAF,EAAAE,aAAAC,EAAAH,EAAAI,iBAAAC,EAA2GP,EAAA,OAAcE,EAAA,qCACzHL,EAAAjE,KAAAgE,MAAAC,UACA,OAAAA,EAA+BW,EAAA,cAAmBX,EAAYG,EAAA,SAAgB,CAAES,IAAAL,GAAoBG,IAAAF,EAAyBG,EAAA,cAAmBH,EAAA,YAEhJd,EAAA7C,UAAAgE,kBAAA,WACA,IAAAjB,EAAA7D,KACAA,KAAAgE,MAAAC,WAEAP,EACAS,OACAY,KAAA,SAAAC,GACAA,IAEA1B,KAAA2B,IAAAvB,EAAAS,KAAAa,GAEAnB,EAAAqB,SAAA,CACAjB,UAAAe,GACyBtB,EAAAyB,WAGzBC,MAAA1B,EAAA2B,UAGA1B,EAnCA,CAoCMiB,EAAA,WACN,OAAWA,EAAA,WAAgB,SAAAL,EAAAM,GAAwB,OAASD,EAAA,cAAmBjB,EAAQS,EAAA,SAAgB,GAAGG,EAAA,CAAUC,aAAAK,OChE7G,SAAAS,EAAAC,GACP,UAAAC,MAAA,sBAAAD,GCDO,SAAAE,EAEPC,EAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAE,MACAC,GAAA,EACA,OACAC,cAAA,EACA9B,IAAA,WACA,GAAA6B,GAAAF,GAAA7F,OAAA6F,EAAA/E,WAAAd,KAAAiG,eAAAN,GACA,OAAAE,EAGA,IAAAK,EAAAL,KAAAtF,KAAAP,MASA,OARA+F,GAAA,EACA3F,OAAA+F,eAAAnG,KAAA2F,EAAA,CACAK,cAAA,EACAI,UAAA,EACAC,YAAA,EACAP,MAAAI,IAEAH,GAAA,EACAG,GAGAjB,IAAA,SAAAqB,GACAlG,OAAA+F,eAAAnG,KAAA2F,EAAA,CACAK,cAAA,EACAI,UAAA,EACAC,YAAA,EACAP,MAAAQ,uDC1BO,SAAAC,EAAAC,EAAAC,GAGP,YAFA,IAAAD,IAAiCA,EAAA,KACjCE,EAAAD,KAWA,SAAAA,GACA,gBAAAE,GAAgC,OAAAF,EAAuBrC,EAAA,SAAgB,GAAGuC,EAAAF,GAAAE,GAZ1EC,CAAAH,IACAD,GAEO,SAAAK,EAAAL,EAAAC,GAGP,YAFA,IAAAD,IAAiCA,EAAA,KACjCE,EAAAD,KASA,SAAAK,QACA,IAAAA,IAA6CA,EAAA,IAC7C,gBAAAC,GACA,IAAAC,EAAgC5C,EAAA,SAAgB,GAAG2C,GACnD,QAAAE,KAAAH,EACAA,EAAAb,eAAAgB,KACAD,EAAAC,GAA+C7C,EAAA,SAAgB,GAAG2C,EAAAE,GAAAH,EAAAG,KAGlE,OAAAD,GAlBAE,CAAAT,IACAD,GAEA,SAAAE,EAAAC,GACA,yBAAAA,ECXO,SAAAQ,EAAA5C,EAAA6C,GACP,IAAA9C,GAAA8C,GAAA,IAAiCC,sBAAA,IAAA/C,EAAA,CAAoDqC,SAAA,GAAaW,eAAA,IAAsBhD,EACxH,OACA+C,eAAA,CACAV,SAAsBJ,EAAac,EAAAV,SAAApC,EAAAoC,UACnCW,eAA4BT,EAAmBQ,EAAAC,eAAA/C,EAAA+C,gBAC/CC,qBAAA,ICMA,IAAIC,EAAU,SAAA5D,GAEd,SAAA6D,IACA,IAAA5D,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAGA,OAFA6D,EAAA6D,aAAA,EACA7D,EAAA8D,uBAAA,WAAoD,OAAA9D,EAAA+D,eACpD/D,EAmBA,OAxBIO,EAAA,UAAiBqD,EAAA7D,GAOrB6D,EAAA3G,UAAAgE,kBAAA,WACQ+C,EAAA,EAAcC,QAAA9H,KAAA2H,yBAEtBF,EAAA3G,UAAAiH,qBAAA,WACQF,EAAA,EAAcG,UAAAhI,KAAA2H,yBAEtBF,EAAA3G,UAAAuD,OAAA,WACA,IAAAR,EAAA7D,KACAiI,EAAAjI,KAAAuE,MAAA0D,iBACA,OAAgBrD,EAAA,cAAoBsD,EAAA,EAAiBC,SAAA,cAAAf,GACrD,IAAAgB,EAA6BjB,EAAmBtD,EAAAU,MAAA6C,GAIhD,OAHAa,IACAG,EAAAH,EAAAG,IAEmBxD,EAAA,cAAoBsD,EAAA,EAAiBG,SAAA,CAAYvC,MAAAsC,GAAoBvE,EAAAU,MAAA+D,aAGxFb,EAzBc,CA0BZc,EAAA,gDCtCK,SAAAC,EAAAC,EAAAC,QACP,IAAAA,IAA0CA,GAAA,GAC1C,IAAAJ,EAAA,GACA,GAAAG,EAAA,CACA,QAAAE,EAAA,EAAuBA,EAAAF,EAAAH,SAAAjH,OAA4BsH,IACnDL,EAAApF,KAAAuF,EAAAH,SAAAM,KAAAD,IAEAD,GAAoCtI,OAAAyI,EAAA,EAAAzI,CAAgBqI,IACpDH,EAAApF,KAAAY,MAAAwE,EAAAG,EAAAK,SAAAR,UAGA,OAAAA,+ICdAS,GAAA,wEAKAC,GAAA,gCAEAC,GAAA,OASAC,GAAA,6MAgCO,SAAAC,GAAAC,EAAAC,EAAAC,GACP,OAAAF,GAGAA,EAfA,SAAAA,GAIA,OADAA,GADAA,GADAA,IAAAG,QAAAR,GAAA,KACAQ,QAAAN,GAAA,MACAO,OAYAC,CAAAL,GAEAF,GAAAQ,KAAAN,KAAAE,GAAAN,GAAAU,KAAAN,GACA,GArCA,SAAAA,EAAAC,GACA,IAAAM,EAAA,GACAC,EAAAR,EAAAS,MAAA,KAYA,OAXA,IAAAD,EAAAvI,QACAsI,GAAAC,EAAA,GAAAE,OAAA,GAAAC,cACAJ,GAAAC,EAAA,GAAAE,OAAA,GAAAC,eAEA,IAAAH,EAAAvI,QACAsI,GAAAC,EAAA,GAAAE,OAAA,GAAAC,cACAJ,GAAAC,EAAA,GAAAE,OAAA,GAAAC,eAEA,IAAAH,EAAAvI,SACAsI,GAAAC,EAAA,GAAAE,OAAA,GAAAC,eAEAV,GAAAM,EAAAtI,OAAA,EACAsI,EAAAG,OAAA,GAAAH,EAAAG,OAAA,GAEAH,EAsBAK,CAAAZ,EAAAC,IAPA,2BClDO,SAAAY,GAAAC,EAAAC,GAEP,OADA1I,KAAA2I,KAAA3I,KAAA4I,IAAAH,EAAA3E,EAAA4E,EAAA5E,EAAA,GAAA9D,KAAA4I,IAAAH,EAAAI,EAAAH,EAAAG,EAAA,IAcO,SAAAC,GAAA7G,GACP,IAGA8G,EAHAC,EAAA/G,EAAA+G,YAAAC,EAAAhH,EAAAgH,WAAApG,EAAAZ,EAAAiH,YAAA,IAAArG,EAAA,UAAAA,EAAAsG,EAAAlH,EAAAmH,gBAAA,IAAAD,EAAA,EAAAA,EACAE,EAAAL,EAAAlL,MAAAkL,EAAAhL,OACAsL,EAAAL,EAAAnL,MAAAmL,EAAAjL,OAGA+K,GADA,YAAAG,EAAAG,EAAAC,EAAAD,EAAAC,GACAL,EAAAnL,MAAAkL,EAAAlL,MAGAmL,EAAAjL,OAAAgL,EAAAhL,OAEA,IAAAuL,EAAAvJ,KAAAE,IAAAkJ,EAAAL,GACA,OACAjL,MAAAkL,EAAAlL,MAAAyL,EACAvL,OAAAgL,EAAAhL,OAAAuL,GAUO,SAAAC,GAAAnF,GAOP,IAAAoF,EAAA,0BAAAC,KAAAC,OAAAtF,IACA,OAAAoF,EAGAA,EAAA,IACAA,EAAA,GAAA7J,OAEA6J,EAAA,GACAA,EAAA,GAAA7J,OAEA,EARA,EAeO,SAAAgK,GAAAvF,EAAAwF,EAAAC,QACP,IAAAA,IAA0BA,EAAA,IAC1B,IAAAC,EAAA/J,KAAA4I,IAAAkB,EAAAD,GACA,OAAA7J,KAAAM,MAAA+D,EAAA0F,+ECvEAC,GAAA,GAEO,SAAAC,GAAAC,GACP,OAAAF,GAAAE,EAGO,SAAAC,GAAAC,GACPJ,GAAAI,gBCNAC,GAAA,UAEAC,GAAA,WAeO,SAAAC,GAAAC,GAGP,IADA,IAAAC,EAAA,GACAC,EAAA,EAAoBA,EAAApI,UAAA1C,OAAuB8K,IAC3CD,EAAAC,EAAA,GAAApI,UAAAoI,GAEA,IAAAC,EAAAF,EAYA,OAAAD,EAAA1C,QAAAwC,GAVA,SAAAM,GAGA,IAAAC,EAAAF,EAAAC,EAAA9C,QAAAuC,GAAA,KAKA,OAHAQ,UACAA,EAAA,IAEAA,6EC/BAlM,OAAAmM,GAAA,EAAAnM,CAAU,gCCHVoM,EAAAC,EAAAC,EAAA,0BAAAC,EAAA,IAAAH,EAAAC,EAAAC,EAAA,+BAAA5M,IAAA0M,EAAAC,EAAAC,EAAA,kCAAAnE,EAAA,IAAAiE,EAAAC,EAAAC,EAAA,+BAAAnE,EAAA,IAAAiE,EAAAC,EAAAC,EAAA,mCAAAE,EAAA,IAAAJ,EAAAC,EAAAC,EAAA,kCAAAG,EAAA,IAAAL,EAAAC,EAAAC,EAAA,+BAAAxM,EAAA,IAAAsM,EAAAC,EAAAC,EAAA,sCAAArK,IAAAmK,EAAAC,EAAAC,EAAA,mCAAAI,EAAA,IAAAN,EAAAC,EAAAC,EAAA,6BAAAK,EAAA,IAAAP,EAAAC,EAAAC,EAAA,8BAAAM,EAAA,IAAAR,EAAAC,EAAAC,EAAA,mCAAAO,EAAA,IAAAT,EAAAC,EAAAC,EAAA,6CAAAQ,EAAA,IAAAV,EAAAC,EAAAC,EAAA,8BAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,yBAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,gCAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,6BAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,gCAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,mCAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,sCAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,4BAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,gCAAAS,EAAA,IAAAX,EAAAC,EAAAC,EAAA,4BAAAjJ,IAAA+I,EAAAC,EAAAC,EAAA,gCAAApH,IAAAkH,EAAAC,EAAAC,EAAA,6BAAAjH,IAAA+G,EAAAC,EAAAC,EAAA,uCAAAU,EAAA,IAAAZ,EAAAC,EAAAC,EAAA,8BAAAW,EAAA,IAAAb,EAAAC,EAAAC,EAAA,wBAAAY,EAAA,IAAAd,EAAAC,EAAAC,EAAA,mCAAA7E,EAAA,IAAA2E,EAAAC,EAAAC,EAAA,+BAAAlF,IAAAgF,EAAAC,EAAAC,EAAA,sCAAAxE,EAAA,IAAAsE,EAAAC,EAAAC,EAAA,iCAAAa,EAAA,IAAAf,EAAAC,EAAAC,EAAA,wCAAAvF,IAAAqF,EAAAC,EAAAC,EAAA,kCAAAnG,IAAAiG,EAAAC,EAAAC,EAAA,wCAAA7F,IAAA2F,EAAAC,EAAAC,EAAA,gCAAAc,EAAA,IAAAhB,EAAAC,EAAAC,EAAA,oCAAAe,EAAA,IAAAjB,EAAAC,EAAAC,EAAA,6CAAAgB,EAAA,IAAAlB,EAAAC,EAAAC,EAAA,yCAAAiB,EAAA,IAAAnB,EAAAC,EAAAC,EAAA,gCAAAlE,IAAAgE,EAAAC,EAAAC,EAAA,8BAAAkB,EAAA,IAAApB,EAAAC,EAAAC,EAAA,4BAAAzN,IAAAuN,EAAAC,EAAAC,EAAA,qCAAAmB,EAAA,IAAArB,EAAAC,EAAAC,EAAA,8BAAAoB,EAAA,IAAAtB,EAAAC,EAAAC,EAAA,qCAAA7D,EAAA,IAAA2D,EAAAC,EAAAC,EAAA,uBAAA/L,EAAA,IAAA6L,EAAAC,EAAAC,EAAA,0CAAAqB,EAAA,IAAAvB,EAAAC,EAAAC,EAAA,+BAAAsB,EAAA,IAAAxB,EAAAC,EAAAC,EAAA,0CAAAuB,EAAA,IAAAzB,EAAAC,EAAAC,EAAA,uCAAAuB,EAAA,IAAAzB,EAAAC,EAAAC,EAAA,qCAAAwB,EAAA,IAAA1B,EAAAC,EAAAC,EAAA,oCAAAyB,EAAA,IAAA3B,EAAAC,EAAAC,EAAA,sCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,qCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,qCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,oCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,oCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,uCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,mCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,qCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,sCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,uCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,0CAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,4CAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,oCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,+BAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,4CAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,wCAAA0B,EAAA,IAAA5B,EAAAC,EAAAC,EAAA,iCAAA2B,EAAA,IAAA7B,EAAAC,EAAAC,EAAA,mCAAA2B,EAAA,IAAA7B,EAAAC,EAAAC,EAAA,iCAAA4B,EAAA,IAAA9B,EAAAC,EAAAC,EAAA,2CAAA6B,GAAA,IAAA/B,EAAAC,EAAAC,EAAA,4CAAA8B,GAAA,IAAAhC,EAAAC,EAAAC,EAAA,yCAAA8B,GAAA,IAAAhC,EAAAC,EAAAC,EAAA,gCAAAvD,KAAAqD,EAAAC,EAAAC,EAAA,yCAAA+B,GAAA,IAAAjC,EAAAC,EAAAC,EAAA,0CAAA+B,GAAA,IAAAjC,EAAAC,EAAAC,EAAA,gCAAAgC,GAAA,IAAAlC,EAAAC,EAAAC,EAAA,gCAAAgC,GAAA,IAAAlC,EAAAC,EAAAC,EAAA,6CAAAzC,KAAAuC,EAAAC,EAAAC,EAAA,uCAAAnC,KAAAiC,EAAAC,EAAAC,EAAA,uCAAAzB,KAAAuB,EAAAC,EAAAC,EAAA,mCAAArB,KAAAmB,EAAAC,EAAAC,EAAA,sCAAAiC,GAAA,IAAAnC,EAAAC,EAAAC,EAAA,sCAAAiC,GAAA,IAAAnC,EAAAC,EAAAC,EAAA,4BAAAiC,GAAA,IAAAnC,EAAAC,EAAAC,EAAA,oCAAAiC,GAAA,IAAAnC,EAAAC,EAAAC,EAAA,0BAAAkC,GAAA,IAAApC,EAAAC,EAAAC,EAAA,0BAAAmC,GAAA,IAAArC,EAAAC,EAAAC,EAAA,mCAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,2BAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,mCAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,0BAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,6BAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,kCAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,2BAAAoC,GAAA,IAAAtC,EAAAC,EAAAC,EAAA,0BAAAqC,GAAA,IAAAvC,EAAAC,EAAAC,EAAA,0CAAAsC,GAAA,IAAAxC,EAAAC,EAAAC,EAAA,wCAAAsC,GAAA,IAAAxC,EAAAC,EAAAC,EAAA,gCAAAsC,GAAA,IAAAxC,EAAAC,EAAAC,EAAA,sCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,0CAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,0CAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,qCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,qCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,kCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,oCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,uCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,oCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,mCAAAuC,GAAA,IAAAzC,EAAAC,EAAAC,EAAA,mCAAAhB,KAAAc,EAAAC,EAAAC,EAAA,+BAAAd,KAAAY,EAAAC,EAAAC,EAAA,2BAAAwC,GAAA,IAAA1C,EAAAC,EAAAC,EAAA,2BAAAwC,GAAA,IAAA1C,EAAAC,EAAAC,EAAA,sCAAAwC,GAAA,IAAA1C,EAAAC,EAAAC,EAAA,iDAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,yCAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,sCAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,qCAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,sCAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,yCAAArM,EAAA,IAAAmM,EAAAC,EAAAC,EAAA,2BAAAV,KAAAQ,EAAAC,EAAAC,EAAA,2BAAAyC,GAAA,IAAA3C,EAAAC,EAAAC,EAAA,yBAAA0C,GAAA,IAAA5C,EAAAC,EAAAC,EAAA,uCAAA0C,GAAA,IAAA5C,EAAAC,EAAAC,EAAA,mDAAA2C,GAAA,IAAA7C,EAAAC,EAAAC,EAAA,qCAAA4C,GAAA,IAAA9C,EAAAC,EAAAC,EAAA,0CAAA6C,GAAA,IAAA/C,EAAAC,EAAAC,EAAA,2BAAA8C,GAAA,sCCAAhD,EAAAiD,EAAA/C,GAAA,IAAAgD,EAAAlD,EAAA,KAAAA,EAAAC,EAAAC,EAAA,+BAAAgD,EAAA,IAEAtP,OAAAsP,EAAA,EAAAtP,CAAU,mECDVA,OAAA+F,eAAAwJ,EAAA,cAA8C7J,OAAA,IAC9C,IAIA8J,EAJAC,EAAcrD,EAAQ,IACtBsD,EAAYtD,EAAQ,GACpBuD,EAAsBvD,EAAQ,KAC9BwD,EAAkBxD,EAAQ,MAE1B,SAAAoD,GACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,uBANA,CAOCA,EAAAD,EAAAC,iBAAAD,EAAAC,eAAA,KACD,IACAK,EADAC,EAAA,kCAQAP,EAAAQ,kBAHA,SAAAC,GACAH,EAAAG,GA6DAT,EAAAU,mBA1DA,SAAAC,GACA,IAAAC,EAAA,SAAA3M,GAEA,SAAA4M,EAAAjM,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAKA,OAJA6D,EAAA6M,4BAAA7M,EAAA6M,4BAAAnQ,KAAAsD,GACAA,EAAAG,MAAA,CACAoM,eAAAvM,EAAA8M,sBAEA9M,EA6CA,OApDAgM,EAAAe,UAAAJ,EAAA5M,GASA4M,EAAA1P,UAAAgE,kBAAA,WACA,IAAAjB,EAAA7D,KACAA,KAAAC,QAAAU,GAAAvB,OAAA,oBACA,IAAAgR,EAAAvM,EAAA8M,qBACAP,IAAAvM,EAAAG,MAAAoM,gBACAvM,EAAAqB,SAAA,CACAkL,sBAKAI,EAAA1P,UAAAiH,qBAAA,WACA/H,KAAAC,QAAAc,WAEAyP,EAAA1P,UAAAuD,OAAA,WACA,IAAA+L,EAAApQ,KAAAgE,MAAAoM,eACA,OAAAN,EAAAe,cAAAP,EAAAT,EAAAiB,SAAA,CAA4EjM,IAAA7E,KAAA0Q,4BAAAN,kBAAwEpQ,KAAAuE,SAEpJiM,EAAA1P,UAAA6P,mBAAA,WACA,IAAAP,EAAAR,EAAAmB,MACAC,EAAAhB,EAAAlC,YACA,YAAAkD,EACA,IACA,KAAAA,EAAAxR,WAAA0Q,EAAAE,IACAA,IAGA,MAAAa,GAEAb,EAAAR,EAAAsB,UAGA,CACA,QAAA1N,IAAAyM,EAIA,UAAAzK,MAAA,2JAHA4K,EAAAH,EAOA,OAAAG,GAEAI,EArDA,CAsDKT,EAAAoB,eACL,OAAAnB,EAAA1B,aAAAgC,EAAAC,sCChFA/D,EAAAC,EAAAC,EAAA,sBAAA0E,IAAA,IAAAC,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,GAAA+E,EAAA/E,EAAAgF,EAAAF,GAAAG,EAAAjF,EAAA,IAAAkF,EAAAlF,EAAA,IAAAmF,GAAAnF,EAAA,KAAAA,EAAA,KAAAoF,EAAApF,EAAA,KAAAqF,EAAArF,EAAA,IA0CE+E,EAAAO,EAAK7N,UA+CLsN,EAAAO,EAAK7N,UAuBP,IAAAmN,EAEA,SAAAW,GAGA,SAAAX,IACA,OAAAW,EAAAjO,MAAA9D,KAAA+D,YAAA/D,KAHEI,OAAAiR,EAAA,EAAAjR,CAAcgR,EAAAW,GAMhB,IAAAC,EAAAZ,EAAAtQ,UAwCA,OAtCAkR,EAAAC,YAAA,SAAAC,EAAAC,IACAnS,KAAAuE,MAAA6N,SAAApS,KAAAuE,MAAA6N,QAAAF,GAEAA,EAAAG,kBACA,IAAAH,EAAAI,QACAtS,KAAAuE,MAAAmB,QAAA,UAAA1F,KAAAuE,MAAAmB,QAxBA,SAAAwM,GACA,SAAAA,EAAAK,SAAAL,EAAAM,QAAAN,EAAAO,SAAAP,EAAAQ,UAwBAC,CAAAT,MAEAA,EAAAU,kBACA5S,KAAAuE,MAAAgF,QAAA4I,EAAA5I,QAAA4I,EAAAjP,MACAlD,KAAAuE,MAAAsO,MAIAb,EAAA3N,OAAA,WACA,IAAAR,EAAA7D,KAEA8S,EAAA9S,KAAAuE,MACAwO,EAAAD,EAAAC,SAEAF,GADAC,EAAAvJ,QACAuJ,EAAAD,IACAlO,EAAevE,OAAAwR,EAAA,EAAAxR,CAA6B0S,EAAA,6BAG5C,OAAWvB,EAAAO,EAAKjB,cAAeY,EAAA,EAAetJ,SAAA,cAAA6K,GAC9CA,GAA4H5S,OAAAyR,EAAA,EAAAzR,EAAS,GACrI,IAAA6S,EAAA,iBAAAJ,EAA8CzS,OAAAsR,EAAA,EAAAtR,CAAcyS,EAAA,UAAAG,EAAAC,UAAAJ,EAC5DK,EAAAD,EAAAD,EAAAb,QAAAgB,WAAAF,GAAA,GACA,OAAa1B,EAAAO,EAAKjB,cAAA,IAAoBzQ,OAAAuR,EAAA,EAAAvR,CAAQ,GAAGuE,EAAA,CACjDyN,QAAA,SAAAF,GACA,OAAArO,EAAAoO,YAAAC,EAAAc,EAAAb,UAEAe,OACArO,IAAAkO,QAKA3B,EA/CA,CAgDEG,EAAAO,EAAK7N,6CClKPuI,EAAAC,EAAAC,EAAA,sBAAA0G,IAAA5G,EAAAC,EAAAC,EAAA,sBAAA2G,IAAA,IAAAC,EAAA9G,EAAA,KACO,SAAA4G,EAAAG,GACP,IAqFAjP,EAAAsG,EAAA4I,EArFAvH,EAAAsH,EAAAE,eACAC,EAAAzH,EAAAyH,iBACAC,EAAA1H,EAAA0H,wBACAC,EAAA3H,EAAA2H,wBACAC,EAAA5H,EAAA4H,WACAC,EAAA7H,EAAA6H,kBACAC,EAAA9H,EAAA8H,kBACAC,EAAA/H,EAAA+H,yBACA,OACAC,KAAA,CACAC,gBAAAR,EACAS,MAAAN,GAEAO,YAAA,CACAF,gBAAAN,EACAO,MAAAL,EACAO,WAAA/P,EAAA,GACAA,EAAmBgP,EAAA,GAAoB,CACvCgB,YAAA,YACAH,MAAA,aAEA7P,IAEAiQ,YAAA,CACAL,gBAAAP,EACAQ,MAAAJ,GAEAS,aAAA,CACAN,gBAAAP,EACAQ,MAAAJ,GAEAU,YAAA,CACAP,gBAAAP,EACAQ,MAAAJ,GAEAW,mBAAA,CACAR,gBAAAX,EAAAoB,QAAAC,aACAT,MAAAH,GAGAa,qBAAA,CACAR,WAAAzJ,EAAA,GACAA,EAAmB0I,EAAA,GAAoB,CACvCwB,OAAA,QAEAlK,IAEAmK,sBAAA,CACAZ,MAAAZ,EAAAoB,QAAAK,MACAd,gBAAAX,EAAAoB,QAAAM,eACAZ,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAC,aACAP,WAAAb,EAAA,GACAA,EAA2BF,EAAA,GAAoB,CAC/Ca,MAAA,aAEAX,MAIA2B,8BAAA,CACAjB,gBAAAX,EAAAoB,QAAAM,eACAZ,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAM,kBAIAG,mBAAA,CACAlB,gBAAAX,EAAAoB,QAAAU,oBAEAC,6BAAA,CACApB,gBAAAX,EAAAoB,QAAAY,cAEAC,8BAAA,CACAtB,gBAAAX,EAAAoB,QAAAC,cAEAa,oBAAA,CACAtB,MAAAZ,EAAAoB,QAAAe,gBAEAC,4BAAA,CACAxB,MAAAZ,EAAAoB,QAAAiB,kBAKO,SAAAvC,EAAAE,GACP,OACAU,KAAA,CACAC,gBAAAX,EAAAoB,QAAAY,aACApB,MAAAZ,EAAAoB,QAAAK,MACAX,WAAA/P,EAAA,GACAA,EAAmBgP,EAAA,GAAoB,CACvCa,MAAA,SACAD,gBAAA,aACA2B,qBAAA,QAEAvR,IAEA8P,YAAA,CACAF,gBAAAX,EAAAoB,QAAAmB,aACA3B,MAAAZ,EAAAoB,QAAAK,MACAX,WAAAzJ,EAAA,GACAA,EAAmB0I,EAAA,GAAoB,CACvCa,MAAA,SACAD,gBAAA,aAEAtJ,IAEA2J,YAAA,CACAL,gBAAAX,EAAAoB,QAAAoB,UACA5B,MAAAZ,EAAAoB,QAAAK,MACAX,WAAAb,EAAA,GACAA,EAAmBF,EAAA,GAAoB,CACvCa,MAAA,SACAD,gBAAA,aACA2B,qBAAA,QAEArC,IAEAgB,aAAA,CACAN,gBAAAX,EAAAoB,QAAAoB,UACA5B,MAAAZ,EAAAoB,QAAAK,OAEAP,YAAA,CACAP,gBAAAX,EAAAoB,QAAAoB,UACA5B,MAAAZ,EAAAoB,QAAAK,OAEAN,mBAAA,CACAR,gBAAAX,EAAAoB,QAAAY,aACApB,MAAAZ,EAAAoB,QAAAK,OAEAgB,aAAA,CACA3B,WAAA4B,EAAA,GACAA,EAAmB3C,EAAA,GAAoB,CACvCa,MAAA,WACAG,YAAA,WACAJ,gBAAA,UAEA+B,IAGApB,qBAAA,CACAR,WAAA6B,EAAA,GACAA,EAAmB5C,EAAA,GAAoB,CACvCwB,OAAA,QAEAoB,IAEAd,mBAAA,CACAlB,gBAAAX,EAAAoB,QAAAwB,cAEApB,sBAAA,CACAb,gBAAAX,EAAAoB,QAAAY,aACApB,MAAAZ,EAAAoB,QAAAK,MACAX,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAoB,UACA1B,WAAA+B,EAAA,GACAA,EAA2B9C,EAAA,GAAoB,CAC/Ca,MAAA,aAEAiC,MAIAjB,8BAAA,CACAjB,gBAAAX,EAAAoB,QAAAM,eACAZ,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAM,kBAIAK,6BAAA,CACApB,gBAAAX,EAAAoB,QAAAoB,WAEAP,8BAAA,CACAtB,gBAAAX,EAAAoB,QAAAoB,WAEAN,oBAAA,CACAtB,MAAAZ,EAAAoB,QAAAK,OAEAW,4BAAA,CACAxB,MAAAZ,EAAAoB,QAAAiB,kBAGA,IAAAtR,EAAAsG,EAAA4I,EAAAyC,EAAAC,EAAAE,qCC9LO,IAAAC,EAAP7J,EAAAC,EAAAC,EAAA,sBAAA2J,IACA,SAAAA,GACAA,IAAA,eACAA,IAAA,mBACAA,IAAA,eAHA,CAICA,MAAA,uCCLD7J,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAyJ,EAAA9J,EAAA,IAAA8E,EAAA9E,EAAA,GASAK,EAAA,SAAAjJ,GAEA,SAAAiJ,EAAAtI,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAIA,OAHA6D,EAAAG,MAAA,CACAuS,YAAA,GAEA1S,EAsBA,OA5BIyS,EAAA,UAAiBzJ,EAAAjJ,GAQrBiJ,EAAA/L,UAAAgE,kBAAA,WACA,IAAAjB,EAAA7D,KACAwW,EAAAxW,KAAAuE,MAAAiS,MACAxW,KAAA6B,WAAAG,WAAA,WACA6B,EAAAqB,SAAA,CACAqR,YAAA,KAESC,IAET3J,EAAA/L,UAAAiH,qBAAA,WACA/H,KAAA6B,YACAI,aAAAjC,KAAA6B,aAGAgL,EAAA/L,UAAAuD,OAAA,WACA,OAAArE,KAAAgE,MAAAuS,WAAuCjF,EAAA,SAAcmF,KAAAzW,KAAAuE,MAAA+D,UAAA,MAErDuE,EAAA6J,aAAA,CACAF,MAAA,GAEA3J,EA7BA,CA8BEyE,EAAA,6CCtCFlR,OAAA+F,eAAAwJ,EAAA,cAA8C7J,OAAA,IAC9C,IAAA+J,EAAcrD,EAAQ,IACtBA,EAAQ,KACRqD,EAAA8G,aAAqBnK,EAAQ,KAAqBmD,qCCJlDnD,EAAAC,EAAAC,EAAA,sBAAAkK,IAAA,IAAAN,EAAA9J,EAAA,IAAA8E,EAAA9E,EAAA,GAMO,SAAAoK,EAAAC,EAAAC,GAeP,OAdA,SAAAlT,GAEA,SAAAyE,IACA,cAAAzE,KAAAE,MAAA9D,KAAA+D,YAAA/D,KASA,OAXQsW,EAAA,UAAiBjO,EAAAzE,GAIzByE,EAAAvH,UAAAiW,gBAAA,WACA,OAAAD,EAAA9W,KAAAuE,QAEA8D,EAAAvH,UAAAuD,OAAA,WACA,OAAmBiN,EAAA,SAAcmF,KAAAzW,KAAAuE,MAAA+D,WAEjCD,EAAA2O,kBAAAH,EACAxO,EAZA,CAaMiJ,EAAA,8CCbC,SAAA2F,EAAA/X,GACP,OAAAA,EAAAgY,YAAAhY,EAAAiY,YASO,SAAAC,EAAAlY,GACP,OAAAA,EAAAmY,aAAAnY,EAAAoY,aASO,SAAAC,EAAArY,GACP,OAAA+X,EAAA/X,IAAAkY,EAAAlY,GA5BAsN,EAAAC,EAAAC,EAAA,sBAAAuK,IAAAzK,EAAAC,EAAAC,EAAA,sBAAA0K,IAAA5K,EAAAC,EAAAC,EAAA,sBAAA6K,0ICOOC,EAAgBpX,OAAAuO,EAAA,EAAAvO,CAAe,SAAAmT,EAAAkE,EAAAC,GACtC,IAAAC,EAA2BvX,OAAAwX,EAAA,EAAAxX,CAAmBmT,GAC9CsE,EAA4BzX,OAAA0X,EAAA,EAAA1X,CAAoBmT,GAChDwE,EAAA,CACA9D,KAAA,CACA+D,SANA,OAOAvY,OARA,QAUAwY,MAAA,CACAC,WAAwBC,EAAA,EAAWC,WAGnC,OAAWhY,OAAAiY,EAAA,EAAAjY,CAAeuX,EAAAI,EAAAL,EAAkDtX,OAAAkY,EAAA,EAAAlY,CAAamT,GAAUnT,OAAAkY,EAAA,EAAAlY,CAAcmT,GAAAsE,EAAAJ,KCnBjHjL,EAAAC,EAAAC,EAAA,sBAAA6L,IAKA,IAAIA,EAAa,SAAA3U,GAEjB,SAAA4U,IACA,IAAA3U,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAKA,OADA6D,EAAA4U,6BAAA,EACA5U,EASA,OAhBIO,EAAA,UAAiBoU,EAAA5U,GASrB4U,EAAA1X,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAqG,EAAAtG,EAAAoT,eAAA,IAAA9M,KAAA8N,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MACA,OAAgB3O,EAAA,cAAoB+T,EAAA,EAAYvU,EAAA,SAAgB,GAAGpE,KAAAuE,MAAA,CAAeqU,iBAAAlB,EAAA,0CAAAgB,OAAkFlB,EAASjE,EAAAmF,EAAAhB,GAAAmB,oBAA+CtQ,EAAA,MAE5NiQ,EAAoBpU,EAAA,WAAkB,CAC9BhE,OAAAmN,EAAA,EAAAnN,CAAY,wCACpBoY,GAhBiB,CAkBfjQ,EAAA,qCCtBFnI,OAAA+F,eAAAwJ,EAAA,cAA8C7J,OAAA,IAC9C,IAAA+J,EAAcrD,EAAQ,IACtBwD,EAAkBxD,EAAQ,KAC1B2E,EAAA,SAAAvN,GAEA,SAAAuN,EAAA5M,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAIA,OAFA6D,EAAA4U,6BAAA,EACA5U,EAAA6M,4BAAA7M,EAAA6M,4BAAAnQ,KAAAsD,GACAA,EAiBA,OAvBAgM,EAAAe,UAAAO,EAAAvN,GAcAuN,EAAArQ,UAAA4P,4BAAA,SAAAoI,GACA9Y,KAAA+Y,2BAAAD,EACAA,EACA9Y,KAAAgZ,SAAAhJ,EAAAiJ,aAAAjZ,KAAA8Y,GAEA9Y,KAAAgZ,UACAhJ,EAAAkJ,eAAAlZ,UAAAgZ,WAGA7H,EAxBA,CAyBCnB,EAAAzH,eACDoH,EAAAwB,kDC7BA/Q,OAAA+F,eAAAwJ,EAAA,cAA8C7J,OAAA,IAG1B0G,EAAQ,KAC5BD,WAAA,sECLAC,EAAAC,EAAAC,EAAA,sBAAAyM,IAAA3M,EAAAC,EAAAC,EAAA,sBAAA0M,IACO,IAAAD,EAAA,CACPE,UAAA,OACAC,OAAA,EACAC,QAAA,EACAC,UAAA,cAEOJ,EAAA,CACPpK,SAAA,SACAyK,aAAA,WACAC,WAAA,4CCVAlN,EAAAC,EAAAC,EAAA,sBAAAiN,IAAA,IAAArD,EAAA9J,EAAA,IAAA8E,EAAA9E,EAAA,GAAAoN,EAAApN,EAAA,KAAAqN,EAAArN,EAAA,KAAAsN,EAAAtN,EAAA,KAIAmN,EAAA,SAAA/V,GAEA,SAAA+V,IACA,IAAA9V,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAKA,OADA6D,EAAA4U,6BAAA,EACA5U,EAQA,OAfIyS,EAAA,UAAiBqD,EAAA/V,GASrB+V,EAAA7Y,UAAAuD,OAAA,WACA,OAAeiN,EAAA,cAAoBwI,EAAA,EAAexD,EAAA,SAAgB,GAAGtW,KAAAuE,MAAA,CAAemT,SAAA,EAAAmB,oBAAqCe,EAAA,MAEzHD,EAAoBrD,EAAA,WAAkB,CAC9BlW,OAAAyZ,EAAA,EAAAzZ,CAAY,wCACpBuZ,GAfA,CAiBEC,EAAA,yCCrBKG,wJCKPC,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAChB6Z,EAAY,SAAArW,GAOhB,SAAAsW,EAAA3V,EAAAyO,GACA,IAAAnP,EAAAD,EAAA6M,KAAAzQ,KAAAuE,EAAAyO,IAAAhT,KAqCA,OApCA6D,EAAAsW,UAA0BvV,EAAA,YAC1Bf,EAAAuW,SAAA,SAAAnZ,GACA,IAAAoZ,EAAAxW,EAAAU,MAAA8V,WACAA,KAAAC,SACAD,EAAAC,QAAArZ,IAGA4C,EAAA0W,QAAA,SAAAtZ,GACA,IAAAoZ,EAAAxW,EAAAU,MAAA8V,WACAA,KAAAG,QACAH,EAAAG,OAAAvZ,IAGA4C,EAAA4W,UAAA,SAAAxZ,GACA,IAAAqD,EAAAT,EAAAU,MAAAmW,EAAApW,EAAAoW,SAAAC,EAAArW,EAAAqW,SACAC,EAAA/W,EAAAG,MAAA4W,UACAF,IACAC,GACAA,EAAA1Z,GAAA2Z,QAEApX,IAAAK,EAAAU,MAAAsW,SACAhX,EAAAqB,SAAA,CAAoC0V,iBAIpC/W,EAAAiX,eAAA,SAAAvW,GACA,IAAA0T,EAAA1T,EAAA0T,MACA,OAAAA,EAA2BrT,EAAA,cAAmB,QAAUmW,UAAAlX,EAAAmX,YAAAC,MAAoChD,GAAA,MAE5FpU,EAAAqX,uBAAA,CACAL,QAAA,mBAEAhX,EAAAsX,IAAAtX,EAAAU,MAAA6W,IAAsChb,OAAA0O,EAAA,EAAA1O,CAAK,aAC3CyD,EAAAG,MAAA,CACA4W,kBAAApX,IAAAe,EAAAsW,QAAAtW,EAAAsW,QAAAtW,EAAA8W,iBAEAxX,EA+CA,OA3FIO,EAAA,UAAiB8V,EAAAtW,GA8CrBsW,EAAApZ,UAAAwa,0BAAA,SAAAC,QACA/X,IAAA+X,EAAAV,SACA7a,KAAAkF,SAAA,CACA0V,YAAAW,EAAAV,WAOAX,EAAApZ,UAAAuD,OAAA,WACA,IAAAR,EAAA7D,KACAsE,EAAAtE,KAAAuE,MAAAsW,EAAAvW,EAAAuW,QAAAE,EAAAzW,EAAAyW,UAAAM,EAAA/W,EAAA+W,eAAAX,EAAApW,EAAAoW,SAAAL,EAAA/V,EAAA+V,WAAA9X,EAAA+B,EAAA/B,KAAAiZ,EAAAlX,EAAAkX,QAAAjI,EAAAjP,EAAAiP,MAAAkI,EAAAnX,EAAAmX,UAAAC,EAAApX,EAAAoX,eAAAC,EAAArX,EAAAqX,gBAAAjD,EAAApU,EAAAoU,OAAA9N,EAAAtG,EAAAsX,qBAAA,IAAAhR,EAAA5K,KAAA8a,eAAAlQ,EAAAiR,EAAAvX,EAAAuX,mBAAAC,EAAAxX,EAAAwX,kBAAAC,EAAAzX,EAAAyX,YAAAC,EAAA1X,EAAA0X,YAAAC,EAAA3X,EAAA2X,MACArB,OAAApX,IAAAqX,EAAA7a,KAAAgE,MAAA4W,UAAAC,EACAqB,EAAA,UAAAV,EASA,OARAxb,KAAAgb,YAAAhB,EAAAtB,EAAA,CACAnF,QACAwH,YACAL,WACAG,QAAAD,EACAuB,SAAAD,EACAE,yBAAAR,IAAA5b,KAAA8a,iBAEgBlW,EAAA,cAAoByX,EAAA,EAAU,CAAGL,cAAAtB,YAA+C,SAAA4B,GAA+B,OAAS1X,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAA/G,MACxJrP,EAAA,cAAmB,QAAUR,EAAA,SAAgB,CAAEmY,KAAA,YAAmBlC,EAAA,CAAemC,0BAAAF,EAAA,iCAAyE9Y,IAAAqX,GAAA,CAA4BA,gBAAmBrX,IAAA6X,GAAA,CAAmCA,kBAAiC,CAAGX,WAAAK,UAAAlX,EAAAmX,YAAAyB,MAAA5X,IAAAhB,EAAAsW,UAAA5X,OAAA6Y,GAAAvX,EAAAsX,IAAAc,QAAAtB,SAAA9W,EAAA4W,UAAAH,QAAAzW,EAAAuW,SAAAI,OAAA3W,EAAA0W,QAAAmC,gBAAAhC,EAAAiC,aAAAlB,EAAAmB,kBAAAlB,EAAAmB,mBAA8Szc,OAAA8M,EAAA,EAAA9M,CAAwBub,EAAAW,EAAA,qBAAAQ,gBAAAhB,EAAAiB,eAAAhB,KACtlBnX,EAAA,cAAmB,SAAWmW,UAAAlX,EAAAmX,YAAA/C,MAAA+E,QAAAnZ,EAAAsX,KAC1BvW,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAAiC,SAAAC,kBAAAZ,EAAA,oBACxB1X,EAAA,cAAoBuY,EAAA,EAAM/Y,EAAA,SAAgB,CAAEgZ,SAAA,aAAwBvB,EAAA,CAAuBd,UAAAlX,EAAAmX,YAAAqC,cAC/GzB,EAAA/X,EAAAU,MAAAV,EAAAiX,qBAEA1a,OAAA+F,eAAA+T,EAAApZ,UAAA,WACAoD,IAAA,WACA,OAAAlE,KAAAgE,MAAA4W,WAEAvU,YAAA,EACAL,cAAA,IAEAkU,EAAApZ,UAAAwc,MAAA,WACAtd,KAAAma,UAAAoD,SACAvd,KAAAma,UAAAoD,QAAAD,SAGApD,EAAAxD,aAAA,CACA8E,QAAA,SAEAtB,EA5FgB,CA6Fd3R,EAAA,8BChGKiV,EAAepd,OAAA+O,EAAA,EAAA/O,CAAO6Z,ECEtB,SAAA1V,GACP,IAwOAD,EAAAsG,EAAA4I,EAAAyC,EAAAC,EAAAE,EAAAqH,EAAAC,EAAAC,EAxOA5C,EAAAxW,EAAAwW,UAAAxH,EAAAhP,EAAAgP,MAAA4I,EAAA5X,EAAA4X,SAAAtB,EAAAtW,EAAAsW,QAAAH,EAAAnW,EAAAmW,SAAA0B,EAAA7X,EAAA6X,yBACA3I,EAAAF,EAAAE,eACAmK,EAAAnK,EAAAoK,uBACAC,EAAArK,EAAAsK,mBACAC,EAAAvK,EAAAwK,YACAC,EAAAzK,EAAA0K,iBACAC,EAAA3K,EAAA4K,uBACAC,EAAA7K,EAAA8K,oBACAC,EAAA/K,EAAAgL,mBACAC,EAAAjL,EAAA4K,uBACAM,EAAAlL,EAAAmL,8BACAC,EAAApL,EAAAmL,8BACAE,EAAArL,EAAAsL,SACAC,EAAAvL,EAAA8K,oBACAU,EAAAxL,EAAAsL,SACAG,EAAAzL,EAAA0L,aACA,OACAlL,KAAA,CACA,cACA,CACAmL,SAAA,WACAC,QAAA,QAEAlD,GAAA,WACAtB,GAAA,cACAH,GAAA,aACAA,GAAA,eACAA,GAAA,EACAG,GAAA,CACAxG,UAAA,CACAiL,+BAAA,CACAhL,YAAAkK,EACAnK,WAAA/P,EAAA,GACAA,EAAmCib,EAAA,GAAoB,CACvDjL,YAAA,aAEAhQ,IAEAkb,+BAAA,CAAyDlL,YAAAkK,GACzDiB,gCAAA,CACAtL,MAAA6J,EACA0B,QAAA,IACArL,WAAAzJ,EAAA,GACAA,EAAmC2U,EAAA,GAAoB,CACvDpL,MAAA,aAEAvJ,MAIAiQ,GAAA,CACAxG,WAAAb,EAAA,CACA8L,+BAAA,CACAK,WAAAhB,EACArK,YAAAuK,GAEAW,+BAAA,CACAG,WAAAhB,EACArK,YAAAuK,IAGArL,EAA2B+L,EAAA,GAAoB,CAC/ClL,UAAA,CACAiL,+BAAA,CACAK,WAAA,SACArL,YAAA,aAEAkL,+BAAA,CACAG,WAAA,aAEAC,qCAAA,CACAD,WAAA,aAEAE,sCAAA,CACA1L,MAAA,UAEAsL,gCAAA,CACAtL,MAAA,eAIAX,IAEA,CACAa,UAAA,CACAyL,2BAAA,CAAqD3L,MAAA2K,GACrDiB,2BAAA,CAAqD5L,MAAA2K,MAIrD/D,GAEA0B,MAAA,CACA,CACA2C,SAAA,WACAO,WAAA,OACAD,QAAA,EACArL,WAAA4B,EAAA,GACAA,EAAA,IAA6BzH,EAAA,EAAuB,6BACpDwR,QAAA,aAAAzM,EAAAoB,QAAAsL,iBACAC,cAAA,MACA7L,WAAA6B,EAAA,GACAA,EAA+BqJ,EAAA,GAAoB,CACnDS,QAAA,0BAEA9J,IAEAD,KAGAgC,MAAA,CACA,oBACA1E,EAAA4E,MAAAgI,OACA,CACAd,QAAA,OACAe,WAAAhE,EAAA,sBACAiE,OAAA3F,EAAA,oBACA0E,SAAA,WACAkB,WAAA,OACAC,UAAA,QAEApE,GAAA,CACAqE,cAAA,cACAC,eAAA,YAEA,CACApM,UAAA,CACAqM,YAAA,CACAtB,SAAA,WACA/f,KAAA,EACAM,MAAA,EACAL,IAAA,EACAM,OAAA,EACA+gB,QAAA,KACAC,cAAA,WAKA3D,SAAA,CACA,uBACA,CACAoC,QAAA,OACAwB,WAAA,EACAT,WAAA,SACAK,eAAA,SACAhhB,OAtJA,OAuJAF,MAvJA,OAwJAuhB,YAAA,MACAC,YAAA,QACAzM,YAAA4J,EACA1E,UAAA,aACAwH,mBAAA,mCACAC,mBA5JA,QA6JAC,yBA5JA,8BA8JAlS,SAAA,UAEAmN,EAQA,CACAgF,WAAA,GAJA,CACAC,YAAA,IAKA1G,GACAG,GAAA,CACA8E,WAAAjB,EACApK,YAAA8J,EACA/J,WAAA+B,EAAA,GACAA,EAAuBmJ,EAAA,GAAoB,CAC3CI,WAAA,YACArL,YAAA,aAEA8B,IAEAsE,GAAA,CACApG,YAAAgK,EACAjK,WAAAoJ,EAAA,GACAA,EAAuB8B,EAAA,GAAoB,CAC3CjL,YAAA,kBAEAmJ,IAEA5C,GACAH,GAAA,CACAiF,WAAAX,EACA1K,YAAAgK,IAGAjB,UAAA,CACA,wBACA,CACAqC,QAAA7E,EAAA,QACA1G,MAAA0G,GAAAH,EAAAoD,EAAAF,EACAvJ,WAAAqJ,EAAA,GACAA,EAAuB6B,EAAA,GAAoB,CAC3CpL,MAAAuG,EAAA,0BACA7E,qBAAA,QAEA6H,KAGAzC,KAAA,CACA,mBACA,CACA9G,MAAAuG,EAAAwE,EAAAD,EACAoC,SAA0BlJ,EAAA,EAASgI,OACnCmB,WAAA,QAEAnF,EAIA,CACAiF,YAAA,GAJA,CACAD,WAAA,GAKAzG,GAAA,CACArG,WAAAsJ,EAAA,GACAA,EAAuB4B,EAAA,GAAoB,CAG3CpL,MAAA,kBAEAwJ,YDvOoDna,EAAA,CAAc+d,MAAA,0DEEvDC,EAAYphB,OAAAuO,EAAA,EAAAvO,CAAe,SAAAmT,EAAAkE,GACtC,IAyDAnT,EAzDAqT,EAA2BvX,OAAAwX,EAAA,EAAAxX,CAAmBmT,GAC9CkO,EAAA,CACAxN,KAAA,CACAsF,QALA,QAMA9Z,OAPA,OAQA0U,MAAAZ,EAAAoB,QAAAe,eACAxB,gBAAA,cACAY,OAAA,yBAEAV,YAAA,CACAD,MAAAZ,EAAAoB,QAAAY,aACAlB,WAAA/P,EAAA,GACAA,EAAmBib,EAAA,GAAoB,CACvCjL,YAAA,YACAH,MAAA,aAEA7P,IAEAod,YAAA,CACAvN,MAAAZ,EAAAoB,QAAAY,cAEAhB,YAAA,CACAJ,MAAAZ,EAAAoB,QAAAgN,OAEAnN,aAAA,CACAL,MAAAZ,EAAAoB,QAAAY,cAEAqM,YAAA,CACAzN,MAAAZ,EAAAoB,QAAAkN,aAEA7L,aAAA,CACA7B,MAAAZ,EAAAoB,QAAAiB,gBACA1B,gBAAA,eAEAO,YAAA,CACAN,MAAAZ,EAAAoB,QAAAgN,OAEAG,YAAA,CACA3N,MAAAZ,EAAAoB,QAAAkN,aAEAE,cAAA,CACAtB,eAAA,cAEAuB,KAAA,CACA7N,MAAAZ,EAAAoB,QAAAmB,cAEAmM,aAAA,CACA9N,MAAA,WAEA+N,SAAA,CACA/N,MAAAZ,EAAAoB,QAAAsL,kBAEAkC,cAAA,CACAC,SAAA,IAGA,OAAWhiB,OAAAiY,EAAA,EAAAjY,CAAeuX,EAAA8J,EAAAhK,KC7DnB4K,ECIS,SAAAze,GAEhB,SAAA0e,IACA,IAAAze,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAKA,OADA6D,EAAA4U,6BAAA,EACA5U,EASA,OAhBIO,EAAA,UAAiBke,EAAA1e,GASrB0e,EAAAxhB,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAmU,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MACA,OAAgB3O,EAAA,cAAoB+T,EAAA,EAAYvU,EAAA,SAAgB,GAAGpE,KAAAuE,MAAA,CAAeqU,iBAAA,uCAAAF,OAAmE8I,EAASjO,EAAAmF,GAAAG,oBAAsCtQ,EAAA,MAEpM+Z,EAAmBle,EAAA,WAAkB,CAC7BhE,OAAAmN,EAAA,EAAAnN,CAAY,uCACpBkiB,GAhBgB,CAkBd/Z,EAAA,aNtBF,SAAAwR,GACAA,IAAA,mBACAA,IAAA,qBACAA,IAAA,mBAHA,CAICA,MAAA,KOMD,ICXOwI,EDWHC,EAAoB,WACxB,SAAAC,IACAziB,KAAA0iB,MAAA,EAiDA,OA5CAD,EAAA3hB,UAAA6hB,cAAA,SAAAjf,GAGA,IAFA,IAAAkf,EAAA,GACAC,EAAA,EACAla,EAAA,EAAuBA,EAAAjF,EAAArC,OAAoBsH,IAC3CjF,EAAAiF,GAAAma,WAAwC/I,EAAoBgJ,SAAArf,EAAAiF,GAAAma,WAAoC/I,EAAoBiJ,OACpHJ,EAAA1f,KAAAyF,GAGAka,IAGA7iB,KAAA0iB,MAAAG,EACA7iB,KAAAijB,yBAAAL,GAEAxiB,OAAA+F,eAAAsc,EAAA3hB,UAAA,iBAIAoD,IAAA,WACA,OAAAlE,KAAA0iB,OAEArc,YAAA,EACAL,cAAA,IAOAyc,EAAA3hB,UAAAoiB,cAAA,SAAAC,GACA,QAAA3f,IAAA2f,EAAA,CAMA,IADA,IAAAC,EAAA,EACAD,EAAAnjB,KAAAijB,yBAAAG,IACAA,IAEA,GAAApjB,KAAAijB,yBAAAG,KAAAD,EACA,UAAA3d,MAAA,+BAAA2d,EAAA,iCAEA,OAAAA,EAAAC,EAAA,IAEAX,EAnDwB,yDERpBY,EAAgBjjB,OAAAgN,EAAA,EAAAhN,GAChBkjB,EAAW,SAAA1f,GAEf,SAAA2f,IACA,cAAA3f,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAkBA,OApBIoE,EAAA,UAAiBmf,EAAA3f,GAIrB2f,EAAAziB,UAAAgE,kBAAA,WACQ1E,OAAAC,EAAA,EAAAD,IAERmjB,EAAAziB,UAAAiH,qBAAA,WACQ3H,OAAAC,EAAA,EAAAD,IAERmjB,EAAAziB,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAif,EAAAlf,EAAAmf,aAAA1I,EAAAzW,EAAAyW,UAAAxH,EAAAjP,EAAAiP,MAAAmF,EAAApU,EAAAoU,OACAgL,EAAuBtjB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAClD0U,EAAyBN,EAAa3K,EAAA,CACtCnF,QACAwH,YACAyI,WAEA,OAAe5e,EAAA,cAAmB,MAAQR,EAAA,SAAgB,GAAGsf,EAAA,CAAa3I,UAAA4I,EAAA1P,SAE1EsP,EArBe,CAsBbhb,EAAA,YCzBFqb,EAAA,CACA3P,KAAA,aACA4P,SAAA,oBCAOC,EAAc1jB,OAAA+O,EAAA,EAAA/O,CAAOkjB,EDER,SAAA/e,GACpB,IAiCAD,EAjCAyW,EAAAxW,EAAAwW,UAAAxH,EAAAhP,EAAAgP,MAAAwQ,EAAAxf,EAAAwf,OAAAP,EAAAjf,EAAAif,OACA7O,EAAApB,EAAAoB,QACAgP,EAAqBvjB,OAAA4jB,EAAA,EAAA5jB,CAAmBwjB,EAAArQ,GACxC,OACAU,KAAA,CACA0P,EAAA1P,KACAV,EAAA4E,MAAAgI,OACA,CACAjM,gBAAAS,EAAAsP,mBACA3kB,IAAA,EACAK,MAAA,EACAC,OAAA,EACAP,KAAA,EACA+f,SAAA,WACA/K,WAAA/P,EAAA,GACAA,EAAuBib,EAAA,GAAoB,CAC3CzK,OAAA,uBACA4K,QAAA,GAEApb,IAEAyf,GAAA,CACAG,WAAA,UAEAV,GAAA,CACAG,EAAAE,SACA,CACA3P,gBAAAS,EAAAwP,qBAGApJ,UCjCkDvX,EAAA,CAClD+d,MAAA,gDCDI6C,EAAa,SAAAxgB,GAEjB,SAAAygB,IACA,IAAAxgB,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAuCA,OAtCA6D,EAAAygB,MAAsB1f,EAAA,YACtBf,EAAA0gB,gBAAA,SAAAtjB,GACA4C,EAAAU,MAAAigB,gBACA3gB,EAAAU,MAAAigB,eAAAvjB,GAEAA,EAAAyE,SAAAzE,EAAAwjB,gBAGA5gB,EAAA6gB,oCAAAzjB,EAAAyE,SAGA7B,EAAA8gB,mBAAA,SAAA1jB,GAKA,GAJA4C,EAAAU,MAAAqgB,WACA/gB,EAAAU,MAAAqgB,UAAA3jB,IAGAA,EAAA4jB,sBAGA5jB,EAAA6jB,QAA6B/X,EAAA,EAAQgY,KAGrClhB,EAAAygB,MAAA/G,QAAA,CAGA,IAAAyH,EAAsC5kB,OAAAgO,EAAA,EAAAhO,CAAgByD,EAAAygB,MAAA/G,QAAA1Z,EAAAygB,MAAA/G,QAAA0H,YAAA,GACtDC,EAAqC9kB,OAAAgO,EAAA,EAAAhO,CAAeyD,EAAAygB,MAAA/G,QAAA1Z,EAAAygB,MAAA/G,QAAA4H,WAAA,GACpDlkB,EAAAyR,UAAAsS,IAAA/jB,EAAAyE,QACgBtF,OAAAgO,EAAA,EAAAhO,CAAU8kB,GAC1BjkB,EAAA2R,iBACA3R,EAAAmkB,mBAEAnkB,EAAAyR,UAAAwS,IAAAjkB,EAAAyE,SACgBtF,OAAAgO,EAAA,EAAAhO,CAAU4kB,GAC1B/jB,EAAA2R,iBACA3R,EAAAmkB,qBAGAvhB,EAuHA,OAhKIO,EAAA,UAAiBigB,EAAAzgB,GA2CrBygB,EAAAvjB,UAAAgE,kBAAA,WACA9E,KAAAqlB,sBACArlB,KAAAslB,qBAAAtlB,KAAAuE,QAEA8f,EAAAvjB,UAAAwa,0BAAA,SAAAiK,GACA,IAAAC,EAAAD,EAAAC,wBACAA,GAAAxlB,KAAAylB,2CAAAD,IACAxlB,KAAAylB,yCAAAD,GAEAxlB,KAAAslB,qBAAAC,IAEAlB,EAAAvjB,UAAA4kB,mBAAA,SAAAC,GACA,IAAAC,OAAApiB,IAAAmiB,EAAAE,sBAAAF,EAAAE,qBACAC,OAAAtiB,IAAAxD,KAAAuE,MAAAshB,sBAAA7lB,KAAAuE,MAAAshB,sBACAD,GAAAE,EAEA9lB,KAAAqlB,sBAEAO,IAAAE,GAEA9lB,KAAA+lB,2BAGA1B,EAAAvjB,UAAAiH,qBAAA,WACA/H,KAAAC,QAAAc,UACAf,KAAA+lB,2BAEA1B,EAAAvjB,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAwW,EAAAzW,EAAAyW,UAAAW,EAAApX,EAAAoX,eACAgI,EAAuBtjB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAClD,OAAgBrK,EAAA,cAAmB,MAAQR,EAAA,SAAgB,GAAGsf,EAAA,CAAa3I,YAAAlW,IAAA7E,KAAAskB,MAAA1H,kBAAAlB,EAAAkJ,UAAA5kB,KAAA2kB,mBAAAH,eAAAxkB,KAAAukB,kBAAqJvkB,KAAAuE,MAAA+D,WAEhO+b,EAAAvjB,UAAAwc,MAAA,WACA,IAAAhZ,EAAAtE,KAAAuE,MAAAyhB,EAAA1hB,EAAA0hB,mCAAAC,EAAA3hB,EAAA2hB,uBACA,GAAAD,GACAhmB,KAAA0kB,qCACYtkB,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAskB,MAAA/G,QAAAvd,KAAA0kB,qCAEftkB,OAAAgO,EAAA,EAAAhO,CAAUJ,KAAA0kB,yCAJtB,CAOA,IACAwB,EADAC,EAAA,iBAAAF,WAEAjmB,KAAAskB,MAAA/G,UAEA2I,EADAC,EACAnmB,KAAAskB,MAAA/G,QAAA6I,cAAA,IAAAD,GAGuC/lB,OAAAgO,EAAA,EAAAhO,CAAcJ,KAAAskB,MAAA/G,QAAAvd,KAAAskB,MAAA/G,QAAA0H,YAAA,aAGrDiB,GACY9lB,OAAAgO,EAAA,EAAAhO,CAAU8lB,KAGtB7B,EAAAvjB,UAAAukB,oBAAA,WACA,IAAA/gB,EAAAtE,KAAAuE,MAAAihB,EAAAlhB,EAAAkhB,wBAAA5a,EAAAtG,EAAA+hB,yBAAA,IAAAzb,KACAyZ,EAAAiC,YAAApjB,KAAAlD,MACAA,KAAAylB,yCAAAD,GAEA/kB,SAAA8lB,cACanmB,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAskB,MAAA/G,QAAAvd,KAAAylB,2CAAAY,GAC5BrmB,KAAAsd,SAGA+G,EAAAvjB,UAAAilB,wBAAA,WACA,IAAAliB,EAAA7D,KACAwmB,EAAAxmB,KAAAuE,MAAAiiB,uBACAnC,EAAAiC,YAAAjC,EAAAiC,YAAAG,OAAA,SAAA3gB,GACA,OAAAjC,IAAAiC,IAEA,IAAAygB,EAAA9lB,SAAA8lB,cACAC,IACAxmB,KAAAylB,0CACA,mBAAAzlB,KAAAylB,yCAAAnI,QACald,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAskB,MAAA/G,QAAAgJ,QAAA9lB,SAAAC,MAChBN,OAAAgO,EAAA,EAAAhO,CAAUJ,KAAAylB,2CAGtBpB,EAAAvjB,UAAAwkB,qBAAA,SAAA/J,GACA,IAAAjX,EAAAiX,EAAAmL,mCAAA,IAAApiB,KAAAsG,EAAA2Q,EAAAsK,4BAAA,IAAAjb,KACAib,IAAA7lB,KAAA2mB,iBACA3mB,KAAAC,QAAAU,GAAAvB,OAAA,QAAAY,KAAA4mB,mBAAA,IAEAf,GAAA7lB,KAAA2mB,kBACA3mB,KAAAC,QAAA4mB,IAAAznB,OAAA,QAAAY,KAAA4mB,mBAAA,GAEA5mB,KAAA2mB,iBAAAd,EACAa,GAAA1mB,KAAA8mB,iBAGAJ,GAAA1mB,KAAA8mB,kBACA9mB,KAAAC,QAAA4mB,IAAAznB,OAAA,QAAAY,KAAA+mB,mBAAA,GAHA/mB,KAAAC,QAAAU,GAAAvB,OAAA,QAAAY,KAAA+mB,mBAAA,GAKA/mB,KAAA8mB,kBAAAJ,GAEArC,EAAAvjB,UAAA8lB,kBAAA,SAAA3lB,GACA,GAAAojB,EAAAiC,YAAAjlB,QAAArB,OAAAqkB,EAAAiC,YAAAjC,EAAAiC,YAAAjlB,OAAA,IACA,IAAA2lB,EAAA/lB,EAAAgmB,eAAAxmB,SAAA8lB,cACiBnmB,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAskB,MAAA/G,QAAAyJ,KAChChnB,KAAAsd,QACArc,EAAA2R,iBACA3R,EAAAmkB,qBAIAf,EAAAvjB,UAAAimB,kBAAA,SAAA9lB,GACA,GAAAojB,EAAAiC,YAAAjlB,QAAArB,OAAAqkB,EAAAiC,YAAAjC,EAAAiC,YAAAjlB,OAAA,IACA,IAAA6lB,EAAAjmB,EAAAyE,OACAwhB,IAAmC9mB,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAskB,MAAA/G,QAAA2J,KAClDlnB,KAAAsd,QACArc,EAAA2R,iBACA3R,EAAAmkB,qBAIAf,EAAAiC,YAAA,GACAjC,EAjKiB,CAkKf9b,EAAA,IJpKF,SAAAga,GAUAA,IAAA,2BASAA,IAAA,iCASAA,IAAA,mCASAA,IAAA,mBASAA,IAAA,iBASAA,IAAA,2BAUAA,IAAA,2BAOAA,IAAA,mBAOAA,IAAA,2BA/EA,CAgFCA,MAAA,KKvED,ICsUI4E,EAAIC,GAAIC,GAAIC,GAAIC,GAAIC,GC3FpBC,GAAIC,GF3OJC,GAAgBvnB,OAAAgN,EAAA,EAAAhN,GAChBwnB,GAAS,SAAAhkB,GAEb,SAAAikB,EAAAtjB,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAqGA,OApGA6D,EAAAikB,OAAuBljB,EAAA,YACvBf,EAAAkkB,QAAA,SAAA9mB,GACA4C,EAAAG,MAAAgkB,SACAnkB,EAAAU,MAAA0jB,WACApkB,EAAAU,MAAA0jB,UAAAhnB,KAEAA,SAAAoR,mBACAxO,EAAAqB,SAAA,CACA8iB,QAAA,EACAE,aAAA,GACqB,WACrBrkB,EAAAskB,OAAAnmB,WAAA6B,EAAAukB,sBAAA,SAMAvkB,EAAAwkB,oBAAA,SAAAC,GACAA,EACgBloB,OAAAC,EAAA,EAAAD,CAAoBkoB,EAAAzkB,EAAA5D,SAGpC4D,EAAA5D,QAAA4mB,IAAAhjB,EAAA0kB,oBAEA1kB,EAAA0kB,mBAAAD,GAEAzkB,EAAA2kB,oBAAA,SAAAjkB,GACA,IAAAD,EAAAT,EAAAU,MAAAkkB,iCAAA,IAAAnkB,EAAAT,EAAA6kB,2BAAApkB,EACA,OAAmBM,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAA2N,YAA0CF,EAAAlkB,EAAAV,EAAA6kB,8BAEzF7kB,EAAA6kB,2BAAA,SAAAnkB,GACA,IAAAqkB,EAAArkB,EAAAqkB,qBAAAC,EAAAtkB,EAAAskB,eACAtV,EAAwBnT,OAAA0oB,EAAA,EAAA1oB,GACxB,OAAAyoB,EAKwBjkB,EAAA,cAAoBmkB,EAAA,EAG5C,CAGArQ,OAAA,CACAzE,KAAA,CACAxU,OAAA,OACAF,MAAA,OACA4U,MAAAZ,EAAAoB,QAAAsL,iBACAoB,SAAsClJ,EAAA,EAAajH,OAEnDkD,YAAA,CACAD,MAAAZ,EAAAoB,QAAAe,iBAEqBqF,UAAAlX,EAAAmX,YAAAgO,YAAA5W,QAAAvO,EAAAolB,cAAAxN,UAAAmN,EAAAM,mBAAA,EAAAC,UAAA,CAAgJ/L,SAAA,YAErK,MAEAvZ,EAAAulB,gBAAA,SAAA7kB,EAAA8kB,EAAAC,GACA,IAAAC,EAAAhlB,EAAAglB,WACA,OAAAA,EACwB3kB,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAAwO,QAChC5kB,EAAA,cAAmB,KAAOmW,UAAAlX,EAAAmX,YAAAuO,WAAAnO,GAAAkO,EAAAG,KAAA,UAAAC,aAAA,GAA8FH,IAE5I,MAEA1lB,EAAA8lB,cAAA,SAAAplB,GACA,OAAmBK,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAA2F,SAAuCpc,EAAA+D,WAEtFzE,EAAA+lB,gBAAA,SAAArlB,GACA,IAAAD,EAAAT,EAAAU,MAAAslB,6BAAA,IAAAvlB,EAAA,KAAAA,EACA,OAAAulB,EACwBjlB,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAA8O,QAChCllB,EAAA,cAAmB,OAASmW,UAAAlX,EAAAmX,YAAA+O,aAA2CF,MAE3F,MAEAhmB,EAAAolB,cAAA,SAAAhoB,GACA4C,EAAAkkB,QAAA9mB,IAEA4C,EAAAukB,sBAAA,WACAvkB,EAAAmmB,wBACAnmB,EAAAqB,SAAA,CACAgjB,aAAA,KAEArkB,EAAAG,MAAAgkB,QAAAnkB,EAAAU,MAAA0lB,aACApmB,EAAAU,MAAA0lB,eAGApmB,EAAAqmB,kBAAA,CACA1D,uBAAA,qBACAX,qBAAA,qBACAI,uBAAA,uBAEApiB,EAAAG,MAAA,CACAmmB,gBAAA,EACAnC,QAAA,EACAE,aAAA,EACA9M,GAAgBhb,OAAA0O,EAAA,EAAA1O,CAAK,UAErByD,EAuHA,OA9NIO,EAAA,UAAiByjB,EAAAjkB,GAyGrBikB,EAAA/mB,UAAAgE,kBAAA,WACA9E,KAAAC,QAAAU,GAAAvB,OAAA,SAAAY,KAAAgqB,uBACAhqB,KAAAoqB,2BAAApqB,KAAAuE,QACAvE,KAAAC,QAAAU,GAAAF,SAAAC,KAAA,YAAAV,KAAAqqB,sBAAA,GAEArqB,KAAAuE,MAAAyjB,QACAhoB,KAAAsqB,QAGAzC,EAAA/mB,UAAA4kB,mBAAA,SAAA6E,GACA,IAAAC,EAAAxqB,KAAAoqB,2BAAApqB,KAAAuE,OACAkmB,EAAAzqB,KAAAoqB,2BAAAG,GACAC,IAAAC,EACAzqB,KAAAC,QAAAU,GAAAF,SAAAC,KAAA,YAAAV,KAAAqqB,sBAAA,IAEAG,GAAAC,GACAzqB,KAAAC,QAAA4mB,IAAApmB,SAAAC,KAAA,YAAAV,KAAAqqB,sBAAA,IAGAxC,EAAA/mB,UAAAwa,0BAAA,SAAAC,GACAA,EAAAyM,SAAAhoB,KAAAgE,MAAAgkB,SACAzM,EAAAyM,OACAhoB,KAAAsqB,OAGAtqB,KAAA+nB,YAIAF,EAAA/mB,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAqG,EAAAtG,EAAAyW,iBAAA,IAAAnQ,EAAA,GAAAA,EAAA4a,EAAAlhB,EAAAkhB,wBAAAS,EAAA3hB,EAAA2hB,uBAAAyE,EAAApmB,EAAAomB,mBAAA7E,EAAAvhB,EAAAuhB,qBAAAgD,EAAAvkB,EAAAukB,eAAAU,EAAAjlB,EAAAilB,WAAA/V,EAAAlP,EAAAqmB,uBAAA,IAAAnX,EAAA,GAAAA,EAAAgT,EAAAliB,EAAAkiB,uBAAAoE,EAAAtmB,EAAAsmB,WAAAC,EAAAvmB,EAAAumB,iBAAAC,EAAAxmB,EAAAwmB,eAAAC,EAAAzmB,EAAAymB,kBAAAC,EAAA1mB,EAAA0mB,WAAAzO,EAAAjY,EAAAiY,KAAA7D,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MAAA0X,EAAA3mB,EAAA2mB,YAAAhV,EAAA3R,EAAA4mB,2BAAA,IAAAjV,EAAAjW,KAAAipB,cAAAhT,EAAAC,EAAA5R,EAAA6mB,0BAAA,IAAAjV,EAAAlW,KAAAwoB,oBAAAtS,EAAAE,EAAA9R,EAAA8mB,sBAAA,IAAAhV,EAAApW,KAAAopB,gBAAAhT,EAAAqH,EAAAnZ,EAAA+mB,oBAAA,IAAA5N,EAAAzd,KAAA2pB,cAAAlM,EAAAC,EAAApZ,EAAAgnB,sBAAA,IAAA5N,EAAA1d,KAAA4pB,gBAAAlM,EACAC,EAAA3d,KAAAgE,MAAAmmB,EAAAxM,EAAAwM,eAAAnC,EAAArK,EAAAqK,OAAAE,EAAAvK,EAAAuK,YAAA9M,EAAAuC,EAAAvC,GACAmQ,EAAAhP,IAA8BgG,EAASiJ,gBAAAjP,IAA4BgG,EAASkJ,WAE5EC,EADoBtrB,OAAA8O,EAAA,EAAA9O,GACpBmrB,KACAjC,EAAAC,GAAAnO,EAAA,cACAuQ,EAAApP,IAAyCgG,EAASqJ,QAAArP,IAAoBgG,EAASkJ,WAAA,CAAelsB,MAAA0rB,GAAqB,GACnHY,EAA0BzrB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GACrD,IAAA+Y,IAAAE,IAAA6C,EACA,YAEA/qB,KAAAgb,YAA2B2M,GAAajP,EAAA,CACxCnF,QACAwH,YACA+Q,uBAAApB,IAAA3P,eAAAvX,EACAqlB,iBACA8B,kBACAzC,cACA2C,mBACAV,iBACAuB,gBACA1D,SACA+C,oBACAxO,SAEA,IACAwP,EADA/Q,EAAAhb,KAAAgb,YAEA4P,GAAA5C,IACA+D,EAAsBnnB,EAAA,cAAoBkf,EAAO,CAAG/I,UAAAC,EAAA+Q,QAAAtI,cAAA,EAAArR,QAAA0Y,EAAAI,OAAA1nB,KAEpD,IAAAgmB,EAAA4B,EAAAprB,KAAAuE,MAAAvE,KAAAopB,gBAAAE,GACA,OAAgB1kB,EAAA,cAAoBonB,EAAA,EAAO5nB,EAAA,SAAgB,GAAG4mB,GAClDpmB,EAAA,cAAoBqnB,EAAA,EAAK,CAAGxC,KAAA,SAAAyC,aAAA,OAAAxQ,eAAA8N,EAAAF,OAAA9lB,EAAAykB,UAAAjoB,KAAA+nB,QAAAhN,UAAAC,EAAAmR,aACxBvnB,EAAA,cAAmB,MAAQR,EAAA,SAAgB,CAAEgoB,eAAApE,GAAAE,GAAwC2D,EAAA,CAAgBhnB,IAAA7E,KAAA8nB,OAAA/M,UAAAC,EAAA/G,OACrH8X,EACoBnnB,EAAA,cAAoBwf,EAAehgB,EAAA,SAAgB,CAAEoiB,yBAAAX,uBAAAkF,IAAA/C,IAAAnC,EAAAI,yBAAAS,6BAAA,GAAuNgE,EAAA,CAAuB3P,UAAAC,EAAAqR,KAAAC,MAAAX,EAAAnG,4BAC/R5gB,EAAA,cAAmB,OAASmW,UAAAC,EAAAuR,SAAArD,mBAAA,GAA2DiC,EAAAnrB,KAAAuE,MAAAvE,KAAAwoB,sBACvF5jB,EAAA,cAAmB,OAASmW,UAAAC,EAAAwR,cACpDhD,EAC4B5kB,EAAA,cAAmB,OAASC,IAAA7E,KAAAqoB,oBAAAtN,UAAAC,EAAAyR,kBAAAC,sBAAA,GAAsGrB,EAAArrB,KAAAuE,MAAAvE,KAAA2pB,gBAC9J2B,EAAAtrB,KAAAuE,MAAAvE,KAAA4pB,uBAEA/B,EAAA/mB,UAAAwpB,KAAA,WACA,IAAAzmB,EAAA7D,KACAA,KAAAgE,MAAAgkB,QACAhoB,KAAAkF,SAAA,CACA8iB,QAAA,EACAE,aAAA,GACa,WACbrkB,EAAAskB,OAAAnmB,WAAA6B,EAAAukB,sBAAA,QAIAP,EAAA/mB,UAAAspB,2BAAA,SAAA7lB,GACA,QAAAA,EAAAqmB,cAAArmB,EAAAyjB,QAEAH,EAAA/mB,UAAAkpB,sBAAA,WACA,IAAAyC,EAAAzsB,KAAAuoB,mBACA,GAAAkE,EAAA,CACA,IAAAhtB,EAAAgtB,EAAApV,aACAsV,EAAAF,EAAAnV,aACAtX,KAAAkF,SAAA,CACAilB,eAAA1qB,EAAAktB,MAIA9E,EAAA/mB,UAAAupB,qBAAA,SAAAppB,GACA,IAAA2rB,EAAA5sB,KAAA8nB,OAAAvK,QACAvd,KAAAgE,MAAAgkB,QAAA4E,IACiBxsB,OAAAqN,EAAA,EAAArN,CAAewsB,EAAA3rB,EAAAyE,UAChC1F,KAAAuE,MAAAsoB,cACA7sB,KAAAuE,MAAAsoB,eACA5rB,EAAA2R,kBAGA5S,KAAA+nB,aAKAF,EAAAnR,aAAA,CACAqU,mBAAA,EACA/C,QAAA,EACA4C,YAAA,EACA/B,gBAAA,EACAtM,KAAcgG,EAASuK,eAEvBjF,EA/Na,CAgOXtf,EAAA,iCCrOEwkB,GAAgB,CACpB9Y,KAAA,WACAoY,KAAA,gBACAE,SAAA,oBACAC,aAAA,wBACAC,kBAAA,6BACA9D,WAAA,sBACAK,YAAA,4CACAQ,OAAA,kBACAD,WAAA,sBACA5I,QAAA,mBACAmJ,OAAA,kBACAC,YAAA,uBACA/B,OAAA,UACAa,eAAA,2BACAmE,WAAA,oBACAxB,eAAA,mBACAsB,cAAA,eACA3M,OAAA,eACAjP,MAAA,eACA+b,WAAA,kBACAC,WAAA,eACAtB,OAAA,mBACAH,WAAA,wBAEA0B,GACA,OADAA,GAEA,OAFAA,GAGA,IAHAA,GAIA,IAJAA,GAKA,IALAA,GAMA,IANAA,GAOA,IAEAC,GACA,OADAA,GAEA,EAFAA,GAGA,GAHAA,GAIA,IAJAA,GAKA,IAIAC,KAA2BlG,EAAE,IACvB,sBAAyB5H,EAAA,EAAoB,QACnDhgB,MAAA4tB,IAEIhG,GACJmG,KAA4BlG,GAAE,IACxB,sBAAyB7H,EAAA,EAAmB,QAClDhgB,MAAA4tB,IAEI/F,GAAE,sBAAyB7H,EAAA,EAAoB,QACnDhgB,MAAA4tB,IAEI/F,IACJmG,KAA2BlG,GAAE,IACvB,sBAAyB9H,EAAA,EAAuB,QACtDlgB,KAAA+tB,GACA7tB,MAAA4tB,IAEI9F,GAAE,sBAAyB9H,EAAA,EAAqB,QACpDlgB,KAAA+tB,IAEI/F,IACJmG,KAAgClG,GAAE,IAC5B,sBAAyB/H,EAAA,EAAqB,QACpDlgB,KAAA+tB,GACA7tB,MAAA4tB,IAEI7F,IACJmG,KAAgClG,GAAE,IAC5B,sBAAyBhI,EAAA,EAAqB,QACpDlgB,KAAA+tB,IAEI7F,IAGJmG,GAAA,SAAAnR,GACA,IAAAlI,EAIA,OAAAkI,GACA,KAAagG,EAASuK,cACtBzY,EAAwBjQ,EAAA,SAAgB,GAAGipB,IAC3C,MACA,KAAa9K,EAASpC,OACtB9L,EAAwBjQ,EAAA,SAAgB,GAAGipB,GAAAC,IAC3C,MACA,KAAa/K,EAASrR,MACtBmD,EAAwBjQ,EAAA,SAAgB,GAAGipB,GAAAC,GAAAC,IAC3C,MACA,KAAahL,EAAS0K,WACtB5Y,EAAwBjQ,EAAA,SAAgB,GAAGipB,GAAAC,GAAAC,GAAAC,IAC3C,MACA,KAAajL,EAAS2K,WACtB7Y,EAAwBjQ,EAAA,SAAgB,GAAGipB,GAAAC,GAAAC,GAAAE,IAK3C,OAAApZ,GAGAsZ,GAAA,CACAC,YAAA,OACAC,aAAA,OACAxZ,WAAgBmT,GAAE,GACVA,GAAE,iCAAoCjI,EAAA,EAAmB,QACjEqO,YAAA,OACAC,aAAA,QAEQrG,GAAE,iCAAoCjI,EAAA,EAAqB,QACnEqO,YAAA,OACAC,aAAA,QAEQrG,KErHDsG,GAAY1tB,OAAA+O,EAAA,EAAA/O,CAAOwnB,GFsIN,SAAArjB,GACpB,IAiMAqG,EAAA4I,EAAAyC,EAAAC,EAAAE,EAAAqH,EAjMA1C,EAAAxW,EAAAwW,UAAA+Q,EAAAvnB,EAAAunB,uBAAAjD,EAAAtkB,EAAAskB,eAAA8B,EAAApmB,EAAAomB,gBAAAzC,EAAA3jB,EAAA2jB,YAAA2C,EAAAtmB,EAAAsmB,iBAAAV,EAAA5lB,EAAA4lB,eAAAuB,EAAAnnB,EAAAmnB,cAAA1D,EAAAzjB,EAAAyjB,OAAA+C,EAAAxmB,EAAAwmB,kBAAAxX,EAAAhP,EAAAgP,MAAAjP,EAAAC,EAAAgY,YAAA,IAAAjY,EAAqcie,EAASuK,cAAAxoB,EAC9cqQ,EAAApB,EAAAoB,QACAgP,EAAqBvjB,OAAA4jB,EAAA,EAAA5jB,CAAoB2sB,GAAgBxZ,GACzDwa,EAAAxR,IAAiCgG,EAASqJ,QAAArP,IAAoBgG,EAASkJ,WACvEuC,EAAA,oBAAA5uB,cAAAM,YAAA,OACA,OACAuU,KAAA,CACA0P,EAAA1P,KACAV,EAAA4E,MAAAgI,OACA6H,GAAArE,EAAAqE,OACAa,GAAAlF,EAAAkF,eACA,CACAjI,cAAA,OACAxB,SAAA,WACA9f,IAAA,EACAD,KAAA,EACAM,MAAA,EACAC,OAAA,GAEAmuB,GAAArC,GAAA/H,EAAAiI,OACAmC,IAAArC,GAAA/H,EAAA8H,WACA1Q,GAEAgR,QAAA,CACA,CACAnL,cAAA,OACAP,OAAA,WAEA2H,GAAAE,GAAqC+F,GAAA,EAAmBC,WACxDlG,GAAAE,GAAsC+F,GAAA,EAAmBE,YAEzDhC,YAAA,EACAnE,IACAE,GACA6C,GAAA,CACA7G,WAAA,WAGAmI,KAAA,CACA1I,EAAA0I,KACA,CACAnY,gBAAAS,EAAAK,MACAqE,UAAA,mCACAuH,cAAA,OACAxB,SAAA,WACAC,QAAA,OACAmB,cAAA,SACA4N,UAAA,SACAC,UAAA,OACAC,wBAAA,QACAC,UAAA,OACA3uB,OAAA,EACAN,IAAA,EAEAD,KAAA+tB,GACAztB,MAAAytB,GACA7tB,MAAA4tB,GACA9Y,UAA2BjQ,EAAA,UAAgBwG,EAAA,GAASA,EAAA,kDACpD2jB,UAAAP,GACiBpjB,GAAA8iB,GAAAnR,KAEjBA,IAAqBgG,EAASyK,YAAA,CAC9B3tB,KAAA+tB,IAEA7Q,IAAqBgG,EAASiJ,gBAAA,CAC9BnsB,KAAA+tB,GACAztB,MAAAytB,GACA7tB,MAAA4tB,IAEA5Q,IAAqBgG,EAASkJ,YAAA,CAC9B9rB,MAAA,OACAN,KAAA,GAEA0uB,GAAA,CACAS,SAAA,SAEA3D,GAAA,CACAprB,OAAA,OACA4U,WAAAb,EAAA,GACAA,EAAA,kDACA/T,OAAAuuB,GAEAxa,IAEAwU,GAAAE,IAAAwD,GAAuDuC,GAAA,EAAmBQ,eAC1EzG,GAAAE,GAAAwD,GAAsDuC,GAAA,EAAmBS,eACzE1G,GAAAE,IAAAwD,GAAwDuC,GAAA,EAAmBU,gBAC3E3G,GAAAE,GAAAwD,GAAuDuC,GAAA,EAAmBW,gBAC1E9C,GAEAS,SAAA,CAAA5I,EAAA4I,UACA5D,WAAA,CACAhF,EAAAgF,WACA,CACApP,QAAA,QACA9Z,OA9HA,OA+HA4f,QAAA,OACAoB,eAAA,aAGAuI,YAAA,CAAArF,EAAAqF,aACAwD,aAAA,CACA7I,EAAA6I,aACA,CACAnN,QAAA,OACAmB,cAAA,SACA4B,SAAA,EACAmM,UAAA,OACAF,UAAA,SACAha,WAAA4B,EAAA,GACAA,EAAA,kDACAsY,UAAAP,GAEA/X,IAEA4U,GAAA,CACAprB,OAAA,OACA4U,WAAA6B,EAAA,GACAA,EAAA,kDACAzW,OAAAuuB,GAEA9X,KAGAsT,OAAA,CACA7F,EAAA6F,OACAmE,GACA,CACArU,OAAA,SAEA8I,SAAA,EACA/N,WAAA+B,EAAA,GACAA,EAAA,sBAA+CmJ,EAAA,EAAoB,QACnEsP,UAAA,QAEAzY,KAGAmT,WAAA,CACA5F,EAAA4F,WACYuF,GAAA,EAAiBC,OAC7B,CACA5a,MAAAQ,EAAAe,eACA4L,WAAA,OACAhI,OAAA,GAEAqR,GAEA8B,kBAAA,CACA9I,EAAA8I,kBACA,CACA4B,UAAA,OACA5uB,OAAA,OACA4U,WAAAoJ,EAAA,GACAA,EAAA,kDACAhe,OAAAuuB,GAEAvQ,KAGAkD,QAAA,CACAgD,EAAAhD,QACAgN,GACA,CACAqB,aAAA,EACAC,cAAA,KAGAnF,OAAA,CACAnG,EAAAmG,OACA,CAEA1H,SAAA,EACA8M,UAAA,wBACAC,WAAA,WAAyCC,GAAA,EAAkBC,eAAA,IAAwBD,GAAA,EAAkBE,eAErGnF,GAAA,CACAxK,WAAAhL,EAAAK,MACAua,eAAA5a,EAAAC,eAGAmV,YAAA,CACApG,EAAAoG,YACA4D,GACA,CACAsB,cAAA,OACAO,WAAA,gBEjU8ChsB,EAAA,CAC9C+d,MAAA,oBCSIkO,GAAgBrvB,OAAAgN,EAAA,EAAAhN,GAChBsvB,GAAY,SAAA9rB,GAEhB,SAAA+rB,EAAAprB,GACA,IAoYAqrB,EApYA/rB,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAqYA,GApYA6D,EAAAgsB,MAAsBjrB,EAAA,YACtBf,EAAAisB,WAA2BlrB,EAAA,YAC3Bf,EAAAksB,UAA0BnrB,EAAA,YAC1Bf,EAAAmsB,iBAAA,IACAnsB,EAAAosB,cAAA,IAAkCzN,EAElC3e,EAAAqsB,eAAA,SAAAtnB,GACA,IAAAtE,EAAAT,EAAAU,MAAA4rB,4BAAA,IAAA7rB,EAAA,KAAAA,EACA8rB,EAAAxnB,EAAAynB,IAAA,SAAA1nB,GAAoD,OAAAA,EAAAsS,OAAiBqV,KAAAH,GACrE,OAAmBvrB,EAAA,cAAmB,YAAAwrB,IAGtCvsB,EAAA0sB,qBAAA,SAAAhsB,GACA,OAAAV,EAAA2sB,aAGmB5rB,EAAA,cAAmB,YAAAf,EAAA2sB,cAFtC,MAKA3sB,EAAA4sB,mBAAA,SAAAlsB,GACA,IAAAD,EAAAT,EAAAU,MAAA6L,EAAA9L,EAAA8L,eAAAsgB,EAAApsB,EAAAosB,aAAAC,EAAArsB,EAAAqsB,WAAAC,EAAAtsB,EAAAssB,cACAC,EAAAzgB,GAA4CC,GAAA,EAAc8P,OAC1D2Q,EAAAjtB,EAAAmX,YAAA+V,mBACAltB,EAAAmX,YAAA+V,mBAAAnE,WACAppB,EACA,OAAAqtB,EAA8BjsB,EAAA,cAAoBkpB,GAAO1pB,EAAA,SAAgB,CAAE4jB,QAAA,EAAA8C,gBAAA,EAAAb,YAAApmB,EAAAmtB,WAAAnI,gBAAA,EAAAnQ,OAAAoY,GAAgHH,GAAA9sB,EAAAotB,qBAAA1sB,IAAsDK,EAAA,cAAoBssB,EAAA,EAAS9sB,EAAA,SAAgB,CAAE+sB,eAAA,EAAAC,SAAA,EAAAC,YAAA,EAAAC,sBAAA,EAAAC,gBAAqGC,EAAA,EAAeC,gBAAiBf,EAAA,CAAiB3V,UAAAlX,EAAAmX,YAAA0W,QAAAhsB,OAAA7B,EAAAksB,UAAAxS,QAAA0K,UAAApkB,EAAAmtB,WAAAW,SAAA9tB,EAAA+tB,UAAAC,aAAAhuB,EAAAiuB,cAAAC,aAAAnB,IAAA/sB,EAAAksB,UAAAxS,QAAA1Z,EAAAksB,UAAAxS,QAAArG,YAAA,KAAuQrT,EAAAotB,qBAAA1sB,KAG7rBV,EAAAmuB,mBAAA,SAAAztB,GACA,OAAmBK,EAAA,cAAoBuY,EAAA,EAAI,CAAGpC,UAAAlX,EAAAmX,YAAAiX,UAAA7U,SAAA,iBAG9CvZ,EAAAquB,cAAA,SAAA3tB,GACA,IAAAD,EAAAT,EAAAU,MAAA4tB,oBAAA,IAAA7tB,EAAAT,EAAAuuB,cAAA9tB,EACA,OAAmBM,EAAA,cAAoBA,EAAA,SAAc,KAAAf,EAAAU,MAAAb,QAAA2sB,IAAA,SAAAznB,EAAAua,GAAwD,OAAAgP,EAAqB/tB,EAAA,SAAgB,GAAGwE,EAAA,CAASua,UAAetf,EAAAuuB,mBAE7KvuB,EAAAuuB,cAAA,SAAAxpB,GACA,OAAAA,EAAAka,UACA,KAAqB/I,EAA4BgJ,QACjD,OAAAlf,EAAAwuB,iBAAAzpB,GACA,KAAqBmR,EAA4BiJ,OACjD,OAAAnf,EAAAyuB,cAAA1pB,GACA,QACA,OAAA/E,EAAA0uB,cAAA3pB,KAGA/E,EAAA0uB,cAAA,SAAA3pB,GACA,IAAAtE,EAAAT,EAAAU,MAAAiuB,sBAAA,IAAAluB,EAAAT,EAAA4uB,gBAAAnuB,EACAsG,EAAA/G,EAAAG,MAAA4rB,uBAAA,IAAAhlB,EAAA,GAAAA,EACAwQ,EAAAvX,EAAAsX,IACAuX,SAAAlvB,IAAAoF,EAAAua,QAAAyM,MAAA+C,QAAA/pB,EAAAua,QAAA,EAEAyP,EAAAF,IAAA,IAAA9pB,EAAA8R,SACA7W,EAAAmX,YAAA6X,gCACAH,EACA7uB,EAAAmX,YAAA8X,sBACA,IAAAlqB,EAAA8R,SACA7W,EAAAmX,YAAA+X,qBACAlvB,EAAAmX,YAAAgY,aACA,OAAAnvB,EAAAU,MAAA0uB,YAA8nBruB,EAAA,cAAoB4Y,EAAQ,CAAGpC,KAAA,QAAAxS,EAAAua,MAAAxd,IAAAiD,EAAAjD,IAAAutB,aAAAtqB,EAAAua,MAAAgQ,qBAAAvqB,EAAA8R,kBAAA9R,EAAA8R,SAAAC,SAAA9W,EAAAuvB,aAAAxqB,GAAAyR,WAAA,CAC7pBgZ,aAAAxvB,EAAAyvB,kBAAA/yB,KAAAsD,EAAA+E,GACA2qB,aAAA1vB,EAAA2vB,kBAAAjzB,KAAAsD,EAAA+E,GACA6qB,YAAA5vB,EAAA6vB,iBAAAnzB,KAAAsD,EAAA+E,IACiBqP,MAAArP,EAAAqS,KAAAgB,MAAArT,EAAAqT,MAAArT,EAAAqT,MAAArT,EAAAqS,KAAAW,cAAA/X,EAAAiX,eAAAva,KAAAsD,EAAA+E,GAAAmS,UAAA6X,EAAAnJ,KAAA,SAAAkK,gBAAAjB,EAAA,eAAA7X,QAAA6X,IAJ8B9tB,EAAA,cAAoByd,EAAa,CAAGjH,KAAA,QAAAxS,EAAAua,MAAAxd,IAAAiD,EAAAjD,IAAAutB,aAAAtqB,EAAAua,MAAAgQ,qBAAAvqB,EAAA8R,kBAAA9R,EAAA8R,SAAAK,UAAA6X,EAAAxgB,QAAAvO,EAAAuvB,aAAAxqB,GAAAyqB,aAAAxvB,EAAAyvB,kBAAA/yB,KAAAsD,EAAA+E,GAAA2qB,aAAA1vB,EAAA2vB,kBAAAjzB,KAAAsD,EAAA+E,GAAA6qB,YAAA5vB,EAAA6vB,iBAAAnzB,KAAAsD,EAAA+E,GAAA6gB,KAAA,SAAAkK,gBAAAjB,EAAA,eAAAjX,UAAA7S,EAAA6S,UAAAQ,MAAArT,EAAAqT,MAAArT,EAAAqT,MAAArT,EAAAqS,MAAwfuX,EAAA5pB,EAAA/E,EAAA4uB,mBAO3kB5uB,EAAA4uB,gBAAA,SAAA7pB,GACA,OAAmBhE,EAAA,cAAmB,QAAUmW,UAAAlX,EAAAmX,YAAA4Y,oBAAkDhrB,EAAAqS,OAGlGpX,EAAAiX,eAAA,SAAAlS,GACA,IAAAtE,EAAAT,EAAAU,MAAAiuB,eACA,YADA,IAAAluB,EAAAT,EAAA4uB,gBAAAnuB,GACAsE,EAAA/E,EAAA4uB,kBAEA5uB,EAAAiuB,cAAA,SAAA+B,GACAhwB,EAAAisB,WAAAvS,SAGA1Z,EAAAskB,OAAA2L,sBAAA,WACA,IAAAlE,EAAA/rB,EAAAG,MAAA4rB,gBACA,GAAAA,KAAA,KAAA/rB,EAAAU,MAAAb,QAAAksB,EAAA,IAAAlV,SAAA,CACA,IAAAxb,EAAsCkB,OAAAoN,EAAA,EAAApN,GAAWgmB,cAAA,IAAAviB,EAAAsX,IAAA,QAAAyU,EAAA,IACjD/rB,EAAAisB,WAAAvS,QAAAwW,aAAA70B,QAGA2E,EAAAisB,WAAAvS,QAAAD,UAIAzZ,EAAAG,MAAAgwB,mBAAAnwB,EAAAG,MAAAgwB,oBAAAH,EAAAI,YACApwB,EAAAqB,SAAA,CACA8uB,kBAAAH,EAAAI,cAIApwB,EAAAuvB,aAAA,SAAAxqB,GACA,gBAAAsJ,GACAtJ,EAAA8R,WACA7W,EAAAqwB,iBAAAhiB,EAAAtJ,EAAAua,OACAtf,EAAAU,MAAA0uB,aAEApvB,EAAAqB,SAAA,CACA8iB,QAAA,OAUAnkB,EAAA+tB,UAAA,WACA/tB,EAAAswB,oBAAA3wB,IAAAK,EAAAuwB,qBAKAvwB,EAAAswB,eAAA,GAJAtwB,EAAAskB,OAAAlmB,aAAA4B,EAAAuwB,sBACAvwB,EAAAuwB,0BAAA5wB,GAKAK,EAAAuwB,qBAAAvwB,EAAAskB,OAAAnmB,WAAA,WACA6B,EAAAswB,eAAA,GACatwB,EAAAmsB,mBAEbnsB,EAAA2vB,kBAAA,SAAA5qB,EAAA3H,GACA,IAAA4C,EAAAwwB,2BAQAxwB,EAAAgsB,MAAAtS,QACA,GAAA1Z,EAAAgsB,MAAAtS,QAAA+W,UACA,IACAzwB,EAAAgsB,MAAAtS,QAAA+W,YAEA,MAAArjB,SAKApN,EAAAgsB,MAAAtS,QAAAD,SAIAzZ,EAAAmtB,WAAA,WACAntB,EAAAqB,SAAA,CAA4B8iB,QAAA,IAC5BnkB,EAAAksB,UAAAxS,SACA1Z,EAAAksB,UAAAxS,QAAAD,SAGAzZ,EAAA0wB,gBAAA,SAAAtzB,GAEA4C,EAAA2wB,gBAKA3wB,EAAAqB,SAAA,CAA4BuvB,UAAA,IAC5B5wB,EAAAG,MAAAgkB,QAIAnkB,EAAAU,MAAAiW,QACA3W,EAAAU,MAAAiW,OAAAvZ,KAGA4C,EAAA6wB,mBAAA,SAAAzzB,GAGA,IADA4C,EAAA2wB,gBAMA3wB,EAAA8wB,yBAAA9wB,EAAA+wB,aAAA3zB,IACA4C,EAAAU,MAAAqgB,YACA/gB,EAAAU,MAAAqgB,UAAA3jB,IACAA,EAAAoR,mBAFA,CAMA,IAAAwiB,EACAC,EAAAjxB,EAAAG,MAAA4rB,gBAAAvuB,OAAAwC,EAAAG,MAAA4rB,gBAAA,MACAmF,EAAA9zB,EAAAuR,QAAAvR,EAAAsR,QACAyV,EAAAnkB,EAAAG,MAAAgkB,OACA,OAAA/mB,EAAA6jB,OACA,KAAqB/X,EAAA,EAAQioB,MAC7BnxB,EAAAqB,SAAA,CACA8iB,YAEA,MACA,KAAqBjb,EAAA,EAAQkoB,OAC7B,IAAAjN,EACA,OAEAnkB,EAAAqB,SAAA,CACA8iB,QAAA,IAEA,MACA,KAAqBjb,EAAA,EAAQmoB,GAC7B,GAAAH,EAAA,CACA,GAAA/M,EAAA,CACAnkB,EAAAqB,SAAA,CAA4C8iB,QAAA,IAC5C,MAEA,OAEAnkB,EAAAU,MAAA0uB,YACApvB,EAAAqB,SAAA,CAAwC8iB,QAAA,IAExCnkB,EAAA2wB,gBACAK,EAAAhxB,EAAAsxB,WAAAl0B,GAAA,EAAA6zB,EAAA,EAAAA,IAEA,MACA,KAAqB/nB,EAAA,EAAQqoB,KAC7BL,IACA9zB,EAAAmkB,kBACAnkB,EAAA2R,kBAEAmiB,IAAA/M,GAAAnkB,EAAAU,MAAA0uB,YACApvB,EAAAqB,SAAA,CAAwC8iB,QAAA,IAExCnkB,EAAA2wB,gBACAK,EAAAhxB,EAAAsxB,WAAAl0B,EAAA,EAAA6zB,EAAA,EAAAA,IAEA,MACA,KAAqB/nB,EAAA,EAAQsoB,KAC7BxxB,EAAAU,MAAA0uB,cACA4B,EAAAhxB,EAAAsxB,WAAAl0B,EAAA,IAAA6zB,IAEA,MACA,KAAqB/nB,EAAA,EAAQpK,IAC7BkB,EAAAU,MAAA0uB,cACA4B,EAAAhxB,EAAAsxB,WAAAl0B,GAAA,EAAA4C,EAAAU,MAAAb,QAAArC,OAAA,EAAAyzB,IAEA,MACA,KAAqB/nB,EAAA,EAAQuoB,MAE7B,MACA,QACA,OAEAT,IAAAC,IACA7zB,EAAAmkB,kBACAnkB,EAAA2R,oBAGA/O,EAAA0xB,iBAAA,SAAAt0B,GAGA,IADA4C,EAAA2wB,cACA,CAGA,IAAAgB,EAAA3xB,EAAA4xB,mBAAAx0B,GACA+mB,EAAAnkB,EAAAG,MAAAgkB,OACA,IAAAnkB,EAAAU,MAAAmxB,UACA7xB,EAAAU,MAAAmxB,QAAAz0B,IACAA,EAAA2R,gBAFA,CAMA,OAAA3R,EAAA6jB,OACA,KAAqB/X,EAAA,EAAQuoB,MAC7BzxB,EAAAqB,SAAA,CACA8iB,YAEA,MACA,QAIA,YAHAwN,GAAAxN,GACAnkB,EAAAqB,SAAA,CAAwC8iB,QAAA,KAIxC/mB,EAAAmkB,kBACAnkB,EAAA2R,oBAEA/O,EAAA8xB,eAAA,SAAA10B,GACA,IAAA20B,EAGA/xB,EAAA8wB,yBAAA9wB,EAAA+wB,aAAA3zB,GACA,IAAA8zB,EAAA9zB,EAAAuR,QAAAvR,EAAAsR,QACA,OAAAtR,EAAA6jB,OACA,KAAqB/X,EAAA,EAAQmoB,GAC7BH,EACAlxB,EAAAqB,SAAA,CAAwC8iB,QAAA,IAGxCnkB,EAAAgsB,MAAAtS,UACAqY,EAA6Cx1B,OAAAgO,EAAA,EAAAhO,CAAgByD,EAAAgsB,MAAAtS,QAAA1Z,EAAAgsB,MAAAtS,QAAA4H,WAAA,IAG7D,MAGA,KAAqBpY,EAAA,EAAQsoB,KAC7B,KAAqBtoB,EAAA,EAAQpK,IAC7B,KAAqBoK,EAAA,EAAQ8oB,OAC7B,KAAqB9oB,EAAA,EAAQ+oB,SAC7B,MACA,KAAqB/oB,EAAA,EAAQqoB,MAC7BL,GAAAlxB,EAAAgsB,MAAAtS,UACAqY,EAAyCx1B,OAAAgO,EAAA,EAAAhO,CAAiByD,EAAAgsB,MAAAtS,QAAA1Z,EAAAgsB,MAAAtS,QAAA0H,YAAA,IAE1D,MACA,KAAqBlY,EAAA,EAAQkoB,OAC7BpxB,EAAAqB,SAAA,CAAoC8iB,QAAA,IACpC,MACA,KAAqBjb,EAAA,EAAQgY,IAE7B,YADAlhB,EAAAqB,SAAA,CAAoC8iB,QAAA,IAEpC,QACA,OAEA4N,GACAA,EAAAtY,QAEArc,EAAAmkB,kBACAnkB,EAAA2R,kBAEA/O,EAAAkyB,aAAA,SAAA90B,GACA4C,EAAA4xB,mBAAAx0B,IACA4C,EAAAG,MAAAgkB,SACAnkB,EAAAqB,SAAA,CAAgC8iB,QAAA,IAChC/mB,EAAA2R,mBAGA/O,EAAAmyB,iBAAA,SAAA/0B,GACA,IAAA4C,EAAAU,MAAA6N,UACAvO,EAAAU,MAAA6N,QAAAnR,IACAA,EAAA2R,gBAFA,CAMA,IAAAoV,EAAAnkB,EAAAG,MAAAgkB,OACAnkB,EAAA2wB,eAEA3wB,EAAAqB,SAAA,CACA8iB,cAIAnkB,EAAAuW,SAAA,SAAAnZ,GACA,IAAAqD,EAAAT,EAAAG,MAAAgkB,EAAA1jB,EAAA0jB,OAAA4H,EAAAtrB,EAAAsrB,gBACAqD,EAAApvB,EAAAU,MAAA0uB,YACApvB,EAAA2wB,gBAEAxM,GAAA,IAAA4H,EAAAvuB,QAAA4xB,GAEApvB,EAAAsxB,WAAAl0B,EAAA,QAEA4C,EAAAU,MAAA+V,SACAzW,EAAAU,MAAA+V,QAAArZ,GAEA4C,EAAAqB,SAAA,CAAgCuvB,UAAA,MAOhC5wB,EAAA2wB,YAAA,WACA,IAAA9Z,EAAA7W,EAAAU,MAAAmW,SACAub,EAAApyB,EAAAU,MAAA0xB,WAKA,YAHAzyB,IAAAyyB,IACAvb,EAAAub,GAEAvb,GAEA7W,EAAAqmB,kBAAA,CACA+L,WAAA,WACAC,UAAA,WACAC,YAAA,gBAEAtyB,EAAAqX,uBAAA,CACAkb,mBAAA,cACAC,oBAAA,eACAC,aAAA,cACArD,YAAA,qBACAsD,YAAA,gBAEA1yB,EAAAsX,IAAA5W,EAAA6W,IAAgChb,OAAA0O,EAAA,EAAA1O,CAAK,YACrCyD,EAAAswB,eAAA,EAEAtwB,EAAAU,MAAA0uB,YAAA,CACA,IAAAqD,OAAA9yB,IAAAe,EAAA8xB,oBAAA9xB,EAAA8xB,oBAAA9xB,EAAA+xB,aACA1G,EAAA/rB,EAAA2yB,oBAAAjyB,EAAAb,QAAA4yB,OAEA,CACA,IAAAC,OAAA/yB,IAAAe,EAAA6xB,mBAAA7xB,EAAA6xB,mBAAA7xB,EAAAgyB,YACA3G,EAAA/rB,EAAA2yB,oBAAAjyB,EAAAb,QAAA6yB,GACA1yB,EAAAosB,cAAAtN,cAAApe,EAAAb,SAQA,OANAG,EAAAG,MAAA,CACAgkB,QAAA,EACA4H,kBACA6E,UAAA,EACAT,uBAAAxwB,GAEAK,EAkUA,OAxtBIO,EAAA,UAAiBurB,EAAA/rB,GAwZrB+rB,EAAA7uB,UAAAwa,0BAAA,SAAAC,GAGA,IAAAkb,EAGAC,EAAAnb,EAAA7X,UAAA1D,KAAAuE,MAAAb,aAiBAF,IAAA+X,EAdAkb,EAFAlb,EAAA0X,YACAyD,QAAAlzB,IAAA+X,EAAA8a,oBACA,sBAGA,eAIAK,QAAAlzB,IAAA+X,EAAA6a,mBACA,qBAGA,gBAGA7a,EAAAkb,KAAAz2B,KAAAuE,MAAAkyB,KAAAC,GACA12B,KAAAkF,SAAA,CACA0qB,gBAAA5vB,KAAAw2B,oBAAAjb,EAAA7X,QAAA6X,EAAAkb,MAGAlb,EAAA7X,UAAA1D,KAAAuE,MAAAb,SACA6X,EAAA0X,aAEAjzB,KAAAiwB,cAAAtN,cAAApH,EAAA7X,UAGAisB,EAAA7uB,UAAA4kB,mBAAA,SAAAC,EAAAgR,IACA,IAAAA,EAAA3O,SAAA,IAAAhoB,KAAAgE,MAAAgkB,SACAhoB,KAAA42B,eAAA,EACA52B,KAAA+vB,UAAAxS,SACAvd,KAAA+vB,UAAAxS,QAAAD,QAEAtd,KAAAuE,MAAA0jB,WACAjoB,KAAAuE,MAAA0jB,cAIA0H,EAAA7uB,UAAAuD,OAAA,WACA,IAAAR,EAAA7D,KACAob,EAAApb,KAAAmb,IACA7W,EAAAtE,KAAAuE,MAAAwW,EAAAzW,EAAAyW,UAAA9C,EAAA3T,EAAA2T,MAAAvU,EAAAY,EAAAZ,QAAA+X,EAAAnX,EAAAmX,UAAAob,EAAAvyB,EAAAuyB,SAAAC,EAAAxyB,EAAAwyB,aAAA7D,EAAA3uB,EAAA2uB,YAAAjX,EAAA1X,EAAA0X,YAAA+a,EAAAzyB,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MAAAod,EAAArsB,EAAAqsB,WAAAD,EAAApsB,EAAAosB,aAAA9lB,EAAAtG,EAAA0yB,qBAAA,IAAApsB,EAAA5K,KAAAkwB,eAAAtlB,EAAA4I,EAAAlP,EAAA2yB,yBAAA,IAAAzjB,EAAAxT,KAAAywB,mBAAAjd,EAAAyC,EAAA3R,EAAA4yB,2BAAA,IAAAjhB,EAAAjW,KAAAuwB,qBAAAta,EAAAC,EAAA5R,EAAA6yB,yBAAA,IAAAjhB,EAAAlW,KAAAgyB,mBAAA9b,EACAE,EAAApW,KAAAgE,MAAAgkB,EAAA5R,EAAA4R,OAAA4H,EAAAxZ,EAAAwZ,gBAAA6E,EAAAre,EAAAqe,SAAAT,EAAA5d,EAAA4d,kBACAoD,EAAAp3B,KAAAq3B,uBAAA3zB,EAAAksB,GACAlM,EAAuBtjB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAClDyL,EAAA1a,KAAAw0B,cACA8C,EAAAlc,EAAA,UACAmc,EAAAtE,GAAAvY,EACA,CACA+O,UAAAjmB,EACAg0B,0BAAAh0B,EACAi0B,eAAAj0B,EACAuY,iBAAAvY,EACAk0B,kBAAAl0B,EACAm0B,kBAAAn0B,GAGA,CACAimB,KAAA,UACA+N,qBAAAxP,GAAA,IAAA4H,EAAAvuB,QAAAuuB,EAAA,MAAA5vB,KAAAmb,IAAA,QAAAyU,EAAA,GAAA0H,EACAG,UAAA,SACA1b,YAAA/b,KAAAiwB,cAAA2H,cACAF,aAAA13B,KAAAiwB,cAAA/M,cAAA0M,EAAA,IACA+H,kBAAAn0B,IAAAosB,EAAA,SAAApsB,GAEAxD,KAAAgb,YAA2ByU,GAAasH,EAAA,CACxCxjB,QACAwH,YACA8c,SAAAC,QAAAhB,KAAAz1B,OAAA,GACA2mB,SACA6O,WACAnc,WACAqd,wBAAAX,EAAA/1B,OACA22B,eAAArH,IAAA5V,eAAAvX,EACAy0B,iBAAAvH,IAAA3V,eAAAvX,EACAwwB,sBAEA,IAAAkE,EAAAl4B,KAAAgb,YAAA+V,mBACA/wB,KAAAgb,YAAA+V,mBAAA9Y,WACAzU,EACA,OAAgBoB,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA/G,MAC5CgE,GAAsBrT,EAAA,cAAoBuzB,EAAA,EAAK,CAAGpd,UAAA/a,KAAAgb,YAAA/C,MAAAmD,KAAA,SAAA4B,QAAA5B,EAAAyb,WAAAne,OAAAwf,GAA6GjgB,GACnJrT,EAAA,cAAoByX,EAAA,EAAU,CAAGL,cAAAtB,YAA+C,SAAA4B,GAA+B,OAAS1X,EAAA,cAAmB,MAAQR,EAAA,SAAgB,GAAGkY,EAAA,CAAqB6W,qBAAAzY,EAAA7V,IAAAhB,EAAAksB,UAAA3U,KAAAgd,SAAA1d,GAAA,IAAA2d,gBAAArQ,EAAA,eAAAyB,KAAA8N,EAAA9N,KAAA9M,aAAAlB,EAAAmB,kBAAA3E,IAAAwD,EAAAL,EAAA,cAAA5X,EAAAqZ,mBAA+Qzc,OAAA8M,EAAA,EAAA9M,CAAwBk3B,EAAAhb,EAAA,qBAAAgc,wBAAAtQ,EAAAuP,EAAAC,0BAAAh0B,EAAA+0B,gBAAA1B,EAAAna,gBAAAhC,EAAA8d,YAAAxQ,EAAA5M,EAAA,aAAA5X,GAAsOkgB,EAAA,CAAa3I,UAAAlX,EAAAmX,YAAAyd,SAAAje,OAAA3W,EAAA0wB,gBAAA3P,UAAA/gB,EAAA6wB,mBAAAgB,QAAA7xB,EAAA0xB,iBAAAnjB,QAAAvO,EAAAmyB,iBAAA1b,QAAAzW,EAAAuW,WACjtBxV,EAAA,cAAmB,QAAUwW,GAAAkc,EAAAvc,UAAAlX,EAAAmX,YAAAiB,MAAAyc,eAAA,EAAAjP,KAAA8N,EAAAE,UAAAkB,aAAAlE,GAAA/Z,GAAAuY,GAAAjL,EAAA,kBAAArL,aAAAya,EAAA/1B,OAAA+1B,EAAA,GAAAnc,KAAApX,EAAA2sB,aAAAzT,eAAAwa,EAAAxb,YAAAe,gBAAAya,EAAAG,aAAA/D,gBAAA4D,EAAAI,cAC7CP,EAAA/1B,OACA21B,EAAAI,EAAAvzB,EAAAqsB,gBACAgH,EAAArzB,EAAAU,MAAAV,EAAA0sB,uBACgB3rB,EAAA,cAAmB,QAAUmW,UAAAlX,EAAAmX,YAAA4d,kBAAgDzB,EAAAtzB,EAAAU,MAAAV,EAAAmuB,wBAC7FhK,GAAAiP,EAAAj3B,KAAAuE,MAAAvE,KAAAywB,oBACAqG,KAAAz1B,OAAA,GAAuDuD,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA8b,cAA2CA,KAE9HnH,EAAA7uB,UAAAwc,MAAA,SAAAub,GACA74B,KAAA+vB,UAAAxS,UAAA,IAAAvd,KAAA+vB,UAAAxS,QAAA6a,WACAp4B,KAAA+vB,UAAAxS,QAAAD,QACAub,GACA74B,KAAAkF,SAAA,CACA8iB,QAAA,MAKA2H,EAAA7uB,UAAAozB,iBAAA,SAAAhiB,EAAAiR,GACA,IAAA7e,EAAAtE,KAAAuE,MAAAoW,EAAArW,EAAAqW,SAAAub,EAAA5xB,EAAA4xB,UAAAxyB,EAAAY,EAAAZ,QAAA6yB,EAAAjyB,EAAAiyB,YAAAD,EAAAhyB,EAAAgyB,aAAArD,EAAA3uB,EAAA2uB,YAAA6F,EAAAx0B,EAAAw0B,iBACAluB,EAAA5K,KAAAgE,MAAA4rB,uBAAA,IAAAhlB,EAAA,GAAAA,EACAiQ,IAAA+U,KAAA+C,QAAAxP,IAAA,EAEA,GADAA,EAAA1hB,KAAAC,IAAA,EAAAD,KAAAE,IAAA+B,EAAArC,OAAA,EAAA8hB,IACA8P,GAAA6F,GAAA3V,IAAAyM,EAAA,IAGA,GAAAqD,QAAAzvB,IAAA+yB,GAMA,GAAAtD,QAAAzvB,IAAA8yB,EAAA,CACA,IAAAyC,EAAAnJ,EAAA5vB,KAAAg5B,WAAApJ,GAAA,GACA,GAAA/U,EAAA,CACA,IAAAuE,EAAA2Z,EAAApG,QAAAxP,GACA/D,GAAA,GAEA2Z,EAAAE,OAAA7Z,EAAA,QAKA2Z,EAAA71B,KAAAigB,GAEAnjB,KAAAkF,SAAA,CACA0qB,gBAAAmJ,UAlBA/4B,KAAAkF,SAAA,CACA0qB,gBAAA,CAAAzM,KAoBA,GAAAxI,EAIAA,EAAAzI,EADA+gB,EAA2C7uB,EAAA,SAAgB,GAAGV,EAAAyf,GAAA,CAAmB+V,UAAAre,IAAqBnX,EAAAyf,GACtGA,GAEA,GAAA+S,EAIAA,EADAjD,EAA2C7uB,EAAA,SAAgB,GAAGV,EAAAyf,GAAA,CAAmB+V,UAAAre,IAAqBnX,EAAAyf,GACtGA,KAGA/iB,OAAA+F,eAAAwpB,EAAA7uB,UAAA,gBAEAoD,IAAA,WACA,OAAAlE,KAAAuE,MAAA40B,aAAAn5B,KAAAuE,MAAA4xB,aAEA9vB,YAAA,EACAL,cAAA,IAEA2pB,EAAA7uB,UAAAk4B,WAAA,SAAA7rB,GAEA,IADA,IAAAisB,EAAA,GACAjtB,EAAA,EAAAktB,EAAAlsB,EAAyChB,EAAAktB,EAAAh4B,OAAqB8K,IAAA,CAC9D,IAAAjN,EAAAm6B,EAAAltB,GACAitB,EAAAl2B,KAAAhE,GAEA,OAAAk6B,GASAzJ,EAAA7uB,UAAAq0B,WAAA,SAAAjjB,EAAAonB,EAAAnW,EAAA2R,GACA,IAAApxB,EAAA1D,KAAAuE,MAAAb,QAEA,GAAAoxB,IAAA3R,GAAA,IAAAzf,EAAArC,OACA,OAAAyzB,EAGA3R,EAAA,IACAA,EAAA,GAGAA,GAAAzf,EAAArC,SACA8hB,EAAAzf,EAAArC,OAAA,GAIA,IAFA,IAAAk4B,EAAA,EAEA71B,EAAAyf,GAAAL,WAA2C/I,EAAoBiJ,QAC/Dtf,EAAAyf,GAAAL,WAAwC/I,EAAoBgJ,SAC5Drf,EAAAyf,GAAAzI,UAAA,CAEA,GAAA6e,GAAA71B,EAAArC,OACA,OAAAyzB,EAGA3R,EAAAmW,EAAA,EACAnW,EAAAzf,EAAArC,OAEA8hB,EAAAmW,GAAA51B,EAAArC,SACA8hB,GAAA,GAEAA,GAAAmW,EACAC,IAGA,OADAv5B,KAAAk0B,iBAAAhiB,EAAAiR,GACAA,GAGAwM,EAAA7uB,UAAAmwB,qBAAA,SAAA1sB,GACA,IAAAD,EAAAC,EAAAi1B,oBAAA,IAAAl1B,EAAAtE,KAAAkyB,cAAA5tB,EAAA2T,EAAA1T,EAAA0T,MACAmD,EAAApb,KAAAmb,IACA,OAAgBvW,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAAye,qBAAA7U,UAAA5kB,KAAA21B,eAAAD,QAAA11B,KAAA+1B,aAAAlxB,IAAA7E,KAAA6vB,MAAAuI,SAAA,GAChCxzB,EAAA,cAAoB80B,EAAA,EAAS,CAAG70B,IAAA7E,KAAA8vB,WAAA6J,UAAkCC,EAAA,EAAkBC,SAAAze,KAAA,QAAAL,UAAA/a,KAAAgb,YAAA8e,cAAAld,kBAAA3E,EAAAmD,EAAA,cAAA5X,EAAAimB,KAAA,WAA+I+P,EAAAj1B,EAAAvE,KAAAkyB,kBAE/OvC,EAAA7uB,UAAAuxB,iBAAA,SAAAzpB,GACA,IAAAua,EAAAva,EAAAua,MAAAxd,EAAAiD,EAAAjD,IACA,OAAAwd,EAAA,EACmBve,EAAA,cAAmB,OAAS6kB,KAAA,YAAA9jB,MAAAoV,UAAA/a,KAAAgb,YAAA+e,kBAE/C,MAEApK,EAAA7uB,UAAAwxB,cAAA,SAAA1pB,GACA,IAAAtE,EAAAtE,KAAAuE,MAAAiuB,sBAAA,IAAAluB,EAAAtE,KAAAyyB,gBAAAnuB,EACAqB,EAAAiD,EAAAjD,IACA,OAAgBf,EAAA,cAAmB,OAASe,MAAAoV,UAAA/a,KAAAgb,YAAAgf,oBAA2DxH,EAAA5pB,EAAA5I,KAAAyyB,mBAEvG9C,EAAA7uB,UAAAwyB,kBAAA,SAAA1qB,EAAA3H,GACAjB,KAAAq0B,2BAGApzB,EAAAwjB,cACAnH,SAEAqS,EAAA7uB,UAAA4yB,iBAAA,SAAA9qB,EAAA3H,GACA,IAAAg5B,EAAAh5B,EAAAwjB,cACAzkB,KAAA42B,eAAA,EACA52B,KAAAm0B,eAAA1zB,SAAA8lB,gBAAA0T,GAGAA,EAAA3c,SAEAqS,EAAA7uB,UAAAuzB,wBAAA,WACA,OAAAr0B,KAAAm0B,gBAAAn0B,KAAA42B,eAGAjH,EAAA7uB,UAAA01B,oBAAA,SAAA9yB,EAAA6yB,GACA,QAAA/yB,IAAA+yB,EAAA,CACA,GAAAv2B,KAAAuE,MAAA0uB,YACA,OAAAjzB,KAAAk6B,uBAAAx2B,GAEA,IAAAoxB,EAAA90B,KAAAm6B,kBAAAz2B,EAAA,MACA,WAAAoxB,EAAA,CAAAA,GAAA,GAEA,IAAAsF,MAAAC,QAAA9D,GACA,OAAAv2B,KAAAm6B,kBAAAz2B,EAAA6yB,IAGA,IADA,IAAA3G,EAAA,GACAzjB,EAAA,EAAAmuB,EAAA/D,EAAqDpqB,EAAAmuB,EAAAj5B,OAA2B8K,IAAA,CAChF,IAAAxG,EAAA20B,EAAAnuB,GACAyjB,EAAA1sB,KAAAlD,KAAAm6B,kBAAAz2B,EAAAiC,IAEA,OAAAiqB,GAGAD,EAAA7uB,UAAAu2B,uBAAA,SAAA3zB,EAAAksB,GAEA,IADA,IAAAwH,EAAA,GACAjrB,EAAA,EAAAouB,EAAA3K,EAA6DzjB,EAAAouB,EAAAl5B,OAA+B8K,IAAA,CAC5F,IACAquB,EAAA92B,EADA62B,EAAApuB,IAEAquB,GACApD,EAAAl0B,KAAAs3B,GAGA,OAAApD,GAEAzH,EAAA7uB,UAAAo5B,uBAAA,SAAAx2B,GACA,OAAAA,EAAA2sB,IAAA,SAAAmK,EAAArX,GAAqD,OAAAqX,EAAAtB,SAAA/V,GAAA,IAAyCsD,OAAA,SAAAtD,GAA2B,WAAAA,KAEzHwM,EAAA7uB,UAAAq5B,kBAAA,SAAAz2B,EAAA6yB,GACA,OAAen2B,OAAA+M,EAAA,EAAA/M,CAASsD,EAAA,SAAA82B,GAExB,aAAAjE,EACAiE,EAAA70B,MAAA4wB,IAGAiE,EAAAC,cAAAD,EAAAtB,YAOAvJ,EAAA7uB,UAAA8zB,aAAA,SAAA3zB,GACA,OAAAA,EAAA6jB,QAA4B/X,EAAA,EAAQ2tB,KAAA,SAAAz5B,EAAA0E,KAYpCgqB,EAAA7uB,UAAA20B,mBAAA,SAAAx0B,GACA,IAAA05B,EAAA36B,KAAA20B,0BAAA30B,KAAA40B,aAAA3zB,GAEA,OADAjB,KAAA20B,0BAAA,IACAgG,KAA+Cv6B,OAAA2O,EAAA,EAAA3O,IAAWA,OAAAyO,EAAA,EAAAzO,KAE1DuvB,EAAAjZ,aAAA,CACAhT,QAAA,IAEAisB,EAAmBvrB,EAAA,WAAkB,CAC7BiM,GAAA,GACRsf,GAxtBgB,CA0tBdpnB,EAAA,aFzuBEqyB,GAAgB,CACpB3mB,KAAA,wBACAgE,MAAA,oBACAwgB,SAAA,cACAxc,MAAA,oBACA2c,iBAAA,+BACA3G,UAAA,wBACAP,QAAA,sBACA9E,MAAA,oBACAkN,cAAA,oBACA9G,aAAA,mBACA+G,gBAAA,sBACAnG,mBAAA,yBACAoG,mBAAA,qBACAa,mBAAA,iCACAC,cAAA,+BAIAC,GAAA,CAEAC,gGAAA,CACAnlB,qBAAA,SAGAolB,GAAA,CACA5mB,UAAejQ,EAAA,UAAkBqjB,GAAE,GAAOA,GAAGlI,EAAA,GAAoB,CACjErL,gBAAA,YACAI,YAAA,YACAH,MAAA,gBACAE,UAAA,CACAa,SAAA,CACAf,MAAA,mBAGOsT,IAAEsT,KAETG,GAAA,CACA7mB,WAAgBqT,GAAE,GACVA,GAAGnI,EAAA,GAAoB,CAC/BjL,YAAA,aAEQoT,KG5CRlb,EAAAC,EAAAC,EAAA,sBAAAyuB,KAGO,IAAAA,GAAe/6B,OAAA+O,EAAA,EAAA/O,CAAOsvB,GH2CT,SAAAnrB,GACpB,IAAAgP,EAAAhP,EAAAgP,MAAAskB,EAAAtzB,EAAAszB,SAAA9c,EAAAxW,EAAAwW,UAAAiN,EAAAzjB,EAAAyjB,OAAAtN,EAAAnW,EAAAmW,SAAAmc,EAAAtyB,EAAAsyB,SAAAkB,EAAAxzB,EAAAwzB,uBAAAC,EAAAzzB,EAAAyzB,eAAAC,EAAA1zB,EAAA0zB,iBACA,IAAA1kB,EACA,UAAA/N,MAAA,mEAEA,IAgMAlB,EAAAsG,EAAA4I,EAAAyC,EAAAC,EAhMAklB,EAA2Bh7B,OAAA4jB,EAAA,EAAA5jB,CAAoBw6B,GAAgBrnB,GAC/DoB,EAAApB,EAAAoB,QAAAlB,EAAAF,EAAAE,eACA4nB,EAAA,CACAlnB,MAAAQ,EAAA2mB,aAEAC,EAAA,CACApnB,MAAAV,EAAA+nB,aAEAC,EAAA,CACAnnB,YAAAb,EAAAioB,WAEAC,EAAA,CACAP,EAAApI,aACA,CACA9e,gBAAA,cACAsF,UAAA,aACA6G,OAAA,UACAhB,QAAA,QACA9F,QAAA,WACAha,MAAA,OACAq8B,UAnDA,GAoDAta,WAAA,GACA7hB,OAAA,OACA2f,SAAA,WACAtK,OAAA,wBACA+mB,SAAA,aACAC,aAAA,aACAvb,UAAA,SAGAuS,EAAA6I,EAAAI,OAAA,CACA,CACA7nB,gBAAAS,EAAAqnB,qBACA7nB,MAAAQ,EAAAgN,OAEAsZ,KAEAlI,EAAA4I,EAAAI,OAAA,CACA,CACA5nB,MAAAV,EAAA0L,aACAkB,OAAA,aAGA,OACApM,KAAAmnB,EAAAnnB,KACAgE,MAAAmjB,EAAAnjB,MACAwgB,SAAA,CACA2C,EAAA3C,SACYwD,GAAA,EACA73B,EAAA,SAAgB,GAAGmP,EAAA4E,MAAAgI,OAAA,CAAuBhM,MAAAQ,EAAAe,eAAA0J,SAAA,WAAAY,QAAA,EAAAM,WAAA,OAAAjM,WAAA/P,EAAA,GACtDA,EAAA,YAAA82B,EAAAnf,OAAA,EACAvB,GAAA2gB,EACA,CAAyB/mB,YAAAK,EAAA2mB,aACzBJ,IAEA52B,EAAA,YAAA82B,EAAAnf,OAAA,EACAvB,GAAA2gB,EACA,CAAyB/mB,YAAAK,EAAAY,cACzB0lB,IAEA32B,EAAA,aAAA82B,EAAAnf,OAAA,EACAvB,GAAA2gB,EACA,CAAyB/mB,YAAAK,EAAAoB,WACzBmlB,IAEA52B,EAAA,YAAA82B,EAAAnJ,YAAAvX,GAAA2gB,EACA/2B,EAAA,YAAA82B,EAAAnJ,WAAA,EACAvX,GAAA2gB,EACA,CAAyBhnB,UAAYjQ,EAAA,UAAgBwG,EAAA,GAASA,EAAK2U,EAAA,GAAoB,CAAKpL,MAAA,iBAAyBvJ,GAAAmwB,MAErHz2B,EAAA,aAAA82B,EAAAnJ,YAAAvX,GAAA2gB,EACA/2B,EAAA,YAAA82B,EAAAP,oBAAAU,EACAj3B,EAAA,YAAA82B,EAAAP,oBAAAU,EACAj3B,EAAA,aAAA82B,EAAAP,oBAAAU,EACAj3B,EAAA,YAAA82B,EAAAN,eAAAW,EACAn3B,EAAA,aAAA82B,EAAAN,eAAAW,EACAn3B,EAAA,YAAA82B,EAAAN,eAAAW,EACAn3B,KACAyW,EACAiN,GAAA,UACAtN,GAAA,cACAmc,GAAA,eAEA5a,MAAA,CACAmf,EAAAnf,MACYggB,GAAA,EACZ,CACA/nB,gBAAAT,EAAAyoB,gBACApb,YAAA,EACAC,YAAA,QACAzM,YAAAb,EAAAwK,YACAoC,OAAA,UACAhB,QAAA,QACA5f,OA7HA,GA8HA6hB,WAAA6a,GACA5iB,QAAA,gBACA6F,SAAA,WACApQ,SAAA,SACA0K,WAAA,SACAD,aAAA,YAEAse,GAAA,CAAAqD,EAAAP,mBAAA,CAA6E1mB,MAAAV,EAAA2oB,uBAC7EvE,GAAA,CAAAuD,EAAAN,cAAAW,GACA/gB,GAAA,CACAxG,gBAAAT,EAAAsK,mBACAjJ,OAAA,OACAX,MAAAV,EAAA0L,aACAkB,OAAA,UACAhM,WAAAb,EAAA,GAAmCA,EAAK+L,EAAA,GAAoB,CAAKzK,OAAA,qBAAAX,MAAA,YAAkDX,KAGnHolB,iBAAA,CACAwC,EAAAxC,iBACA,CACAxZ,SAAA,WACA9f,IAAA,EACAK,MAAA,GACAF,OArJA,GAsJA6hB,WAAA6a,KAEAzhB,GAAA,CACA2F,OAAA,YAGA4R,UAAA,CACAmJ,EAAAnJ,UACA,CAAa9d,MAAAQ,EAAAsL,iBAAAoB,SAA4ClJ,EAAA,EAASpH,MAAA6P,cAAA,QAClElG,GAAA,CAAyBvG,MAAAV,EAAA0L,aAAA9K,WAAA4B,EAAA,GAAwDA,EAAKsJ,EAAA,GAAoB,CAAKpL,MAAA,YAAoB8B,KAEnI6gB,aAAsB1yB,EAAA,SAAgB,CAAE+P,MAAAV,EAAAioB,WAAkCnoB,EAAA4E,MAAApH,MAAA,CAAsBye,WAAA,IAChGkC,QAAA,CACA0J,EAAA1J,QACA,CACArY,UAAA,4BACAvE,OAAA,aAAAH,EAAAC,cAEAqjB,GAEAwB,qBAAA,CAA+BplB,UAAA,CAAagoB,UAAA,CAAarc,QAAA,KACzD8Z,cAAA,CAAAsB,EAAAtB,cAAA,CAAyDza,QAAA,UACzD2T,aAAA2I,EAAAI,OAAA,CACA,CACA1nB,WAAA6B,EAAA,GACAA,EAAuBqJ,EAAA,GAAoB,CAC3CjL,YAAA,UAEA4B,EAAA,YACA/B,MAAA,WAEA+B,EAAA,YACAhC,gBAAAT,EAAA6oB,2BAEApmB,EAAA,aACAhC,gBAAAT,EAAA8oB,4BACApoB,MAAAQ,EAAAgN,OAEAzL,MAGA4c,uBACAC,uBACAF,gCAAA,CAAAC,EAAAC,EAAA,CAAuF7e,gBAAA,gBACvF6lB,gBAAA,CAAAqB,EAAArB,gBAAA,CAA6Dt6B,OAAA,EAAAyU,gBAAAT,EAAA+oB,cAC7D5I,mBAAA,CACAwH,EAAAxH,mBACA,CACA5kB,SAAA,SACA0K,WAAA,SACAD,aAAA,WACAzB,SAAA,EACAwW,SAAA,OACAqN,SAAA,aACAC,aAAA,aACAxiB,OAAA,QAGA0gB,mBAAA,CACAoB,EAAApB,mBACY51B,EAAA,SAAgB,GAAGmP,EAAA4E,MAAAgI,OAAA,CAAuBjI,WAAaC,EAAA,EAAWC,SAAAjE,MAAAV,EAAAgpB,WAAA9c,WAAA,OAAAzL,gBAAA,cAAAY,OAAA,OAAArV,OAjN9E,GAiN8E6hB,WAjN9E,GAiN8EjB,OAAA,UAAA9G,QAAA,WAAA+G,WAAA,OAAAC,UAAA,UAE9EwQ,mBAAA,CACA9Y,MAAA,CAAoBhE,KAAA,CAAQoL,QAAA,iBAC5BuN,MAAA,CACA3Y,KAAA,CAAA+jB,GACA3L,KAAA,CAEAhT,UAAA,wCAEAmT,aAAA,CAA+BjT,QAAA,qBG5OqB/V,EAAA,CACpD+d,MAAA,4JCCAvH,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAChBs8B,EAAe,SAAA94B,GAEnB,SAAA+4B,EAAAp4B,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KA8DA,OA7DA6D,EAAAisB,WAA2BlrB,EAAA,YAC3Bf,EAAA+4B,kBAAA,GACA/4B,EAAAg5B,eAA+BC,EAAA,EAAaC,cAC5Cl5B,EAAAm5B,cAA8Bp4B,EAAA,YAC9Bf,EAAAo5B,eAAA,SAAAC,GACA,OAAAA,EAAA7M,IAAA,SAAAznB,EAAAD,GACA,IAAAw0B,EAAA,CACApiB,UAAAlX,EAAAmX,YAAApS,MAEA,OAAwBhE,EAAA,cAAmB,MAAQR,EAAA,SAAgB,CAAEuB,IAAAiD,EAAAjD,KAAgBw3B,GAAAt5B,EAAAU,MAAA4tB,aAAAvpB,OAGrF/E,EAAAu5B,+BAAA,SAAAF,GACA,IAAAC,EAAA,CACApiB,UAAAlX,EAAAmX,YAAAqiB,gBAEAC,EAAAz5B,EAAAU,MAAAg5B,gBACAC,EAAA,GAqCA,OApCAF,EACAJ,EAAAO,QAAA,SAAAC,GACA,IAAAC,EAAAD,EAAA1hB,YACA,GAAA2hB,EAAA,CAEA,IAAAC,EAAA,CACAjd,QAAAgd,EAAAhd,QACAkd,aAAAF,EAAAE,aACAnjB,SAAAijB,EAAAjjB,aAAAgjB,EAAAhjB,WAAAgjB,EAAAzH,YACA6H,mBAAAH,EAAAG,mBACAC,QAAAJ,EAAAI,SAEAJ,EAAAG,oBAAAj6B,EAAAm6B,mBAAAN,GAEAE,EAAAK,UAAAp6B,EAAAg5B,eAAAqB,YAAA39B,KAAAsD,EAAAg5B,eAAAS,EAAAI,EAAA1hB,YAAA6hB,cAIAD,EAAAK,UAAAN,EAAAM,UAIAp6B,EAAA+4B,kBAAAgB,EAAAjd,SAAAid,EAEA,IAAAO,EAA8C/5B,EAAA,SAAgB,GAAGs5B,EAAA,CAAiB1hB,YAAc5X,EAAA,SAAgB,GAAGu5B,EAAA,CAAWS,oBAAAd,MAC9HE,EAAAt6B,KAAAi7B,QAIAX,EAAAt6B,KAAAw6B,KAKAF,EAAAN,EAEmBt4B,EAAA,cAAmB,MAAQR,EAAA,SAAgB,GAAG+4B,GAAAt5B,EAAAU,MAAA85B,uBAAAb,KAEjEj5B,EAAA+5B,6BACAz6B,EAAAqX,uBAAA,CACAojB,4BAAA,mBAGAz6B,EA0GA,OA1KIO,EAAA,UAAiBu4B,EAAA/4B,GAkErB+4B,EAAA77B,UAAAuD,OAAA,WACA,IAEAk6B,EACAC,EAHAl6B,EAAAtE,KAAAuE,MAAA24B,EAAA54B,EAAA44B,MAAAuB,EAAAn6B,EAAAm6B,cAAA1jB,EAAAzW,EAAAyW,UAAA2jB,EAAAp6B,EAAAo6B,eAAAhmB,EAAApU,EAAAoU,OAAAmhB,EAAAv1B,EAAAu1B,SAAApQ,EAAAnlB,EAAAmlB,KAAA6U,EAAAh6B,EAAAg6B,4BAYA,OAXAt+B,KAAAgb,YAAAhB,EAAAtB,EAAA,CAAkDqC,YAAA8e,aAGlDyE,GACAC,EAAA,MACAC,EAAmCp6B,EAAA,SAAgB,GAAKhE,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAAa,CAAIpK,IAAA7E,KAAAg9B,kBAGpGuB,EAAkB7E,EAAA,EAClB8E,EAAmCp6B,EAAA,SAAgB,GAAKhE,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAAayvB,EAAA,CAAoBC,aAAA3+B,KAAA8vB,WAAA6J,UAAAE,EAAsDD,EAAA,EAAkBC,SAAYD,EAAA,EAAkBgF,cAE1Mh6B,EAAA,cAAmB25B,EAAMn6B,EAAA,SAAgB,GAAGo6B,EAAA,CAAyBzjB,UAAA/a,KAAAgb,YAAA/G,KAAAwV,SACrFyT,GAAAl9B,KAAAi9B,eAAAC,GACAuB,KAAAp9B,OAAA,GAAArB,KAAAo9B,+BAAAqB,KAQA9B,EAAA77B,UAAAwc,MAAA,SAAAuhB,GACA,IAAAC,GAAA,EASA,OARA9+B,KAAAuE,MAAA+5B,4BACAt+B,KAAAg9B,cAAAzf,UACAuhB,EAAiC1+B,OAAAgO,EAAA,EAAAhO,CAAeJ,KAAAg9B,cAAAzf,UAGhDvd,KAAA8vB,WAAAvS,UACAuhB,EAAA9+B,KAAA8vB,WAAAvS,QAAAD,MAAAuhB,IAEAC,GAOAnC,EAAA77B,UAAAizB,aAAA,SAAAgL,GACA,IAAAD,GAAA,EACA,QAAAC,IAGA/+B,KAAAuE,MAAA+5B,4BACAt+B,KAAAg9B,cAAAzf,SAA8Cnd,OAAAqN,EAAA,EAAArN,CAAeJ,KAAAg9B,cAAAzf,QAAAwhB,KAC7DA,EAAAzhB,QACAwhB,EAAAr+B,SAAA8lB,gBAAAwY,GAGA/+B,KAAA8vB,WAAAvS,UACAuhB,EAAA9+B,KAAA8vB,WAAAvS,QAAAwW,aAAAgL,IAEAD,IAGAnC,EAAA77B,UAAAgE,kBAAA,WACA9E,KAAAg/B,6BAEArC,EAAA77B,UAAAiH,qBAAA,WACA/H,KAAAi/B,+BAEAtC,EAAA77B,UAAAo+B,oBAAA,WACAl/B,KAAAi/B,+BAEAtC,EAAA77B,UAAA4kB,mBAAA,WACA1lB,KAAAg/B,6BAEArC,EAAA77B,UAAAk+B,0BAAA,WACA,IAAAn7B,EAAA7D,KACAI,OAAA++B,KAAAn/B,KAAA48B,mBAAAa,QAAA,SAAA93B,GACA,IAAAg4B,EAAA95B,EAAA+4B,kBAAAj3B,GACAy5B,EAAAv7B,EAAAg5B,eAAAwC,SAAA1B,GAAA,GAEA95B,EAAA+4B,kBAAAwC,GAAAzB,SACA95B,EAAA+4B,kBAAAj3B,MAGAg3B,EAAA77B,UAAAm+B,4BAAA,WACA,IAAAp7B,EAAA7D,KAEAI,OAAA++B,KAAAn/B,KAAA48B,mBAAAa,QAAA,SAAA2B,GACAv7B,EAAAg5B,eAAAyC,WAAAz7B,EAAA+4B,kBAAAwC,MAAA,KAEAp/B,KAAA48B,kBAAA,IAMAD,EAAA77B,UAAAk9B,mBAAA,SAAAp1B,GACA,OAAA5I,KAAAuE,MAAAg7B,oBACAv/B,KAAAuE,MAAAg7B,oBAAA32B,GAEAA,EAAA42B,aACA52B,EAAA42B,aAAAtC,WADA,GAKAP,EAAAjmB,aAAA,CACAmjB,UAAA,EACApQ,KAAA,WAEAkT,EA3KmB,CA4KjBp0B,EAAA,GClLFk3B,EAAA,CACA5e,WAAA,EACAxB,QAAA,WCCOqgB,EAAkBt/B,OAAA+O,EAAA,EAAA/O,CAAOs8B,EDCzB,SAAAn4B,GACP,IAAAwW,EAAAxW,EAAAwW,UACA,OACA9G,KAAA,CACA,iBACA,CACAmL,SAAA,WACAC,QAAA,OACAsgB,SAAA,UAPAp7B,EAAAs1B,UASA,CAAyBrZ,cAAA,UACzBzF,GAEAnS,KAAA,uBAAA62B,GACApC,eAAA,iCAAAoC,UCf0Dj8B,EAAA,CAC1D+d,MAAA,kCCiCOqe,EAAA,SAAAC,GA7BA,IACPC,OA6BA,IAAAD,IA7BAC,EAAA,GA6BsCD,EA5BtC,CAMAE,qBAAA,SAAAC,GACA,GAAAA,KAAAC,UAAAH,EAAA75B,eAAA+5B,EAAAC,UACA,OAAAH,EAAAE,EAAAC,WAQAC,sBAAA,SAAAF,EAAAp9B,GACAo9B,EAAAC,WACAH,EAAAE,EAAAC,UAAAr9B,MAWA,IACAu9B,EADAC,EAAAP,EAQA,SAAAQ,EAAAC,EAAAC,GACA,IAAAC,EAAAJ,EAAAL,qBAAAO,GACA,QAAA98B,IAAAg9B,EACA,OAAAA,EAEA,IAAAC,EAAAF,IAEA,OADAH,EAAAF,sBAAAI,EAAAG,GACAA,EAUA,SAAAC,EAAAV,EAAAW,EAAAJ,GAGA,IAFA,IAAAK,EAAAZ,EACAS,EAAAJ,EAAAL,EAAAO,GACAE,EAAAN,GAAA,CACA,IAAAU,EAAAF,EAAAC,GAIA,QAAAp9B,IAAAq9B,EACA,OACAC,aAAAF,EACAG,qBAAAv9B,EACAo9B,mBAAAp9B,GAKA,QAAAA,KAFAi9B,EAAAL,EAAAL,qBAAAc,IAGA,OACAD,cAAAC,EACAE,gBAAA,UAGAH,EAAAC,EAEA,OACAC,aAAAF,EACAG,qBAAAv9B,EACAo9B,mBAAAp9B,GA4GA,OACAw9B,aAvCA,SAAAz8B,EAAA08B,EAAAV,EAAAW,GAEA,QAAA19B,IAAA09B,QAAA19B,IAAAy9B,EAAAL,cAAA,CAGA,GAAAM,EAAA,CAEA,GAAAf,GAAAc,EAAAH,eAAAG,EAAAL,cACA,OAAuBx8B,EAAA,SAAgB,GAAG68B,EAjC1C,SAAAE,EAAAC,EAAAN,EAAAO,GACA,IAAAC,EAsBA,OAnBAA,EAFAH,EAAAhB,EACAkB,EACA,CACAN,gBAAA,OACAH,cAAAS,EAAAP,IAIA,CACAC,gBAAA,SACAH,cAAAQ,GAKA,CACAL,gBAAA,SACAH,cAAAE,GAGAX,EAAAgB,EACe/8B,EAAA,SAAgB,GAAGk9B,EAAA,CAAcC,kBAAA,IAUNC,CAAAN,EAAA38B,EAAAy7B,KAAAiB,EAAAH,aAAAv8B,EAAA88B,aAG1ClB,EAAAe,EAEA,IAAAI,EAAwBl9B,EAAA,SAAgB,GAAG68B,EAAA,CAAiBM,kBAAA,IAS5D,OARAN,EAAAL,gBAEAU,EADA,SAAAL,EAAAF,iBAAAx8B,EAAA88B,WAC4Bj9B,EAAA,SAAgB,GAAGk9B,EA3E/C,SAAAtB,EAAAqB,EAAAd,EAAAI,GAGA,IAFA,IAAAC,EAAAZ,EACAS,EAAAJ,EAAAL,EAAAO,GACAE,EAAAN,GAAA,CACA,IAAAU,EAAAQ,EAAAT,GAIA,QAAAp9B,IAAAq9B,EACA,OACAC,aAAAF,EACAG,qBAAAv9B,EACAo9B,mBAAAp9B,GAKA,QAAAA,KAFAi9B,EAAAL,EAAAL,qBAAAc,IAGA,OACAD,cAAAC,GAGAD,EAAAC,EAGA,OAAez8B,EAAA,SAAgB,CAAE28B,gBAAA,UAA4BL,EAAAE,EAAAD,EAAAJ,IAkDdkB,CAAAR,EAAAL,cAAAr8B,EAAA88B,WAAAd,EAAAh8B,EAAAo8B,eAGnBv8B,EAAA,SAAgB,GAAGk9B,EAAAZ,EAAAO,EAAAL,cAAAr8B,EAAAo8B,aAAAJ,KAG/Ce,IAkBAI,+BAfA,SAAAd,GACA,SAAAA,QAAAp9B,IAAA48B,EAAAL,qBAAAa,KAeAe,2BAVA,SAAA3B,GACA,OACAY,cAA2Bx8B,EAAA,SAAgB,GAAG47B,GAC9Ce,gBAAA,OACAQ,kBAAA,MAWAK,EAAsBxhC,OAAAwM,EAAA,EAAAxM,CAAc,CACpCyhC,WAAgBC,EAAA,MACf,WACD,OAAYD,YAAA,KAGZE,EAAA,CAAuB3iB,SAAA,QAAA8E,WAAA,UACvB8d,EAAA,CAA0B5iB,SAAA,YCtNnB6iB,EDuNY,SAAAr+B,GAEnB,SAAAs+B,EAAA39B,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAiBA,OAhBA6D,EAAAs+B,8BAAAvC,IAEA/7B,EAAAygB,MAAsB1f,EAAA,YAGtBf,EAAAu+B,kBAAkCx9B,EAAA,YAGlCf,EAAAw+B,iBAAiCz9B,EAAA,YAGjCf,EAAAy+B,qBAAA,EACAz+B,EAAAG,MAAAH,EAAAs+B,8BAAAR,2BAAA99B,EAAAU,MAAAy7B,MACAn8B,EAAAqmB,kBAAA,CACAxR,OAAA,cAEA7U,EAkEA,OArFIO,EAAA,UAAiB89B,EAAAt+B,GAqBrBs+B,EAAAphC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAwW,EAAAzW,EAAAyW,UAAAwnB,EAAAj+B,EAAAi+B,aACA33B,EAAA5K,KAAAgE,MAAA48B,EAAAh2B,EAAAg2B,cAAAE,EAAAl2B,EAAAk2B,aACApd,EAAuBtjB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,EAAa,UAC/DuzB,EAAAxiC,KAAAmiC,8BAAAT,+BAAAd,GACA6B,GAAAziC,KAAAsiC,qBAAAE,EAOA,OAAgB59B,EAAA,cAAmB,MAAQR,EAAA,SAAgB,GAAGsf,EAAA,CAAa3I,YAAAlW,IAAA7E,KAAAskB,QAC/D1f,EAAA,cAAmB,OAAS0nB,MAAA0V,GACxCQ,IAAAC,GAA4D79B,EAAA,cAAmB,OAAS0nB,MAAAyV,EAAAl9B,IAAA7E,KAAAqiC,kBACpEz9B,EAAA,cAAmBg9B,EAAA,KAAAW,EAAA3B,KACvBh8B,EAAA,cAAmB,OAASC,IAAA7E,KAAAoiC,kBAAA9V,MAAAmW,EAAAV,OAAAv+B,EAAAk/B,qBAAA,kBAA6HD,EAAAF,EAAA3B,GAAAE,GAAAyB,EAAAzB,OAEzKoB,EAAAphC,UAAAgE,kBAAA,WACA9E,KAAA2iC,0BACA3iC,KAAAC,QAAAU,GAAAvB,OAAA,SAAAY,KAAAmoB,OAAAya,SAAA5iC,KAAA6iC,UA9PA,GA8PA,CAA8FC,SAAA,MAE9FZ,EAAAphC,UAAAwa,0BAAA,SAAAiK,GACAvlB,KAAAkF,SAAA,CACA07B,cAA2Bx8B,EAAA,SAAgB,GAAGmhB,EAAAya,MAC9Ce,gBAAA,OACAQ,kBAAA,KAGAW,EAAAphC,UAAA4kB,mBAAA,SAAAC,GACA3lB,KAAAgE,MAAA88B,eACA9gC,KAAAsiC,qBAAA,EACAtiC,KAAAuE,MAAAw+B,eACA/iC,KAAAuE,MAAAw+B,cAAA/iC,KAAAgE,MAAA88B,eAGA9gC,KAAA2iC,2BAEAT,EAAAphC,UAAAkiC,UAAA,WACAhjC,KAAAskB,MAAA/G,SACAvd,KAAAkF,SAAA,CAA2Bq8B,kBAAA,KAG3BW,EAAAphC,UAAA6hC,wBAAA,WACA,IAAA9+B,EAAA7D,KACAA,KAAAmoB,OAAA2L,sBAAA,WACA,IAAAmP,OAAAz/B,EACAK,EAAAG,MAAAu9B,kBAAA19B,EAAAygB,MAAA/G,UACA0lB,EAAAp/B,EAAAygB,MAAA/G,QAAA1d,wBAAAN,OAEA,IAAA+hC,EAAAz9B,EAAAs+B,8BAAAnB,aAAAn9B,EAAAU,MAAAV,EAAAG,MAAA,WACA,IAAAk/B,EAAAr/B,EAAAy+B,oBAAAz+B,EAAAw+B,iBAAAx+B,EAAAu+B,kBACA,OAAAc,EAAA3lB,QAAA2lB,EAAA3lB,QAAApG,YAAA,GACa8rB,GACb3B,GACAz9B,EAAAqB,SAAAo8B,MAIAY,EAAAphC,UAAA+hC,UAAA,WACA7iC,KAAAskB,MAAA/G,SACAvd,KAAAkF,SAAA,CAA2Bq8B,kBAAA,KAG3BW,EAtFmB,CAuFjB35B,EAAA,2EE3SS46B,EAAY/iC,OAAAuO,EAAA,EAAAvO,CAAe,SAAAmT,EAAAkE,EAAA2rB,EAAAC,GACtC,IAyHA/+B,EAAAsG,EAAA4I,EAAAyC,EAzHA0B,EAA2BvX,OAAAwX,EAAA,EAAAxX,CAAmBmT,GAC9C+vB,EAAgCljC,OAAA0X,EAAA,EAAA1X,CAAoBmT,GAQpDgwB,EAAA,CACAtvB,KAAA,CACY7T,OAAAojC,EAAA,EAAApjC,CAAamT,GAAA,aATzB,CACAlU,KAAA,EACAC,IAAA,EACAM,OAAA,EACAD,MAAA,EACAmV,OAAA,SAKAvB,EAAA4E,MAAAgI,OACA,CACAnI,SAAA,OACA9D,gBAAAX,EAAAoB,QAAAM,eACAd,MAAAZ,EAAAoB,QAAAe,eACA6D,QAAA,QACAlF,WAAA/P,EAAA,GACAA,EAAuBib,EAAA,GAAoB,CAC3CzK,OAAA,QAEAxQ,KAGA8P,YAAA,CACAF,gBAAAX,EAAAoB,QAAAC,aACAT,MAAAZ,EAAAoB,QAAA2mB,YACAjnB,WAAAzJ,EAAA,GACAA,EAAmB2U,EAAA,GAAoB,CACvCpL,MAAA,aAEAvJ,IAEA2J,YAAA,CACAL,gBAAAX,EAAAoB,QAAAqnB,qBACA7nB,MAAAZ,EAAAoB,QAAAgN,OAEAlN,YAAA,CACAP,gBAAAX,EAAAoB,QAAAqnB,qBACA7nB,MAAAZ,EAAAoB,QAAAgN,OAEAnN,aAAA,CACAN,gBAAAX,EAAAoB,QAAAqnB,qBACA7nB,MAAAZ,EAAAoB,QAAAgN,OAEAjN,mBAAA,CACAR,gBAAAX,EAAAoB,QAAA8uB,kBACAtvB,MAAAZ,EAAAoB,QAAAgN,OAGA9M,qBAAA,CACAR,WAAAb,EAAA,GACAA,EAAmB+L,EAAA,GAAoB,CACvCzK,OAAA,QAEAtB,IAEA4B,mBAAA,CACAlB,gBAAAX,EAAAoB,QAAAU,mBACAwZ,UAAA,EACAG,aAAA,GAEAja,sBAAA,CACAb,gBAAAX,EAAAoB,QAAAM,eACAd,MAAAZ,EAAAoB,QAAAe,eACArB,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAC,aACAT,MAAAZ,EAAAoB,QAAA2mB,YACAjnB,WAAA4B,EAAA,GACAA,EAA2BsJ,EAAA,GAAoB,CAC/CpL,MAAA,aAEA8B,MAIAd,8BAAA,CACAjB,gBAAAX,EAAAoB,QAAAM,eACAZ,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAM,kBAIAK,6BAAA,CACApB,gBAAAX,EAAAoB,QAAAqnB,qBACA7nB,MAAAZ,EAAAoB,QAAAgN,MACAtN,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAqnB,wBAIAxmB,8BAAA,CACAtB,gBAAAX,EAAAoB,QAAAqnB,qBACA7nB,MAAAZ,EAAAoB,QAAAgN,MACAtN,UAAA,CACAa,SAAA,CACAhB,gBAAAX,EAAAoB,QAAAqnB,wBAIAvmB,oBAAA,CACAtB,MAAAZ,EAAAoB,QAAAe,gBAEAC,4BAAA,CACAxB,MAAAZ,EAAAoB,QAAAiB,iBAEAqC,MAAA,CACAC,WAAA,UAEA8J,KAAA,CACA7N,MAAAZ,EAAAoB,QAAAmB,cAEAoM,SAAA,CACA/N,MAAAZ,EAAAoB,QAAAsL,mBAGA,OAAW7f,OAAAiY,EAAA,EAAAjY,CAAeuX,EAAA4rB,EAAAD,EAAA7rB,KCxHtBisB,EAAgB,SAAA9/B,GAEpB,SAAA+/B,IACA,IAAA9/B,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAKA,OADA6D,EAAA4U,6BAAA,EACA5U,EASA,OAhBIO,EAAA,UAAiBu/B,EAAA//B,GASrB+/B,EAAA7iC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAmU,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MACA,OAAgB3O,EAAA,cAAoB+T,EAAA,EAAYvU,EAAA,SAAgB,GAAGpE,KAAAuE,MAAA,CAAeqU,iBAAA,wBAAAF,OAAoDyqB,EAAS5vB,EAAAmF,GAAAG,oBAAsCtQ,EAAA,MAErLo7B,EAAuBv/B,EAAA,WAAkB,CACjChE,OAAAmN,EAAA,EAAAnN,CAAY,2CACpBujC,GAhBoB,CAkBlBp7B,EAAA,YCdEq7B,EAAgBxjC,OAAAgN,EAAA,EAAAhN,GAChByjC,EAAc,SAAAjgC,GAElB,SAAAkgC,IACA,IAAAjgC,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAuEA,OAtEA6D,EAAAkgC,aAA6Bn/B,EAAA,YAC7Bf,EAAAmgC,aAA6Bp/B,EAAA,YAC7Bf,EAAAogC,cAAA,SAAAjE,GACA,OAAoBp7B,EAAA,cAAoB80B,EAAA,EAAS,CAAG3e,UAAY3a,OAAAkN,EAAA,EAAAlN,CAAGyD,EAAAmX,YAAA/G,MAAA0lB,UAAqCC,EAAA,EAAkBgF,WAAAnV,KAAA,UAAA9M,aAAA9Y,EAAAU,MAAAkX,WAC1G7W,EAAA,cAAoB86B,EAAW,CAAGf,aAAA96B,EAAAqgC,YAAA,gBAAAnpB,UAA6D3a,OAAAkN,EAAA,EAAAlN,CAAGyD,EAAAmX,YAAAmpB,YAAA7F,6BAAA,EAAA7U,KAAA,eAAAyT,MAAA8C,EAAAoE,aAAA3F,cAAAuB,EAAAvB,cAAAp9B,OAAA2+B,EAAAvB,mBAAAj7B,EAAA2uB,aAAAtuB,EAAAuuB,cAAAiM,uBAAAx6B,EAAAwgC,0BAClHrE,EAAAsE,UAAkC1/B,EAAA,cAAoB86B,EAAW,CAAG3kB,UAAY3a,OAAAkN,EAAA,EAAAlN,CAAGyD,EAAAmX,YAAAupB,cAAAjG,6BAAA,EAAA7U,KAAA,eAAAyT,MAAA8C,EAAAsE,SAAAnS,aAAAtuB,EAAAuuB,cAAAiM,uBAA4K91B,EAAA,MAE/P1E,EAAAuuB,cAAA,SAAAxpB,GACA,IAAA47B,EAAA3gC,EAAAU,MAAAkgC,UAAA77B,EAAA87B,oBAAuFhB,EACvFiB,EAAA/7B,EAAAqS,MAAArS,EAAArG,KACA,GAAAqG,EAAAg8B,SAGA,OAAAh8B,EAAAg8B,SAAAh8B,EAAA,cAEA,IAAAi8B,EAAqCzgC,EAAA,SAAgB,CAAE0gC,oBAAA,EAAArb,KAAA,YAA6C7gB,EAAA,CAAS8P,OAAStU,EAAA,SAAgB,CAAE6P,KAAA,CAAQxU,OAAA,QAAiBwY,MAAA,CAAUyB,WAAA,WAAyB9Q,EAAAm8B,cAAAhqB,UAAiC3a,OAAAkN,EAAA,EAAAlN,CAAG,yBAAAwI,EAAAmS,WAAAE,KAAArS,EAAAo8B,cAAAxhC,EAAAmhC,EAAAM,UAAAr8B,EAAA42B,aAAAptB,QAAAvO,EAAAqhC,eAAAt8B,KACxO,OAAAA,EAAAo8B,eAAAxhC,IAAAmhC,EACwB//B,EAAA,cAAoBugC,EAAA,EAAa/gC,EAAA,SAAgB,CAAEuc,QAAAgkB,GAAoB/7B,EAAAw8B,kBAC3ExgC,EAAA,cAAmB4/B,EAAoBpgC,EAAA,SAAgB,GAAGygC,EAAA,CAAuBxb,cAAgBqa,MAElG9+B,EAAA,cAAmB4/B,EAAoBpgC,EAAA,SAAgB,GAAGygC,EAAA,CAAuBxb,cAAgBqa,MAEpH7/B,EAAAwgC,wBAAA,SAAA5F,GACA,IAAAn6B,EAAAT,EAAAU,MAAAqG,EAAAtG,EAAA+gC,iBAAAC,OAAA,IAAA16B,EAAiG84B,EAAgB94B,EAAA4I,EAAAlP,EAAAihC,oBACjHA,OAAA,IAAA/xB,EAAA,GAAsDA,EAEtDgyB,GAAAD,EAAAN,UAAAM,EAAAN,UAAA/H,MAAA,IAAAnB,OAAA0C,GACAgH,EAAgCrhC,EAAA,SAAgB,GAAGmhC,EAAA,CAAwB7sB,OAAStU,EAAA,SAAgB,CAAE8d,SAAA,CAAYb,SAAA,SAAqBkkB,EAAA7sB,QAAAqC,UAA0C3a,OAAAkN,EAAA,EAAAlN,CAAG,+BAAAmlC,EAAAxqB,WAAAkqB,UAA4E7gC,EAAA,SAAgB,GAAGmhC,EAAAN,UAAA,CAAkC/H,MAAAsI,IAA+BE,cAAkBthC,EAAA,SAAgB,CAAEgZ,SAAA,QAAmBmoB,EAAAG,iBAC3Y,OAAmB9gC,EAAA,cAAmB0gC,EAAqBlhC,EAAA,SAAgB,GAAGqhC,KAE9E5hC,EAAA8hC,cAAA,SAAA3F,GACA,IAAA17B,EAAAT,EAAAU,MAAAqhC,EAAAthC,EAAAshC,cAAAC,EAAAvhC,EAAAuhC,cACAzB,EAAApE,EAAAoE,aAAA3F,EAAAuB,EAAAvB,cAAAwB,EAAAD,EAAAC,SAEA6F,EAAA1B,EAAAwB,EAAA,EAAAxB,EAAA/iC,OAAA,GACA,QAAAmC,IAAAsiC,EAAA,CACAA,EAAAC,oBAAA,EACAtH,EAAA,CAAAqH,GAAA/J,OAAA0C,GACA2F,EAAAwB,EAAAxB,EAAA4B,MAAA,GAAA5B,EAAA4B,MAAA,MACA,IAAAC,EAA8B7hC,EAAA,SAAgB,GAAG47B,EAAA,CAASoE,eAAA3F,kBAM1D,OALAwB,EAAAp8B,EAAAqiC,iBAAAD,GACAJ,GACAA,EAAAC,GAEAG,EAAAhG,WACAgG,IAIApiC,EAAAsiC,YAAA,SAAAnG,GACA,IAAA17B,EAAAT,EAAAU,MAAAqhC,EAAAthC,EAAAshC,cAAAQ,EAAA9hC,EAAA8hC,YACAC,EAAArG,EAAAqG,qBACAjC,EAAApE,EAAAoE,aAAA3F,EAAAuB,EAAAvB,cAAAwB,EAAAD,EAAAC,SACA6F,EAAArH,EAAA,GAEA,QAAAj7B,IAAAsiC,GAAArH,EAAAp9B,OAAAglC,EAAA,CACAP,EAAAC,oBAAA,EACAtH,IAAAuH,MAAA,GAEA5B,EAAAwB,EAAA,CAAAE,GAAA/J,OAAAqI,KAAArI,OAAA,CAAA+J,IACA,IAAAG,EAA8B7hC,EAAA,SAAgB,GAAG47B,EAAA,CAASoE,eAAA3F,kBAM1D,OALAwB,EAAAp8B,EAAAqiC,iBAAAD,GACAG,GACAA,EAAAN,GAEAG,EAAAhG,WACAgG,IAIApiC,EA+CA,OAxHIO,EAAA,UAAiB0/B,EAAAlgC,GA2ErBkgC,EAAAhjC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAwW,EAAAzW,EAAAyW,UAAAmiB,EAAA54B,EAAA44B,MAAAuB,EAAAn6B,EAAAm6B,cAAA6F,EAAAhgC,EAAAggC,SAAA5rB,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MAAA3I,EAAAtG,EAAAq8B,oBAAA,IAAA/1B,EAAA5K,KAAA2lC,cAAA/6B,EAAA4I,EAAAlP,EAAA+8B,kBAAA,IAAA7tB,EAAAxT,KAAAmmC,YAAA3yB,EACA8yB,EAAA,CACAlC,aAAAlH,EAAA8I,QACAvH,gBAAAuH,QACAK,qBAAA5H,EAAAuH,QAAA3kC,OACAijC,WACArE,SAAA,IAGA,OADAjgC,KAAAgb,YAA2B4oB,EAAalrB,EAAA,CAAUnF,UAClC3O,EAAA,cAAoBq9B,EAAW,CAAGtD,aAAA3+B,KAAAgkC,aAAAjpB,YAAAilB,KAAAsG,EAAA3F,eAAAU,aAAAkB,aAAAviC,KAAAikC,iBAElDH,EAAAhjC,UAAAwc,MAAA,WACA,IAAAipB,EAAAvmC,KAAA+jC,aAAAxmB,QACAgpB,KAAAjpB,SAEAwmB,EAAAhjC,UAAAkiC,UAAA,WACAhjC,KAAAgkC,aAAAzmB,SAAAvd,KAAAgkC,aAAAzmB,QAAAylB,aAEAc,EAAAhjC,UAAAokC,eAAA,SAAAt8B,GACA,gBAAA3H,GAEA2H,EAAA49B,UAGA59B,EAAAwJ,SACAxJ,EAAAwJ,QAAAnR,EAAA2H,KAIAk7B,EAAAhjC,UAAAolC,iBAAA,SAAAlG,GACA,IAAAoE,EAAApE,EAAAoE,aAAA9/B,EAAA07B,EAAAsE,gBAAA,IAAAhgC,EAAA,GAAAA,EAAAm6B,EAAAuB,EAAAvB,cACAgI,EAAA,SAAAC,EAAAnpB,GACA,IAAAjZ,EAAAiZ,EAAA0iB,SACA,OAAAyG,QADA,IAAApiC,EAAAiZ,EAAA5X,IAAArB,IAMA,OAHA8/B,EAAAuC,OAAAF,EAAA,IACAnC,EAAAqC,OAAAF,EAAA,IACAhI,EAAAp9B,OAAA,eACAivB,KAAA,MAEAwT,EAAAptB,aAAA,CACAwmB,MAAA,GACAuB,cAAA,IAEAqF,EAzHkB,CA0HhBv7B,EAAA,GCpIFiE,EAAAC,EAAAC,EAAA,sBAAAk6B,IAIO,IAAAA,EAAiBxmC,OAAA+O,EAAA,EAAA/O,CAAOyjC,ECJX,SAAAt/B,GACpB,IAAAwW,EAAAxW,EAAAwW,UAAAxH,EAAAhP,EAAAgP,MACAoB,EAAApB,EAAAoB,QACA,OACAV,KAAA,CACAV,EAAA4E,MAAAgI,OACA,gBACA,CACAd,QAAA,OACAnL,gBAAAS,EAAAM,eACAsE,QAAA,SACA9Z,OAAA,QAEAsb,GAEAopB,WAAA,CACA,+BACA,CACA/hB,SAAA,IACA/C,QAAA,OACAe,WAAA,YAGAmkB,aAAA,CACA,iCACA,CACA1jB,WAAA,IACAxB,QAAA,OACAe,WAAA,mBDxBwD5c,EAAA,CACxD+d,MAAA,qDELOslB,iFACP,SAAAA,GAEAA,IAAA,mBAEAA,IAAA,eAJA,CAKCA,MAAA,oCCAD7sB,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAChB0mC,EAAW,SAAAljC,GAEf,SAAAmjC,IACA,IAAAljC,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAIA,OAHA6D,EAAAmjC,iBAAA,SAAAziC,GACA,OAAmBK,EAAA,cAAmB,KAAOmW,UAAAlX,EAAAmX,YAAAisB,SAAuC1iC,EAAAoc,UAEpF9c,EA0BA,OAhCIO,EAAA,UAAiB2iC,EAAAnjC,GAQrBmjC,EAAAjmC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAwW,EAAAzW,EAAAyW,UAAA2V,EAAApsB,EAAAosB,aAAAla,EAAAlS,EAAAkS,MAAA+a,EAAAjtB,EAAAitB,gBAAA2V,EAAA5iC,EAAA4iC,sBAAAxuB,EAAApU,EAAAoU,OAAA0C,EAAA9W,EAAA8W,GAAAoT,EAAAlqB,EAAAkqB,SAAA5jB,EAAAtG,EAAA6iC,uBAAA,IAAAv8B,EAAA5K,KAAAgnC,iBAAAp8B,EAAAqvB,EAAA31B,EAAA21B,cAAA1mB,EAAAjP,EAAAiP,MAOA,OANAvT,KAAAgb,YAAAhB,EAAAtB,EAAA,CACAnF,QACAwH,aAAA2V,KAAA3V,UACAvE,QACAgY,aAEgB5pB,EAAA,cAAoBssB,EAAA,EAAS9sB,EAAA,SAAgB,CAAEsB,OAAAu0B,EAAA1I,kBAAA2V,yBAAwGxW,EAAgBtwB,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,EAAa,SAAY8L,UAAA/a,KAAAgb,YAAA/G,OAC/NrP,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA2F,QAAAvF,KAAAqO,KAAA,UAAA4J,aAAArzB,KAAAuE,MAAA8uB,aAAAE,aAAAvzB,KAAAuE,MAAAgvB,cAA6I4T,EAAAnnC,KAAAuE,MAAAvE,KAAAgnC,qBAGrLD,EAAArwB,aAAA,CACA6a,gBAAyBC,EAAA,EAAe4V,UACxC5wB,MAAe6wB,EAAA,EAAYlnB,OAC3BqO,SAAA,QACAkC,aAAA,CACAS,eAAA,EACAmW,UAAA,GACAlW,SAAA,EACAmW,iBAAA,EACAlW,YAAA,IAGA0V,EAjCe,CAkCbx+B,EAAA,YCtCKi/B,EAAcpnC,OAAA+O,EAAA,EAAA/O,CAAO0mC,ECDrB,SAAAviC,GACP,IAAAwW,EAAAxW,EAAAwW,UAAAvE,EAAAjS,EAAAiS,MAAAgY,EAAAjqB,EAAAiqB,SAAAjb,EAAAhP,EAAAgP,MACAoB,EAAApB,EAAAoB,QAAAwD,EAAA5E,EAAA4E,MACA,OACAlE,KAAA,CACA,aACAV,EAAA4E,MAAAgI,OACY8N,EAAA,EAAmBwZ,UAC/B,CACA9nB,WAAAhL,EAAAK,MACAuE,QAAA,MACAmuB,eAAA,QACAlZ,YAEAhY,IAAsB6wB,EAAA,EAAYM,MAAA,CAClCD,eAAA,MAEAlxB,IAAsB6wB,EAAA,EAAYO,MAAA,CAClCF,eAAA,SAEA3sB,GAEA4F,QAAA,CACA,qBACAxI,EAAApH,MACA4D,EAAAe,eACA,CACAmmB,SAAA,aACAC,aAAA,aACA9sB,SAAA,WAGAi4B,QAAA,CACA,qBACA,CACA3tB,OAAA,WDlCkD9V,EAAA,CAClD+d,MAAA,YEEIsmB,EAAgBznC,OAAAgN,EAAA,EAAAhN,GAChB0nC,EAAe,SAAAlkC,GAGnB,SAAAmkC,EAAAxjC,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAyDA,OAvDA6D,EAAAmkC,aAA6BpjC,EAAA,YAG7Bf,EAAAokC,eAAA,EACApkC,EAAAqkC,KAAA,WACArkC,EAAAskC,gBAAA,IAEAtkC,EAAAkkB,QAAA,WACAlkB,EAAAukC,gBAGAvkC,EAAAwkC,qBAAA,SAAApnC,GACA,IAAAqnC,EAAAzkC,EAAAU,MAAA+jC,aAKA,GAJAP,EAAAQ,wBAAAR,EAAAQ,yBAAA1kC,GACAkkC,EAAAQ,uBAAAxgB,UAEAggB,EAAAQ,uBAAA1kC,OACAL,IAAA8kC,EAAA,CACA,IAAAE,EAAA3kC,EAAA4kC,oBACA,GAAAD,IAAwCpoC,OAAA4O,EAAA,EAAA5O,CAAWooC,GACnD,OAGAvnC,EAAAyE,QAA6BtF,OAAA2N,EAAA,EAAA3N,CAAqBa,EAAAyE,OAAA7B,EAAA4kC,uBAIlD5kC,EAAAskC,gBAAA,GACAtkC,EAAA6kC,uBAGA7kC,EAAA8kC,qBAAA,SAAA1nC,GACA4C,EAAAU,MAAAqkC,YACA/kC,EAAA6kC,qBACA7kC,EAAAokC,cAAApkC,EAAAskB,OAAAnmB,WAAA,WACA6B,EAAAskC,gBAAA,IACiBtkC,EAAAU,MAAAqkC,aAGjB/kC,EAAAskC,gBAAA,GAEAJ,EAAAQ,yBAAA1kC,IACAkkC,EAAAQ,4BAAA/kC,IAGAK,EAAA6kC,mBAAA,WACA7kC,EAAAskB,OAAAlmB,aAAA4B,EAAAokC,gBAGApkC,EAAAukC,aAAA,WACAvkC,EAAAskC,gBAAA,IAEAtkC,EAAAG,MAAA,CACA6kC,kBAAA,GAEAhlC,EAoDA,OAhHIO,EAAA,UAAiB2jC,EAAAnkC,GA+DrBmkC,EAAAjnC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAmsB,EAAApsB,EAAAosB,aAAApoB,EAAAhE,EAAAgE,SAAAqY,EAAArc,EAAAqc,QAAAnK,EAAAlS,EAAAkS,MAAA+a,EAAAjtB,EAAAitB,gBAAA2V,EAAA5iC,EAAA4iC,sBAAAnsB,EAAAzW,EAAAwkC,cAAA1tB,EAAA9W,EAAA8W,GAAAxQ,EAAAtG,EAAAykC,0BAAA,IAAAn+B,KAAAo+B,EAAA1kC,EAAA0kC,aAAAtwB,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MACAvT,KAAAgb,YAA2B6sB,EAAanvB,EAAA,CACxCnF,QACAwH,cAEA,IAAA8tB,EAAA7oC,KAAAgE,MAAA6kC,iBACAI,EAAA7tB,GAA8Bhb,OAAA0O,EAAA,EAAA1O,CAAK,WACnC8oC,KAAAvoB,GAAAqoB,KAAA7B,iBAAA6B,EAAA7B,mBACAgC,EAAAN,GAAAK,EACAvtB,EAAAotB,GAAAF,GAAAK,EAAAD,OAAAzlC,EACA,OAAgBoB,EAAA,cAAmB,MAAQR,EAAA,SAAgB,CAAE2W,UAAA/a,KAAAgb,YAAA/G,KAAApP,IAAA7E,KAAAgoC,cAA2D,CAAGxjB,eAAAxkB,KAAAqoC,sBAA4C,CAAGe,cAAAppC,KAAAooC,cAAmC,CAAG/U,aAAArzB,KAAAqoC,qBAAA9U,aAAAvzB,KAAA2oC,qBAAA9rB,mBAAAlB,IAChNrT,EACA6gC,GAA4BvkC,EAAA,cAAoB4iC,EAASpjC,EAAA,SAAgB,CAAEgX,GAAA6tB,EAAAzyB,QAAAmK,UAAAsZ,cAAAj6B,KAAAyoC,oBAAAlX,kBAAA2V,wBAAAxW,aAAuLtwB,OAAA0O,EAAA,EAAA1O,CAAM,GAAGswB,EAAA,CAC3Q2C,aAAArzB,KAAAqoC,qBACA9U,aAAAvzB,KAAA2oC,uBACiBtV,aAAArzB,KAAAqoC,qBAAA9U,aAAAvzB,KAAA2oC,sBAAuFvoC,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAAa+5B,MAEhJjB,EAAAjnC,UAAAiH,qBAAA,WACAggC,EAAAQ,wBAAAR,EAAAQ,yBAAAvoC,OACA+nC,EAAAQ,4BAAA/kC,IAGAukC,EAAAjnC,UAAA2nC,kBAAA,WACA,GAAAzoC,KAAAgoC,aAAAzqB,QAAA,CAGA,IAAA+qB,EAAAtoC,KAAAuE,MAAA+jC,aAGA,QAAA9kC,IAAA8kC,EACA,OAAAA,GACA,KAAqBzB,EAAmBwC,OACxC,OAAArpC,KAAAgoC,aAAAzqB,QAAA+rB,cACA,KAAqBzC,EAAmB0C,KACxC,OAAAvpC,KAAAgoC,aAAAzqB,QAGA,OAAAvd,KAAAgoC,aAAAzqB,UAEAwqB,EAAAjnC,UAAAqnC,eAAA,SAAAU,GACA,IAAAhlC,EAAA7D,KACAA,KAAAgE,MAAA6kC,sBACA7oC,KAAAkF,SAAA,CAA2B2jC,oBAAqC,WAAe,OAAAhlC,EAAAU,MAAAilC,iBAAA3lC,EAAAU,MAAAilC,gBAAA3lC,EAAAG,MAAA6kC,qBAG/Ed,EAAArxB,aAAA,CACAF,MAAe6wB,EAAA,EAAYlnB,QAE3B4nB,EAjHmB,CAkHjBx/B,EAAA,YCxHFqb,EAAA,CACA3P,KAAA,kBCFAzH,EAAAC,EAAAC,EAAA,sBAAAy4B,IAGO,IAAAA,EAAkB/kC,OAAA+O,EAAA,EAAA/O,CAAO0nC,EDCZ,SAAAvjC,GACpB,IAAAwW,EAAAxW,EAAAwW,UAAAxH,EAAAhP,EAAAgP,MAEA,OACAU,KAAA,CAFqB7T,OAAA4jB,EAAA,EAAA5jB,CAAmBwjB,EAAArQ,GAGxCU,KACA,CACAoL,QAAA,UAEAtE,UCV0DvX,EAAA,CAC1D+d,MAAA,sJCCAvH,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GACpBqpC,EAAA,GACIC,EAAa,SAAA9lC,GAEjB,SAAA+lC,EAAAplC,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KA0FA,OAzFA6D,EAAA+lC,aAA6BxpC,OAAAiN,EAAA,EAAAjN,GAC7ByD,EAAAuW,SAAA,SAAAnZ,GACA4C,EAAAU,MAAA+V,SACAzW,EAAAU,MAAA+V,QAAArZ,GAEA4C,EAAAqB,SAAA,CAA4B2kC,WAAA,IAC5BhmC,EAAAU,MAAAulC,mBACAjmC,EAAAkmC,UAAAlmC,EAAAG,MAAA8B,QAGAjC,EAAA0W,QAAA,SAAAtZ,GACA4C,EAAAU,MAAAiW,QACA3W,EAAAU,MAAAiW,OAAAvZ,GAEA4C,EAAAqB,SAAA,CAA4B2kC,WAAA,IAC5BhmC,EAAAU,MAAAylC,oBACAnmC,EAAAkmC,UAAAlmC,EAAAG,MAAA8B,QAGAjC,EAAAiX,eAAA,SAAAvW,GACA,IAAA0T,EAAA1T,EAAA0T,MAAA4e,EAAAtyB,EAAAsyB,SAEAqB,EAAAr0B,EAAAmX,YAAA+V,mBACAltB,EAAAmX,YAAA+V,mBAAA9Y,WACAzU,EACA,OAAAyU,EACwBrT,EAAA,cAAoBuzB,EAAA,EAAK,CAAGtB,WAAA7Z,QAAAnZ,EAAAsX,IAAAzC,OAAAwf,EAAAxd,SAAAnW,EAAAmW,UAAwFnW,EAAA0T,OAE5I,MAEApU,EAAAomC,qBAAA,SAAA1lC,GACA,OAAAA,EAAA2lC,YACuBtlC,EAAA,cAAmB,QAAUmW,UAAAlX,EAAAmX,YAAAkvB,aAA2C3lC,EAAA2lC,aAE/F,MAEArmC,EAAAsmC,eAAA,SAAAj4B,GACAA,EAAAk4B,UACA,IACAtkC,EADAoM,EAAAxM,OACAI,MAEA,GAAAA,IAAAjC,EAAAwmC,aAAA,CAGAxmC,EAAAwmC,aAAAvkC,EACAjC,EAAAqB,SAAA,CAA4BY,SAAe,WAC3CjC,EAAAymC,qBACAzmC,EAAAU,MAAAoW,UACA9W,EAAAU,MAAAoW,SAAAzI,EAAApM,GAEAjC,EAAAU,MAAA2xB,WACAryB,EAAAU,MAAA2xB,UAAApwB,KAGA,IAAAxB,EAAAT,EAAAU,MAAAulC,EAAAxlC,EAAAwlC,kBAAAE,EAAA1lC,EAAA0lC,mBACAF,GAAAE,GACAnmC,EAAA0mC,iBAAAzkC,GAEAjC,EAAAU,MAAAimC,gBACA3mC,EAAAU,MAAAimC,eAAA1kC,KAGAjC,EAAAqmB,kBAAA,CACAugB,UAAA,YACAC,YAAA,SACAC,cAAA,iBACAzU,UAAA,aAEAryB,EAAAqX,uBAAA,CACApV,MAAA,iBAEAjC,EAAAsX,IAAA5W,EAAA6W,IAAgChb,OAAA0O,EAAA,EAAA1O,CAAK,aACrCyD,EAAA+mC,eAA+BxqC,OAAA0O,EAAA,EAAA1O,CAAK,6BACpCoD,IAAAe,EAAAuB,MACAjC,EAAAwmC,aAAA9lC,EAAAuB,WAEAtC,IAAAe,EAAAsmC,aACAhnC,EAAAwmC,aAAA9lC,EAAAsmC,aAGAhnC,EAAAwmC,aAAAZ,EAEA5lC,EAAAG,MAAA,CACA8B,MAAAjC,EAAAwmC,aACAR,WAAA,EACA/S,aAAA,IAEAjzB,EAAA0mC,iBAAA1mC,EAAAskB,OAAAya,SAAA/+B,EAAAkmC,UAAAlmC,EAAAU,MAAAumC,wBACAjnC,EAAAknC,gBAAA,EACAlnC,EAiSA,OA7XIO,EAAA,UAAiBulC,EAAA/lC,GA8FrBxD,OAAA+F,eAAAwjC,EAAA7oC,UAAA,SAIAoD,IAAA,WACA,OAAAlE,KAAAgE,MAAA8B,OAEAO,YAAA,EACAL,cAAA,IAEA2jC,EAAA7oC,UAAAgE,kBAAA,WACA9E,KAAAgrC,YAAA,EACAhrC,KAAAsqC,qBACAtqC,KAAAuE,MAAA0mC,gBACAjrC,KAAA+pC,UAAA/pC,KAAAgE,MAAA8B,QAGA6jC,EAAA7oC,UAAAwa,0BAAA,SAAAC,GACA,IAAAivB,EAAAxqC,KAAAuE,MAAAimC,eAGA,GAAAjvB,EAAAzV,QAAA9F,KAAAgE,MAAA8B,aAAAtC,IAAA+X,EAAAzV,YAAAtC,IAAAxD,KAAAuE,MAAAuB,OAAA,CACA0kC,GACAA,EAAAjvB,EAAAzV,OAEA9F,KAAAmb,IAAAI,EAAAH,IAAApb,KAAAmb,IACAnb,KAAAkrC,UAAA3vB,EAAAzV,OACA,IAAAgkC,EAAAvuB,EAAAuuB,kBAAAE,EAAAzuB,EAAAyuB,mBACAF,GAAAE,GACAhqC,KAAAuqC,iBAAAhvB,EAAAzV,OAIAyV,EAAAsvB,eAAA7qC,KAAAuE,MAAAsmC,mBAAArnC,IAAA+X,EAAAzV,OACA9F,KAAAkrC,UAAA3vB,EAAAsvB,gBAIAtvB,EAAA4vB,aAAAnrC,KAAAuE,MAAA4mC,WAAAnrC,KAAAgE,MAAA6lC,YACA7pC,KAAAorC,8BAAA,EACAprC,KAAAqrC,gCAAA,CAAArrC,KAAAsrC,eAAAtrC,KAAAurC,gBAGA5B,EAAA7oC,UAAA4kB,mBAAA,WACA,GAAA1lB,KAAAorC,+BAGAprC,KAAAorC,8BAAA,EACAprC,KAAAsd,QACAtd,KAAAqrC,iCAAA,CACA,IAAA/mC,EAAAtE,KAAAqrC,gCAAA3oC,EAAA4B,EAAA,GAAA3B,EAAA2B,EAAA,GACA,OAAA5B,GAAA,OAAAC,GACA3C,KAAAwrC,kBAAA9oC,EAAAC,KAKAgnC,EAAA7oC,UAAAiH,qBAAA,WACA/H,KAAAgrC,YAAA,GAEArB,EAAA7oC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAknC,EAAAnnC,EAAAmnC,WAAA1wB,EAAAzW,EAAAyW,UAAAL,EAAApW,EAAAoW,SAAA+vB,EAAAnmC,EAAAmmC,UAAAthB,EAAA7kB,EAAA6kB,UAAAuiB,EAAApnC,EAAAonC,eAAAzzB,EAAA3T,EAAA2T,MAAAkzB,EAAA7mC,EAAA6mC,UAAAtU,EAAAvyB,EAAAuyB,SAAA8U,EAAArnC,EAAAqnC,WAAAjB,EAAApmC,EAAAomC,YACAkB,EAAAtnC,EAAAsnC,OAAAC,EAAAvnC,EAAAunC,UAAAC,EAAAxnC,EAAAwnC,OAAAv4B,EAAAjP,EAAAiP,MAAAmF,EAAApU,EAAAoU,OAAAqzB,EAAAznC,EAAAynC,iBAAAnhC,EAAAtG,EAAAqmC,qBAAA,IAAA//B,EAAA5K,KAAAgsC,eAAAphC,EACA4I,EAAAlP,EAAA2nC,eACAA,OAAA,IAAAz4B,EAAAxT,KAAAksC,gBAAA14B,EAAAyC,EAAA3R,EAAA6nC,sBAAA,IAAAl2B,EAAAjW,KAAAosC,gBAAAn2B,EAAAC,EAAA5R,EAAAsX,qBAAA,IAAA1F,EAAAlW,KAAA8a,eAAA5E,EAAAE,EAAA9R,EAAAuU,2BAAA,IAAAzC,EAAApW,KAAAiqC,qBAAA7zB,EACAyzB,EAAA7pC,KAAAgE,MAAA6lC,UACA/S,EAAA92B,KAAAqsC,cAkBA,OAjBArsC,KAAAgb,YAAAhB,EAAAtB,EAAA,CACAnF,QACAwH,YACAL,WACA4xB,QAAAzC,EACAhT,WACAsU,YACAoB,WAAAt0B,EACAu0B,kBAAA1V,EACA2U,aACAI,YACAY,UAAAtjB,EACAwiB,aACAlB,YACAiB,iBACAK,qBAEgBnnC,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA/G,MAChCrP,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA0xB,SACxC9wB,EAAA5b,KAAAuE,MAAAvE,KAAA8a,gBACgBlW,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA2xB,kBAC5CnpC,IAAAknC,GAAA1qC,KAAAuE,MAAAomC,gBAAgF/lC,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA4wB,QAAqCjB,EAAA3qC,KAAAuE,MAAAvE,KAAAgsC,uBACjJxoC,IAAAooC,GAAA5rC,KAAAuE,MAAA0nC,iBAA4ErnC,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA4wB,QAAqCK,EAAAjsC,KAAAuE,MAAAvE,KAAAksC,kBAC7If,EAAAnrC,KAAA4sC,kBAAA5sC,KAAA6sC,gBACApC,GAAAthB,IAAgDvkB,EAAA,cAAoBuY,EAAA,EAAM/Y,EAAA,SAAgB,CAAE2W,UAAA/a,KAAAgb,YAAAgH,MAAmCmH,UAC/H3lB,IAAAsoC,GAAA9rC,KAAAuE,MAAA4nC,iBAA4EvnC,EAAA,cAAmB,OAASmW,UAAA/a,KAAAgb,YAAA8wB,QAAqCK,EAAAnsC,KAAAuE,MAAAvE,KAAAosC,oBAC7IpsC,KAAA8sC,yBAA6CloC,EAAA,cAAmB,QAAUwW,GAAApb,KAAA4qC,gBAC1E/xB,EAAA7Y,KAAAuE,MAAAvE,KAAAiqC,sBACAnT,GAAiClyB,EAAA,cAAmB,OAAS6kB,KAAA,SACzC7kB,EAAA,cAAoBiI,EAAA,EAAa,KAC7BjI,EAAA,cAAmB,KAAOmW,UAAA/a,KAAAgb,YAAA8b,cACtBlyB,EAAA,cAAmB,QAAU89B,qBAAA,iBAAwC5L,SAKjG6S,EAAA7oC,UAAAwc,MAAA,WACAtd,KAAA4pC,aAAArsB,SACAvd,KAAA4pC,aAAArsB,QAAAD,SAMAqsB,EAAA7oC,UAAAisC,KAAA,WACA/sC,KAAA4pC,aAAArsB,SACAvd,KAAA4pC,aAAArsB,QAAAwvB,QAMApD,EAAA7oC,UAAAksC,OAAA,WACAhtC,KAAA4pC,aAAArsB,SACAvd,KAAA4pC,aAAArsB,QAAAyvB,UAMArD,EAAA7oC,UAAAmsC,kBAAA,SAAAnnC,GACA9F,KAAA4pC,aAAArsB,UACAvd,KAAA4pC,aAAArsB,QAAA+tB,eAAAxlC,IAMA6jC,EAAA7oC,UAAAosC,gBAAA,SAAApnC,GACA9F,KAAA4pC,aAAArsB,UACAvd,KAAA4pC,aAAArsB,QAAAguB,aAAAzlC,IAGA1F,OAAA+F,eAAAwjC,EAAA7oC,UAAA,kBAIAoD,IAAA,WACA,OAAAlE,KAAA4pC,aAAArsB,QAAAvd,KAAA4pC,aAAArsB,QAAA+tB,gBAAA,GAEAjlC,YAAA,EACAL,cAAA,IAEA5F,OAAA+F,eAAAwjC,EAAA7oC,UAAA,gBAIAoD,IAAA,WACA,OAAAlE,KAAA4pC,aAAArsB,QAAAvd,KAAA4pC,aAAArsB,QAAAguB,cAAA,GAEAllC,YAAA,EACAL,cAAA,IAOA2jC,EAAA7oC,UAAA0qC,kBAAA,SAAA9oC,EAAAC,GACA3C,KAAA4pC,aAAArsB,SACAvd,KAAA4pC,aAAArsB,QAAAiuB,kBAAA9oC,EAAAC,IAGAgnC,EAAA7oC,UAAAoqC,UAAA,SAAAplC,GACA,IAAAjC,EAAA7D,KACAA,KAAAqqC,aAAAvkC,EACA9F,KAAAkF,SAAA,CACAY,SAAA2jC,EACA3S,aAAA,IACS,WACTjzB,EAAAymC,wBAIAX,EAAA7oC,UAAAkrC,eAAA,SAAAznC,GACA,IAAAmmC,EAAAnmC,EAAAmmC,YACA,OAAe9lC,EAAA,cAAmB,QAAU0nB,MAAA,CAAS2C,cAAA,QAAyByb,IAE9Ef,EAAA7oC,UAAAorC,gBAAA,SAAA3nC,GACA,IAAAqnC,EAAArnC,EAAAqnC,OACA,OAAehnC,EAAA,cAAmB,QAAU0nB,MAAA,CAAS2C,cAAA,QAAyB2c,IAE9EjC,EAAA7oC,UAAAsrC,gBAAA,SAAA7nC,GACA,IAAAunC,EAAAvnC,EAAAunC,OACA,OAAelnC,EAAA,cAAmB,QAAU0nB,MAAA,CAAS2C,cAAA,QAAyB6c,IAE9E1rC,OAAA+F,eAAAwjC,EAAA7oC,UAAA,iBACAoD,IAAA,WACA,IAAA4yB,EAAA92B,KAAAgE,MAAA8yB,aAIA,OAHAA,GAAA92B,KAAAuE,MAAAuyB,eACAA,EAAA92B,KAAAuE,MAAAuyB,cAEAA,GAEAzwB,YAAA,EACAL,cAAA,IAEA5F,OAAA+F,eAAAwjC,EAAA7oC,UAAA,2BAKAoD,IAAA,WACA,IAAAK,EAAAvE,KAAAuE,MACA,SAAAA,EAAAsU,qBAAAtU,EAAA2lC,aAAAlqC,KAAAqsC,gBAEAhmC,YAAA,EACAL,cAAA,IAEA2jC,EAAA7oC,UAAA8rC,gBAAA,WACA,IAAAO,EAA4B/sC,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,EAAkB,kBACzE,OAAgBrK,EAAA,cAAmB,WAAaR,EAAA,SAAgB,CAAEgX,GAAApb,KAAAmb,KAAegyB,EAAA,CAAkBtoC,IAAA7E,KAAA4pC,aAAA9jC,MAAA9F,KAAAgE,MAAA8B,MAAAsnC,QAAAptC,KAAAmqC,eAAAxvB,SAAA3a,KAAAmqC,eAAApvB,UAAA/a,KAAAgb,YAAAqyB,MAAAxwB,mBAAA7c,KAAA8sC,wBAAA9sC,KAAA4qC,eAAA5qC,KAAAuE,MAAA,oBAAA+oC,iBAAAttC,KAAAgE,MAAA8yB,aAAAna,aAAA3c,KAAAuE,MAAAkX,UAAA8xB,SAAAvtC,KAAAuE,MAAAgpC,SAAAjzB,QAAAta,KAAAoa,SAAAI,OAAAxa,KAAAua,YAEnGovB,EAAA7oC,UAAA+rC,aAAA,WACA,IAAAxyB,EAAyBja,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,EAAe,kBACnE,OAAgBrK,EAAA,cAAmB,QAAUR,EAAA,SAAgB,CAAEmY,KAAA,OAAAnB,GAAApb,KAAAmb,KAA6Bd,EAAA,CAAexV,IAAA7E,KAAA4pC,aAAA9jC,MAAA9F,KAAAgE,MAAA8B,MAAAsnC,QAAAptC,KAAAmqC,eAAAxvB,SAAA3a,KAAAmqC,eAAApvB,UAAA/a,KAAAgb,YAAAqyB,MAAA1wB,aAAA3c,KAAAuE,MAAAkX,UAAAoB,mBAAA7c,KAAA8sC,wBAAA9sC,KAAA4qC,eAAA5qC,KAAAuE,MAAA,oBAAA+oC,iBAAAttC,KAAAgE,MAAA8yB,aAAAyW,SAAAvtC,KAAAuE,MAAAgpC,SAAAjzB,QAAAta,KAAAoa,SAAAI,OAAAxa,KAAAua,YAE3GovB,EAAA7oC,UAAAipC,UAAA,SAAAjkC,GACA,IAAAjC,EAAA7D,KACAsE,EAAAtE,KAAAuE,MAAAulC,EAAAxlC,EAAAwlC,kBAAAE,EAAA1lC,EAAA0lC,mBAEA,GAAAhqC,KAAAwtC,uBAAA1nC,GAAAgkC,GAAAE,EAAA,CAGAhqC,KAAAwtC,qBAAA1nC,EACA,IACA2nC,GAAAC,EADA1tC,KAAAuE,MAAAmpC,mBACA5nC,GAAA,IACA,QAAAtC,IAAAiqC,EACA,oBAAAA,EACAztC,KAAAkF,SAAA,CAA+B4xB,aAAA2W,IAC/BztC,KAAA2tC,qBAAA7nC,EAAA2nC,OAEA,CACA,IAAAG,IAAA5tC,KAAA+qC,gBACA0C,EAAA1oC,KAAA,SAAA+xB,GACAjzB,EAAAmnC,YAAA4C,IAAA/pC,EAAAknC,iBACAlnC,EAAAqB,SAAA,CAAwC4xB,iBAExCjzB,EAAA8pC,qBAAA7nC,EAAAgxB,UAKA92B,KAAA2tC,qBAAA7nC,EAAA,MAGA6jC,EAAA7oC,UAAA6sC,qBAAA,SAAA7nC,EAAAgxB,GACA92B,KAAAgrC,YAAAllC,IAAA9F,KAAAgE,MAAA8B,OAAA9F,KAAAuE,MAAAspC,0BACA7tC,KAAAuE,MAAAspC,yBAAA/W,EAAAhxB,IAGA6jC,EAAA7oC,UAAAwpC,mBAAA,WACA,GAAAtqC,KAAA4pC,aAAArsB,SAAAvd,KAAAuE,MAAAwnC,kBAAA/rC,KAAAuE,MAAA4mC,UAAA,CACA,IAAA2C,EAAA9tC,KAAA4pC,aAAArsB,QACAuwB,EAAAxhB,MAAA7sB,OAAA,GACAquC,EAAAxhB,MAAA7sB,OAAAquC,EAAAx2B,aAAA,OAGAqyB,EAAAjzB,aAAA,CACAy0B,WAAA,EACAU,WAAA,EACAE,kBAAA,EACAJ,YAAA,EACAF,YAAA,EACA9wB,SAAA,aAGA6vB,eAAA,aAGAqD,yBAAA,aAGAH,kBAAA,aACA5C,uBAAA,IACAhU,aAAA,GACAgT,mBAAA,EACAE,oBAAA,EACAiB,gBAAA,GAEAtB,EA9XiB,CA+XfphC,EAAA,gDCrYFwlC,EAAA,CACA95B,KAAA,eACAi2B,YAAA,2BACApT,aAAA,4BACAuW,MAAA,qBACAV,WAAA,0BACAf,OAAA,sBACAE,OAAA,sBACAY,QAAA,uBACAvB,UAAA,0BACAM,WAAA,2BACAE,WAAA,2BACAqC,YAAA,4BACAnX,SAAA,cACAnc,SAAA,cACAuzB,OAAA,aAEA,SAAAC,EAAA3pC,GACA,IAAAonC,EAAApnC,EAAAonC,WAAAjxB,EAAAnW,EAAAmW,SAAA4xB,EAAA/nC,EAAA+nC,QACA,kBACA,OACAr4B,KAAA,CACA03B,GACAjxB,GAAA,CACAvG,MAAA5P,EAAAgP,MAAAoB,QAAAiB,iBAEA+1B,GAAA,CACAtqB,SAA8BlJ,EAAA,EAASgI,OACvCiB,YAAA,EACAwM,YAAA,GACAC,aAAA,EACAvM,WAAA,OACA7hB,OAAA,IAEAksC,GACAW,GAAA,CACAj4B,WAAA/P,EAAA,GACAA,EAA2Bib,EAAA,GAAoB,CAC/C9f,OAAA,IAEA6E,MAIA,IAAAA,GC7CAkI,EAAAC,EAAAC,EAAA,sBAAAyhC,IAGO,IAAAA,EAAgB/tC,OAAA+O,EAAA,EAAA/O,CAAOspC,ED6CvB,SAAAnlC,GACP,IAwUAD,EAAAsG,EAAA4I,EAAAyC,EAAAC,EAAAE,EAAAqH,EAAAC,EAAAC,EAxUApK,EAAAhP,EAAAgP,MAAAwH,EAAAxW,EAAAwW,UAAAL,EAAAnW,EAAAmW,SAAA4xB,EAAA/nC,EAAA+nC,QAAAzV,EAAAtyB,EAAAsyB,SAAAsU,EAAA5mC,EAAA4mC,UAAAoB,EAAAhoC,EAAAgoC,SAAAd,EAAAlnC,EAAAknC,WAAAE,EAAApnC,EAAAonC,WAAAc,EAAAloC,EAAAkoC,QAAAZ,EAAAtnC,EAAAsnC,UAAAW,EAAAjoC,EAAAioC,gBAAA/B,EAAAlmC,EAAAkmC,UAAAiB,EAAAnnC,EAAAmnC,eAAAK,EAAAxnC,EAAAwnC,iBACAt4B,EAAAF,EAAAE,eACAkQ,EAAqBvjB,OAAA4jB,EAAA,EAAA5jB,CAAmB2tC,EAAAx6B,GACxC66B,EAAA,CACAzuB,WAAAlM,EAAAsK,mBACA5J,MAAAuG,EAAAjH,EAAA0L,aAAA1L,EAAA2oB,qBACA/c,QAAA,OACAe,WAAA,SACA7G,QAAA,SACA+H,WAAA,EACA5H,WAAA,UAEA,OACAzF,KAAA,CACA0P,EAAA1P,KACAV,EAAA4E,MAAAgI,OACA0W,GAAAlT,EAAAkT,SACAnc,GAAAiJ,EAAAjJ,SACA4xB,GAAA3oB,EAAAsqB,OACA9C,GAAAxnB,EAAAwnB,UACAM,GAAA9nB,EAAA8nB,WACAE,GAAAhoB,EAAAgoB,WACY1P,EAAA,EACZ,CACA7c,SAAA,YAEArE,GAEA2xB,QAAA,CACA/oB,EAAA+oB,QACAf,GAAA,CACAtsB,QAAA,OACAgvB,kBAAA,EACAC,kBAAA,QACAC,kBAAA96B,EAAAwK,YACA1e,MAAA,QAEAitC,GACAb,IACAjxB,GAAA,CACA6zB,kBAAA96B,EAAAioB,UACArnB,UAAA,CACAa,SAAA,CACAq5B,kBAAA96B,EAAAioB,UACArnB,WAAA/P,EAAA,GACAA,EAA+Bib,EAAA,GAAoB,CACnDgvB,kBAAA,aAEAjqC,MAIAqnC,GACAjxB,GAAA,CACA6zB,kBAAA96B,EAAAsK,oBAEA4tB,IACAjxB,IACA4xB,IACAE,GAAA,CACAn4B,UAAA,CACAa,SAAA,CACAq5B,kBAAA96B,EAAAgL,mBACApK,WAAAzJ,EAAA,GACAA,EAA+B2U,EAAA,GAAoB,CACnDgvB,kBAAA,aAEA3jC,MAIA+gC,GACAW,GAAA,CACAiC,kBAAA/B,EAAA/4B,EAAAioB,UAAAjoB,EAAA+6B,oBACAn6B,WAAAb,EAAA,GACAA,EAAuB+L,EAAA,GAAoB,CAC3C8uB,kBAAA,EACAE,kBAAA,aAEA/6B,KAGAm5B,WAAA,CACAhpB,EAAAgpB,WACY1Q,EAAA,EACZ,CACAnnB,OAAA,aAAArB,EAAAwK,YACA0B,WAAAlM,EAAAyoB,gBACA7b,OAAA,OACA5gB,OAAA,GACA4f,QAAA,OACAmB,cAAA,MACAJ,WAAA,UACAhB,SAAA,WACA/K,UAAA,CACAa,SAAA,CACAb,WAAA4B,EAAA,GACAA,EAA+BsJ,EAAA,GAAoB,CACnDjL,YAAA,aAEA2B,MAIAk1B,GAAA,CACAvP,UAAA,OACAn8B,OAAA,OACA4f,QAAA,QAEAosB,GAAA,CACA32B,OAAA,SAEAw3B,IACA5xB,GAAA,CACArG,UAAA,CACAa,SAAA,CACAZ,YAAAb,EAAAgL,sBAIA6tB,GAAA,CACAh4B,YAAAb,EAAA+6B,oBACAn6B,WAAA6B,EAAA,GACAA,EAAuBqJ,EAAA,GAAoB,CAC3CuB,YAAA,EACAxM,YAAA,aAEA4B,IAEAwE,GAAA,CACAxG,gBAAAT,EAAAsK,mBACAzJ,YAAAb,EAAAsK,mBACAsC,OAAA,WAEAsrB,GAAA,CACA8C,KAAA,UACA35B,OAAA,OACAyL,UAAA,QAEAorB,GACAW,GAAA,CACAj4B,WAAA+B,EAAA,GACAA,EAAuBmJ,EAAA,GAAoB,CAC3C9f,OAAA,IAEA2W,IAEAu1B,GACAjxB,GAAA,CACAxG,gBAAA,eAEAs4B,GAAA,CACAl4B,YAAAb,EAAAioB,UACArnB,UAAA,CACAq6B,mBAAA,CACAp6B,YAAAb,EAAAioB,aAIA8Q,GACAF,GAAA,CACAh4B,YAAAb,EAAAioB,YAEA6Q,GACA1V,GAAA,CACAxiB,WAAAoJ,EAAA,CACAkxB,SAAA,CACAhuB,QAAA,MACAxM,MAAAV,EAAAioB,UACAtc,SAAA,WACA9f,KAAA,EACAK,OAAA,KAGA8d,EAAuB8B,EAAA,GAAoB,CAC3ClL,UAAA,CACAs6B,SAAA,CACAhvC,OAAA,MAIA8d,KAGA4vB,MAAA,CACA95B,EAAA4E,MAAAgI,OACAwD,EAAA0pB,MACYpR,EAAA,EACZ,CACA5a,SAA0BlJ,EAAA,EAASgI,OACnCyuB,aAAA,EACA95B,OAAA,OACA6K,WAAA,OACAzL,gBAAA,cACAC,MAAAV,EAAAo7B,UACAt1B,QAAA,SACAha,MAAA,OACAyY,SAAA,EACAyB,aAAA,WACAuG,QAAA,EACA3L,UAAA,CACAy6B,6BAAA,CAAmD9uB,QAAA,GACnD+uB,cAAA,CACA1vB,QAAA,QAEA2vB,gBAAA,CACAz7B,EAAA4E,MAAAgI,OACA,CACAhM,MAAAV,EAAA2oB,qBACA1c,QAAA,IAGAuvB,yBAAA,CACA17B,EAAA4E,MAAAgI,OACA,CACAhM,MAAAV,EAAA2oB,qBACA1c,QAAA,MAKAyrB,IACAU,GAAA,CACAloB,EAAAqqB,YACA,CACAkB,OAAA,SAGA/D,GAAA,CACAvP,UAAA,UACAta,WAAA,GACAc,SAAA,EACAoN,WAAA,EACAxgB,SAAA,OACAzP,MAAA,QAEA4rC,GACAY,GAAA,CACA/8B,SAAA,UAEAy9B,GAAA,CACA5e,aAAA,IAEAsd,GACAsB,GAAA,CACA5e,aAAA,IAEAnT,GAAA,CACAxG,gBAAA,cACAI,YAAA,cACAH,MAAAV,EAAA0L,aACA9K,UAAA,CACA26B,gBAAA,CACA76B,MAAAV,EAAA0L,cAEA8vB,yBAAA,CACA96B,MAAAV,EAAA0L,gBAIAwsB,GAAA,CACAprB,UAAA,QAEA+rB,IACAb,GAAA,CACAp3B,WAAAqJ,EAAA,GACAA,EAAuB6B,EAAA,GAAoB,CAC3CqO,YAAA,GACAC,aAAA,IAEAnQ,IAEA4uB,GACAnB,IACAM,GAAA,CACAp3B,WAAAsJ,EAAA,GACAA,EAAuB4B,EAAA,GAAoB,CAC3CiQ,WAAA,GAEA7R,IAEA+tB,GAEA1pB,KAAA,CACAmpB,GAAA,CACAtd,aAAA,GACAoB,cAAA,EACA7O,WAAA,YAEA,CACAQ,cAAA,OACAxB,SAAA,WACAxf,OAAA,EACAD,MAAA,EACAL,IAAA,OACA+hB,SAAA,GACAC,WAAA,IAEA5G,GAAA,CACAvG,MAAAV,EAAA0L,cAEAsrB,GAEAP,YAAA,CACAvmB,EAAAumB,YACA,CACA/1B,MAAAV,EAAA+nB,YACAna,SAA0BlJ,EAAA,EAASg3B,SAGnCrY,aAAA,CACAnT,EAAAmT,aACY7I,EAAA,EAAmBmhB,cAC/B77B,EAAA4E,MAAApH,MACA,CACAoD,MAAAV,EAAAioB,UACApiB,OAAA,EACAkW,WAAA,EACAnQ,QAAA,OACAe,WAAA,WAGAwrB,OAAA,CAAAjoB,EAAAioB,OAAAwC,GACAtC,OAAA,CAAAnoB,EAAAmoB,OAAAsC,GACArd,mBAAA,CACA9Y,MAAAi2B,EAAA3pC,WCnXsDf,EAAA,CACtD+d,MAAA,uGCAAvH,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAChBivC,EAAS,SAAAzrC,GAEb,SAAA0rC,IACA,cAAA1rC,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAYA,OAdIoE,EAAA,UAAiBkrC,EAAA1rC,GAIrB0rC,EAAAxuC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAqG,EAAAtG,EAAAirC,GAAAC,OAAA,IAAA5kC,EAAA,QAAAA,EAAAtC,EAAAhE,EAAAgE,SAAAyS,EAAAzW,EAAAyW,UAAAL,EAAApW,EAAAoW,SAAAhC,EAAApU,EAAAoU,OAAAme,EAAAvyB,EAAAuyB,SAAAtjB,EAAAjP,EAAAiP,MACAoQ,EAAA3J,EAAAtB,EAAA,CACAqC,YACAL,WACAmc,WACAtjB,UAEA,OAAgB3O,EAAA,cAAmB4qC,EAAWprC,EAAA,SAAgB,GAAKhE,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,GAAa,CAAI8L,UAAA4I,EAAA1P,OAA6B3L,IAE5IgnC,EAfa,CAgBX/mC,EAAA,YCrBFiE,EAAAC,EAAAC,EAAA,sBAAAyrB,IAGO,IAAAA,EAAY/3B,OAAA+O,EAAA,EAAA/O,CAAOivC,ECFnB,SAAA9qC,GACP,IAmCAD,EAnCAiP,EAAAhP,EAAAgP,MAAAwH,EAAAxW,EAAAwW,UAAAL,EAAAnW,EAAAmW,SAAAmc,EAAAtyB,EAAAsyB,SACA,OACA5iB,KAAA,CACA,WACAV,EAAA4E,MAAAgI,OACA,CACAhM,MAAAZ,EAAAE,eAAAsL,SACAvF,UAAA,aACAH,UAAA,OACAC,OAAA,EACA+F,QAAA,QACA9F,QAAA,QACAsiB,SAAA,aACAC,aAAA,cAEAphB,GAAA,CACAvG,MAAAZ,EAAAE,eAAAg8B,iBACAp7B,WAAA/P,EAAA,GACAA,EAAuBib,EAAA,GAAoB,CAC3CpL,MAAA,YAEA7P,IAEAuyB,GAAA,CACAxiB,UAAA,CACAq7B,UAAA,CACA/uB,QAAA,OACAxM,MAAAZ,EAAAE,eAAAioB,UACA7N,aAAA,MAIA9S,UD/B8CvX,EAAA,CAC9C+d,MAAA,iFEDAvH,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAGpBuvC,EAAA,IAKIC,EAAqB,SAAAhsC,GAEzB,SAAAisC,IACA,IAAAhsC,EAAA,OAAAD,KAAAE,MAAA9D,KAAA+D,YAAA/D,KAqBA,OApBA6D,EAAAisC,kBAAA,SAAAvrC,GACA,IAAAD,EAAAT,EAAAU,MAAAwrC,EAAAzrC,EAAAyrC,cAAAC,EAAA1rC,EAAA0rC,UAAAj1B,EAAAzW,EAAAyW,UAAArC,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MACA08B,EAAA,iBAAApsC,EAAAU,MAAA0rC,gBAAAxuC,KAAAE,IAAA,IAAAF,KAAAC,IAAA,MAAAmC,EAAAU,MAAA0rC,uBAAAzsC,EACAmgB,EAAA3J,EAAAtB,EAAA,CACAnF,QACAwH,YACAi1B,YACAE,mBAAA1sC,IAAAysC,IAEAE,EAAA,CACA5wC,WAAAiE,IAAAysC,IAAA,SAAAzsC,EACA2rB,gBAAA3rB,IAAAysC,KAAAN,EAAA,YAAAnsC,GAEA4sC,OAAA5sC,IAAAysC,EAAA,OAAAzsC,EACA6sC,OAAA7sC,IAAAysC,EAAA,SAAAzsC,EACA8sC,OAAA9sC,IAAAysC,EAAAxuC,KAAA8uC,MAAAN,QAAAzsC,EACA,OAAoBoB,EAAA,cAAmB,OAASmW,UAAA4I,EAAA6sB,cAChC5rC,EAAA,cAAmB,OAASmW,UAAA4I,EAAA8sB,gBAC5B7rC,EAAA,cAAmB,OAASmW,UAAA4I,EAAA+sB,YAAApkB,MAAA6jB,EAAA1mB,KAAA,cAAAknB,gBAAAP,EAAAQ,gBAAAP,EAAAQ,gBAAAP,EAAAQ,iBAAAf,MAE5ClsC,EAwBA,OA/CIO,EAAA,UAAiByrC,EAAAjsC,GAyBrBisC,EAAA/uC,UAAAuD,OAAA,WACA,IAAAC,EAAAtE,KAAAuE,MAAAyrC,EAAA1rC,EAAA0rC,UAAAj1B,EAAAzW,EAAAyW,UAAAnQ,EAAAtG,EAAA2T,aAAA,IAAArN,EAAA5K,KAAAuE,MAAA0X,MAAArR,EACAs/B,EAAA5lC,EAAA4lC,YAAAxxB,EAAApU,EAAAoU,OAAAnF,EAAAjP,EAAAiP,MAAAw9B,EAAAzsC,EAAAysC,eAAAv9B,EAAAlP,EAAA0sC,wBAAA,IAAAx9B,EAAAxT,KAAA8vC,kBAAAt8B,EACAy8B,EAAA,iBAAAjwC,KAAAuE,MAAA0rC,gBAAAxuC,KAAAE,IAAA,IAAAF,KAAAC,IAAA,MAAA1B,KAAAuE,MAAA0rC,uBAAAzsC,EACAmgB,EAAA3J,EAAAtB,EAAA,CACAnF,QACAwH,YACAi1B,YACAE,mBAAA1sC,IAAAysC,IAEA,OAAgBrrC,EAAA,cAAmB,OAASmW,UAAA4I,EAAA1P,MAC5CgE,EAAoBrT,EAAA,cAAmB,OAASmW,UAAA4I,EAAAstB,UAAiCh5B,GAAA,KACjF84B,EAEA,KADAC,EAAmC5sC,EAAA,SAAgB,GAAGpE,KAAAuE,MAAA,CAAe0rC,oBAAmCjwC,KAAA8vC,mBAExG5F,EAA0BtlC,EAAA,cAAmB,OAASmW,UAAA4I,EAAAutB,iBAAwChH,GAAA,OAE9F2F,EAAAn5B,aAAA,CACAuB,MAAA,GACAiyB,YAAA,GACA3qC,MAAA,KAEAswC,EAhDyB,CAiDvBjrC,EAAA,iEC1DFgf,EAAA,CACA3P,KAAA,uBACAg9B,SAAA,gCACAC,gBAAA,uCACAV,aAAA,oCACAC,cAAA,qCACAC,YAAA,oCAEAS,EAA4B/wC,OAAAgxC,EAAA,EAAAhxC,CAAS,CACrCixC,KAAA,CACAhyC,KAAA,QAEAiyC,OAAA,CACAjyC,KAAA,UAGAkyC,EAA+BnxC,OAAAgxC,EAAA,EAAAhxC,CAAS,CACxCkxC,OAAA,CACA3xC,MAAA,QAEA0xC,KAAA,CACA1xC,MAAA,UCvBA6M,EAAAC,EAAAC,EAAA,sBAAA8kC,IAMO,IAAAA,EAAwBpxC,OAAA+O,EAAA,EAAA/O,CAAOwvC,EDoB/B,SAAArrC,GACP,IAmFAqG,EAAA4I,EAnFAi+B,EAAgBrxC,OAAA8O,EAAA,EAAA9O,GAChB2a,EAAAxW,EAAAwW,UAAAm1B,EAAA3rC,EAAA2rC,cAAA38B,EAAAhP,EAAAgP,MAAAjP,EAAAC,EAAAyrC,iBAAA,IAAA1rC,EAAA,EAAAA,EACAqQ,EAAApB,EAAAoB,QAAAlB,EAAAF,EAAAE,eACAkQ,EAAqBvjB,OAAA4jB,EAAA,EAAA5jB,CAAmBwjB,EAAArQ,GAGxCm+B,EAAA/8B,EAAAC,aACA,OACAX,KAAA,CACA0P,EAAA1P,KACAV,EAAA4E,MAAAgI,OACA,CACAjI,WAA4BC,EAAA,EAAWw5B,SAEvC52B,GAEAk2B,SAAA,CACAttB,EAAAstB,SACYhV,EAAA,EACZ,CACA9nB,MAAAV,EAAAsL,SACAsC,SAA0BlJ,EAAA,EAASgI,OACnCqP,WAAAoiB,EACAtwB,WAAAuwB,KAGAX,gBAAA,CACAvtB,EAAAutB,gBACA,CACA/8B,MAAAV,EAAA+nB,YACAna,SAA0BlJ,EAAA,EAASg3B,OACnC7tB,WA1BA,KA6BAkvB,aAAA,CACA7sB,EAAA6sB,aACA,CACApxB,SAAA,WACApQ,SAAA,SACAvP,OAAAuwC,EACAz2B,QAAAq4B,UAGAnB,cAAA,CACA9sB,EAAA8sB,cACA,CACArxB,SAAA,WACA7f,MAAA,OACAE,OAAAuwC,EACA97B,gBAAAw9B,EACAr9B,WAAAzJ,EAAA,GACAA,EAAuB2U,EAAA,GAAoB,CAC3CuyB,aAAA,wBAEAlnC,KAGA8lC,YAAA,CACA,CACAx8B,gBAAAS,EAAAY,aACA9V,OAAAuwC,EACA5wB,SAAA,WACA+P,WAAA,iBACA5vB,MAAA,EACA8U,WAAAb,EAAA,GACAA,EAAuB+L,EAAA,GAAoB,CAC3CrL,gBAAA,cAEAV,IAEA08B,EACA,CACA9wB,SAAA,WACApH,SAAA,MACA2H,WAAA,6BAAA+xB,EAAA,QAAA/8B,EAAAY,aAAA,SAAAm8B,EAAA,SACAK,WAAAN,EAAAF,EAAAJ,GAAA,gBAEA,CACAhiB,WAAA,qBAEAxL,EAAA+sB,oBCrGsEltC,EAAA,CAAc+d,MAAA,0ICDpFvH,EAAoB5Z,OAAAgN,EAAA,EAAAhN,GAChB4xC,EAAU,SAAApuC,GAEd,SAAAquC,EAAA1tC,GACA,IAAAV,EAAAD,EAAA6M,KAAAzQ,KAAAuE,IAAAvE,KAmCA,OAlCA6D,EAAAquC,cAA8BttC,EAAA,YAC9Bf,EAAAsuC,SAAA,SAAAlxC,GACA,IAAAqD,EAAAT,EAAAU,MAAAmW,EAAApW,EAAAoW,SAAA03B,EAAA9tC,EAAAuW,QAAAF,EAAArW,EAAAqW,SAAAub,EAAA5xB,EAAA4xB,UAAA9jB,EAAA9N,EAAA8N,QACAyI,EAAAhX,EAAAG,MAAA6W,QACAH,SAEAlX,IAAA4uC,GACAvuC,EAAAqB,SAAA,CACA2V,aAGAF,GACAA,EAAA1Z,GAAA4Z,GAEAqb,GACAA,GAAArb,GAEAzI,GACAA,EAAAnR,KAIA4C,EAAAqX,uBAAA,CACAL,QAAA,mBAEAhX,EAAAqmB,kBAAA,CACAmoB,YAAA,YACAC,kBAAA9uC,EACA0yB,UAAA,aAEAryB,EAAAG,MAAA,CACA6W,WAAAtW,EAAAsW,UAAAtW,EAAA8W,iBAEAxX,EAAAsX,IAAA5W,EAAA6W,IAAgChb,OAAA0O,EAAA,EAAA1O,CAAK,UACrCyD,EAkDA,OAvFIO,EAAA,UAAiB6tC,EAAAruC,GAuCrBxD,OAAA+F,eAAA8rC,EAAAnxC,UAAA,WAIAoD,IAAA,WACA,OAAAlE,KAAAgE,MAAA6W,SAEAxU,YAAA,EACAL,cAAA,IAEAisC,EAAAnxC,UAAAwa,0BAAA,SAAAC,QACA/X,IAAA+X,EAAAV,SACA7a,KAAAkF,SAAA,CACA2V,UAAAU,EAAAV,WAIAo3B,EAAAnxC,UAAAuD,OAAA,WACA,IAAAR,EAAA7D,KACAsE,EAAAtE,KAAAuE,MAAAqG,EAAAtG,EAAAirC,GAAAC,OAAA,IAAA5kC,EAAA,MAAAA,EAAAmQ,EAAAzW,EAAAyW,UAAAxH,EAAAjP,EAAAiP,MAAAmH,EAAApW,EAAAoW,SAAAsB,EAAA1X,EAAA0X,YAAA/D,EAAA3T,EAAA2T,MAAAwD,EAAAnX,EAAAmX,UAAA42B,EAAA/tC,EAAA+tC,YAAAC,EAAAhuC,EAAAguC,aAAAC,EAAAjuC,EAAAiuC,QAAAC,EAAAluC,EAAAkuC,OAAA95B,EAAApU,EAAAoU,OAAA+5B,EAAAnuC,EAAAmuC,YACA53B,EAAA7a,KAAAgE,MAAA6W,QACA63B,EAAA73B,EAAA23B,EAAAD,EACAI,EAAA93B,EAAAw3B,EAAAC,EACAM,EAAgCxyC,OAAA6O,EAAA,EAAA7O,CAAcJ,KAAAuE,MAAa0K,EAAA,EAAe,oBAC1E0U,EAAA3J,EAAAtB,EAAA,CACAnF,QACAwH,YACAL,WACAG,UACA43B,cACAI,cAAAL,IAAAD,IAEA,OAAgB3tC,EAAA,cAAmB4qC,EAAA,CAAYz0B,UAAA4I,EAAA1P,KAAA6+B,OAAAF,EAAAE,QAC/C76B,GAAsBrT,EAAA,cAAoBuzB,EAAA,EAAK,CAAGnb,QAAAhd,KAAAmb,IAAAJ,UAAA4I,EAAA1L,OAAiDA,GACvFrT,EAAA,cAAmB,OAASmW,UAAA4I,EAAAovB,WACxBnuC,EAAA,cAAoByX,EAAA,EAAU,CAAGL,cAAAL,gBAAAi3B,EAAA,oBAAAl4B,YAAuG,SAAA4B,GAA+B,OAAS1X,EAAA,cAAmB,SAAWR,EAAA,SAAgB,GAAGwuC,EAAAt2B,EAAA,CAAwCvB,UAAA4I,EAAAqvB,KAAAt4B,WAAAU,GAAAvX,EAAAsX,IAAAoB,KAAA,SAAAkN,KAAA,SACzR5kB,IAAAhB,EAAAquC,cAAAx1B,gBAAAhC,EAAAu4B,eAAAp4B,EAAA8B,aAAAlB,GAAAk3B,EAAAxf,qBAAA,EAAAxY,SAAA9W,EAAAqvC,MAAA9gC,QAAAvO,EAAAsuC,WACoBvtC,EAAA,cAAmB,OAASmW,UAAA4I,EAAAwvB,WAChDT,GAA6B9tC,EAAA,cAAoBuzB,EAAA,EAAK,CAAGpd,UAAA4I,EAAA1I,MAA6By3B,MAEtFT,EAAAnxC,UAAAwc,MAAA,WACAtd,KAAAkyC,cAAA30B,SACAvd,KAAAkyC,cAAA30B,QAAAD,SAGA20B,EAAAnxC,UAAAoyC,MAAA,aAGAjB,EAxFc,CAyFZ1pC,EAAA,qBC/FFiE,EAAAC,EAAAC,EAAA,sBAAA0mC,IAGO,IAAAA,EAAahzC,OAAA+O,EAAA,EAAA/O,CAAO4xC,ECFpB,SAAAztC,GACP,IAwNAD,EAAAsG,EAAA4I,EAAAyC,EAAAC,EAAAE,EAAAqH,EAxNAlK,EAAAhP,EAAAgP,MAAAwH,EAAAxW,EAAAwW,UAAAL,EAAAnW,EAAAmW,SAAAG,EAAAtW,EAAAsW,QAAA43B,EAAAluC,EAAAkuC,YAAAI,EAAAtuC,EAAAsuC,aACAp/B,EAAAF,EAAAE,eACA4/B,EAAA5/B,EAAA6/B,eACAC,EAAA9/B,EAAA4K,uBACAm1B,EAAA//B,EAAAmL,8BACA60B,EAAAhgC,EAAA8K,oBACAm1B,EAAAjgC,EAAAgL,mBACAk1B,EAAAlgC,EAAAoK,uBACA+1B,EAAAngC,EAAA8K,oBACAs1B,EAAApgC,EAAAsK,mBACA+1B,EAAArgC,EAAA0K,iBACA41B,EAAAtgC,EAAAgL,mBACAu1B,EAAAvgC,EAAA8K,oBACA01B,EAAAxgC,EAAA0L,aACA,OACAlL,KAAA,CACA,YACA4G,GAAA,cACAH,GAAA,aACAA,GAAA,cACAnH,EAAA4E,MAAAgI,OACA,CACA6O,aAAA,OAEAyjB,GAAA,CACApzB,QAAA,OACAe,WAAA,UAEArF,GAEA9C,MAAA,CACA,kBACAyC,GAAA,CACAvG,MAAA8/B,EACA5/B,WAAA/P,EAAA,GACAA,EAAuBib,EAAA,GAAoB,CAC3CpL,MAAA,YAEA7P,IAEAmuC,IACAI,GAAA,CACAzxB,YAAA,IAEAyxB,GACAJ,GAAA,CACAyB,MAAA,EACA/yB,WAAA,KAGA4xB,UAAA,CACA,2BACA,CACA1zB,QAAA,cACAD,SAAA,aAGA4zB,KAAA,CACA,uBACY5yC,OAAAojC,EAAA,EAAApjC,CAAamT,GAAA,GACzB,CACA8N,SAAA,OACA7H,UAAA,aACAja,MAAA,QACAE,OAAA,MACAmvC,aAAA,MACAzf,WAAA,gBACArO,YAAA,MACAC,YAAA,QACApB,WAAA0zB,EACA/+B,YAAAw/B,EACAzzB,OAAA,UACAhB,QAAA,OACAe,WAAA,SACA7G,QAAA,WAEAmB,GAAA,EACAG,GAAA,CACAxG,UAAA,CACAa,SAAA,CACA,CACAZ,YAAAy/B,IAGAI,0BAAA,CACA,CACA9/B,WAAAzJ,EAAA,GACAA,EAAuC2U,EAAA,GAAoB,CAC3DjL,YAAA,aAEA1J,OAKAiQ,GAAA,CACA,CACA8E,WAAA4zB,EACAj/B,YAAA,cACAmM,eAAA,YAEA,CACApM,WAAAb,EAAA,CACA0B,SAAA,CACA,CACAhB,gBAAAs/B,EACAl/B,YAAA,cACAD,WAAA4B,EAAA,GACAA,EAA+CsJ,EAAA,GAAoB,CACnErL,gBAAA,aAEA+B,MAIAzC,EAA+B+L,EAAA,GAAoB,CACnDrL,gBAAA,cAEAV,MAIAkH,GAAA,CACA,CACA2F,OAAA,YAEAxF,GAAA,CACA,CACAvG,YAAA0/B,IAGAn5B,GAAA,CACA,CACA3G,gBAAAu/B,EACAn/B,YAAA,cACAmM,eAAA,eAIA/F,GAAA,CACArG,UAAA,CACA+/B,UAAA,CACA//B,WAAA6B,EAAA,GACAA,EAA+BqJ,EAAA,GAAoB,CACnDjL,YAAA,aAEA4B,OAKAi9B,MAAA,CACA,kBACA,CACA5zC,MAAA,OACAE,OAAA,OACAmvC,aAAA,OACAzf,WAAA,gBACAjb,gBAAAw/B,EAEAp/B,YAAA,cACAwM,YAAA,QACAC,YAAA,QACAvH,UAAA,eAEAkB,GACAG,GAAA,CACA,CACA3G,gBAAAy/B,EACAt/B,WAAA+B,EAAA,GACAA,EAA2BmJ,EAAA,GAAoB,CAC/CrL,gBAAA,SACAI,YAAA,UAEA8B,KAGAsE,GAAA,EACAG,GAAA,CACA,CACA3G,gBAAA0/B,IAGA/4B,GAAA,CACA,CACA3G,gBAAA2/B,MAKA54B,KAAA,CACA,sBACA,CACA5G,UAAA,CAEAggC,KAAA,CACA96B,QAAA,IACAD,OAAA,QACAgH,WAAA,UAIA5F,GAAA,CACArG,UAAA,CACAggC,KAAA,CACAlgC,MAAA8/B,EACA5/B,WAAAoJ,EAAA,GACAA,EAA+B8B,EAAA,GAAoB,CACnDpL,MAAA,YAEAsJ,cDjNgDja,EAAA,CAAc+d,MAAA","file":"vendors~export~import.84af9acf49b038681776.js","sourcesContent":["/**\r\n * Helper to get bounding client rect. Passing in window will get the window size.\r\n *\r\n * @public\r\n */\r\nexport function getRect(element) {\r\n    var rect;\r\n    if (element) {\r\n        if (element === window) {\r\n            rect = {\r\n                left: 0,\r\n                top: 0,\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                right: window.innerWidth,\r\n                bottom: window.innerHeight\r\n            };\r\n        }\r\n        else if (element.getBoundingClientRect) {\r\n            rect = element.getBoundingClientRect();\r\n        }\r\n    }\r\n    return rect;\r\n}\r\n//# sourceMappingURL=getRect.js.map","import { EventGroup } from './EventGroup';\r\nimport { findScrollableParent } from './scroll';\r\nimport { getRect } from './dom/getRect';\r\nvar SCROLL_ITERATION_DELAY = 16;\r\nvar SCROLL_GUTTER_HEIGHT = 100;\r\nvar MAX_SCROLL_VELOCITY = 15;\r\n/**\r\n * AutoScroll simply hooks up mouse events given a parent element, and scrolls the container\r\n * up/down depending on how close the mouse is to the top/bottom of the container.\r\n *\r\n * Once you don't want autoscroll any more, just dispose the helper and it will unhook events.\r\n *\r\n * @public\r\n */\r\nvar AutoScroll = /** @class */ (function () {\r\n    function AutoScroll(element) {\r\n        this._events = new EventGroup(this);\r\n        this._scrollableParent = findScrollableParent(element);\r\n        this._incrementScroll = this._incrementScroll.bind(this);\r\n        this._scrollRect = getRect(this._scrollableParent);\r\n        // tslint:disable-next-line:no-any\r\n        if (this._scrollableParent === window) {\r\n            this._scrollableParent = document.body;\r\n        }\r\n        if (this._scrollableParent) {\r\n            this._events.on(window, 'mousemove', this._onMouseMove, true);\r\n            this._events.on(window, 'touchmove', this._onTouchMove, true);\r\n        }\r\n    }\r\n    AutoScroll.prototype.dispose = function () {\r\n        this._events.dispose();\r\n        this._stopScroll();\r\n    };\r\n    AutoScroll.prototype._onMouseMove = function (ev) {\r\n        this._computeScrollVelocity(ev.clientY);\r\n    };\r\n    AutoScroll.prototype._onTouchMove = function (ev) {\r\n        if (ev.touches.length > 0) {\r\n            this._computeScrollVelocity(ev.touches[0].clientY);\r\n        }\r\n    };\r\n    AutoScroll.prototype._computeScrollVelocity = function (clientY) {\r\n        if (!this._scrollRect) {\r\n            return;\r\n        }\r\n        var scrollRectTop = this._scrollRect.top;\r\n        var scrollClientBottom = scrollRectTop + this._scrollRect.height - SCROLL_GUTTER_HEIGHT;\r\n        if (clientY < scrollRectTop + SCROLL_GUTTER_HEIGHT) {\r\n            this._scrollVelocity = Math.max(-MAX_SCROLL_VELOCITY, -MAX_SCROLL_VELOCITY * ((SCROLL_GUTTER_HEIGHT - (clientY - scrollRectTop)) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else if (clientY > scrollClientBottom) {\r\n            this._scrollVelocity = Math.min(MAX_SCROLL_VELOCITY, MAX_SCROLL_VELOCITY * ((clientY - scrollClientBottom) / SCROLL_GUTTER_HEIGHT));\r\n        }\r\n        else {\r\n            this._scrollVelocity = 0;\r\n        }\r\n        if (this._scrollVelocity) {\r\n            this._startScroll();\r\n        }\r\n        else {\r\n            this._stopScroll();\r\n        }\r\n    };\r\n    AutoScroll.prototype._startScroll = function () {\r\n        if (!this._timeoutId) {\r\n            this._incrementScroll();\r\n        }\r\n    };\r\n    AutoScroll.prototype._incrementScroll = function () {\r\n        if (this._scrollableParent) {\r\n            this._scrollableParent.scrollTop += Math.round(this._scrollVelocity);\r\n        }\r\n        this._timeoutId = setTimeout(this._incrementScroll, SCROLL_ITERATION_DELAY);\r\n    };\r\n    AutoScroll.prototype._stopScroll = function () {\r\n        if (this._timeoutId) {\r\n            clearTimeout(this._timeoutId);\r\n            delete this._timeoutId;\r\n        }\r\n    };\r\n    return AutoScroll;\r\n}());\r\nexport { AutoScroll };\r\n//# sourceMappingURL=AutoScroll.js.map","var now = function () { return (typeof performance !== 'undefined' && !!performance.now ? performance.now() : Date.now()); };\r\nvar RESET_INTERVAL = 3 * 60 * 1000; // auto reset every 3 minutes\r\n/**\r\n * Performance helper class for measuring things.\r\n *\r\n * @public\r\n */\r\nvar FabricPerformance = /** @class */ (function () {\r\n    function FabricPerformance() {\r\n    }\r\n    /**\r\n     * Measures execution time of the given syncronous function. If the same logic is executed multiple times,\r\n     * each individual measurement will be collected as well the overall numbers.\r\n     * @param name - The name of this measurement\r\n     * @param func - The logic to be measured for execution time\r\n     */\r\n    FabricPerformance.measure = function (name, func) {\r\n        if (FabricPerformance._timeoutId) {\r\n            FabricPerformance.setPeriodicReset();\r\n        }\r\n        var start = now();\r\n        func();\r\n        var end = now();\r\n        var measurement = FabricPerformance.summary[name] || {\r\n            totalDuration: 0,\r\n            count: 0,\r\n            all: []\r\n        };\r\n        var duration = end - start;\r\n        measurement.totalDuration += duration;\r\n        measurement.count++;\r\n        measurement.all.push({\r\n            duration: duration,\r\n            timeStamp: end\r\n        });\r\n        FabricPerformance.summary[name] = measurement;\r\n    };\r\n    FabricPerformance.reset = function () {\r\n        FabricPerformance.summary = {};\r\n        clearTimeout(FabricPerformance._timeoutId);\r\n        FabricPerformance._timeoutId = NaN;\r\n    };\r\n    FabricPerformance.setPeriodicReset = function () {\r\n        FabricPerformance._timeoutId = setTimeout(function () { return FabricPerformance.reset(); }, RESET_INTERVAL);\r\n    };\r\n    FabricPerformance.summary = {};\r\n    return FabricPerformance;\r\n}());\r\nexport { FabricPerformance };\r\n//# sourceMappingURL=FabricPerformance.js.map","/**\r\n * asAsync - a HOC for async loading components.\r\n *\r\n * Usage:\r\n *\r\n * const AsyncDialog = asAsync({\r\n *   load: () => import('Dialog').then(result => result.default),\r\n * });\r\n *\r\n * React.render(domElement, <AsyncDialog asyncPlaceholder={ () => <Spinner/> } { ...dialogProps } />);\r\n *\r\n * Note the `asyncPlaceholder` prop will be respected when rendering the async component and it hasn't\r\n * been loaded yet.\r\n */\r\nimport * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * If possible, use a WeakMap to maintain a cache of loaded components.\r\n * This can be used to synchronously render components that have already been loaded,\r\n * rather than having to wait for at least one async tick.\r\n */\r\nvar _syncModuleCache = typeof WeakMap !== 'undefined'\r\n    ? // tslint:disable-next-line:no-any\r\n        new WeakMap()\r\n    : undefined;\r\n/**\r\n * Produces a component which internally loads the target component before first mount.\r\n * The component passes all props through to the loaded component.\r\n *\r\n * This overload accepts a module with a default export for the component.\r\n */\r\nexport function asAsync(options) {\r\n    var Async = /** @class */ (function (_super) {\r\n        tslib_1.__extends(Async, _super);\r\n        function Async() {\r\n            var _this = _super !== null && _super.apply(this, arguments) || this;\r\n            _this.state = {\r\n                Component: _syncModuleCache ? _syncModuleCache.get(options.load) : undefined\r\n            };\r\n            return _this;\r\n        }\r\n        Async.prototype.render = function () {\r\n            // Typescript issue: the rest can't be pulled without the any cast, as TypeScript fails with rest on generics.\r\n            // tslint:disable-next-line:no-any\r\n            var _a = this.props, forwardedRef = _a.forwardedRef, Placeholder = _a.asyncPlaceholder, rest = tslib_1.__rest(_a, [\"forwardedRef\", \"asyncPlaceholder\"]);\r\n            var Component = this.state.Component;\r\n            return Component ? React.createElement(Component, tslib_1.__assign({ ref: forwardedRef }, rest)) : Placeholder ? React.createElement(Placeholder, null) : null;\r\n        };\r\n        Async.prototype.componentDidMount = function () {\r\n            var _this = this;\r\n            var Component = this.state.Component;\r\n            if (!Component) {\r\n                options\r\n                    .load()\r\n                    .then(function (LoadedComponent) {\r\n                    if (LoadedComponent) {\r\n                        // Cache component for future reference.\r\n                        _syncModuleCache && _syncModuleCache.set(options.load, LoadedComponent);\r\n                        // Set state.\r\n                        _this.setState({\r\n                            Component: LoadedComponent\r\n                        }, options.onLoad);\r\n                    }\r\n                })\r\n                    .catch(options.onError);\r\n            }\r\n        };\r\n        return Async;\r\n    }(React.Component));\r\n    return React.forwardRef(function (props, ref) { return (React.createElement(Async, tslib_1.__assign({}, props, { forwardedRef: ref }))); });\r\n}\r\n//# sourceMappingURL=asAsync.js.map","/**\r\n * AssertNever is a utility function that can be used for exhaustiveness checks in switch statements.\r\n *\r\n * @public\r\n */\r\nexport function assertNever(x) {\r\n    throw new Error('Unexpected object: ' + x);\r\n}\r\n//# sourceMappingURL=assertNever.js.map","/**\r\n * Autobind is a utility for binding methods in a class. This simplifies tagging methods as being \"bound\" to the this pointer\r\n * so that they can be used in scenarios that simply require a function callback.\r\n * @deprecated This has been deprecated in favor of using arrow function properties\r\n */\r\nexport function autobind(\r\n// tslint:disable-next-line:no-any\r\ntarget, key, descriptor) {\r\n    var fn = descriptor.value;\r\n    var defining = false;\r\n    return {\r\n        configurable: true,\r\n        get: function () {\r\n            if (defining || (fn && this === fn.prototype) || this.hasOwnProperty(key)) {\r\n                return fn;\r\n            }\r\n            // Bind method only once, and update the property to return the bound value from now on\r\n            var fnBound = fn && fn.bind(this);\r\n            defining = true;\r\n            Object.defineProperty(this, key, {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: true,\r\n                value: fnBound\r\n            });\r\n            defining = false;\r\n            return fnBound;\r\n        },\r\n        // tslint:disable-next-line:no-any\r\n        set: function (newValue) {\r\n            Object.defineProperty(this, key, {\r\n                configurable: true,\r\n                writable: true,\r\n                enumerable: true,\r\n                value: newValue\r\n            });\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=autobind.js.map","import * as tslib_1 from \"tslib\";\r\n/**\r\n * Merge new and old settings, giving priority to new settings.\r\n * New settings is optional in which case oldSettings is returned as-is.\r\n * @param oldSettings - Old settings to fall back to.\r\n * @param newSettings - New settings that will be merged over oldSettings.\r\n * @returns Merged settings.\r\n */\r\nexport function mergeSettings(oldSettings, newSettings) {\r\n    if (oldSettings === void 0) { oldSettings = {}; }\r\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _settingsMergeWith(newSettings);\r\n    return mergeSettingsWith(oldSettings);\r\n}\r\nexport function mergeScopedSettings(oldSettings, newSettings) {\r\n    if (oldSettings === void 0) { oldSettings = {}; }\r\n    var mergeSettingsWith = _isSettingsFunction(newSettings) ? newSettings : _scopedSettingsMergeWith(newSettings);\r\n    return mergeSettingsWith(oldSettings);\r\n}\r\nfunction _isSettingsFunction(settings) {\r\n    return typeof settings === 'function';\r\n}\r\nfunction _settingsMergeWith(newSettings) {\r\n    return function (settings) { return (newSettings ? tslib_1.__assign({}, settings, newSettings) : settings); };\r\n}\r\nfunction _scopedSettingsMergeWith(scopedSettingsFromProps) {\r\n    if (scopedSettingsFromProps === void 0) { scopedSettingsFromProps = {}; }\r\n    return function (oldScopedSettings) {\r\n        var newScopedSettings = tslib_1.__assign({}, oldScopedSettings);\r\n        for (var scopeName in scopedSettingsFromProps) {\r\n            if (scopedSettingsFromProps.hasOwnProperty(scopeName)) {\r\n                newScopedSettings[scopeName] = tslib_1.__assign({}, oldScopedSettings[scopeName], scopedSettingsFromProps[scopeName]);\r\n            }\r\n        }\r\n        return newScopedSettings;\r\n    };\r\n}\r\n//# sourceMappingURL=mergeSettings.js.map","import { mergeSettings, mergeScopedSettings } from './mergeSettings';\r\n/**\r\n * Merge props and customizations giving priority to props over context.\r\n * NOTE: This function will always perform multiple merge operations. Use with caution.\r\n * @param props - New settings to merge in.\r\n * @param parentContext - Context containing current settings.\r\n * @returns Merged customizations.\r\n */\r\nexport function mergeCustomizations(props, parentContext) {\r\n    var _a = (parentContext || {}).customizations, customizations = _a === void 0 ? { settings: {}, scopedSettings: {} } : _a;\r\n    return {\r\n        customizations: {\r\n            settings: mergeSettings(customizations.settings, props.settings),\r\n            scopedSettings: mergeScopedSettings(customizations.scopedSettings, props.scopedSettings),\r\n            inCustomizerContext: true\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=mergeCustomizations.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent } from '../BaseComponent';\r\nimport { Customizations } from './Customizations';\r\nimport { CustomizerContext } from './CustomizerContext';\r\nimport { mergeCustomizations } from './mergeCustomizations';\r\n/**\r\n * The Customizer component allows for default props to be mixed into components which\r\n * are decorated with the customizable() decorator, or use the styled HOC. This enables\r\n * injection scenarios like:\r\n *\r\n * 1. render svg icons instead of the icon font within all buttons\r\n * 2. inject a custom theme object into a component\r\n *\r\n * Props are provided via the settings prop which should be one of the following:\r\n * - A json map which contains 1 or more name/value pairs representing injectable props.\r\n * - A function that receives the current settings and returns the new ones that apply to the scope\r\n *\r\n * @public\r\n */\r\nvar Customizer = /** @class */ (function (_super) {\r\n    tslib_1.__extends(Customizer, _super);\r\n    function Customizer() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._changeCount = 0;\r\n        _this._onCustomizationChange = function () { return _this.forceUpdate(); };\r\n        return _this;\r\n    }\r\n    Customizer.prototype.componentDidMount = function () {\r\n        Customizations.observe(this._onCustomizationChange);\r\n    };\r\n    Customizer.prototype.componentWillUnmount = function () {\r\n        Customizations.unobserve(this._onCustomizationChange);\r\n    };\r\n    Customizer.prototype.render = function () {\r\n        var _this = this;\r\n        var contextTransform = this.props.contextTransform;\r\n        return (React.createElement(CustomizerContext.Consumer, null, function (parentContext) {\r\n            var newContext = mergeCustomizations(_this.props, parentContext);\r\n            if (contextTransform) {\r\n                newContext = contextTransform(newContext);\r\n            }\r\n            return React.createElement(CustomizerContext.Provider, { value: newContext }, _this.props.children);\r\n        }));\r\n    };\r\n    return Customizer;\r\n}(BaseComponent));\r\nexport { Customizer };\r\n//# sourceMappingURL=Customizer.js.map","import { isVirtualElement } from './isVirtualElement';\r\n/**\r\n * Gets the elements which are child elements of the given element.\r\n * If `allowVirtualChildren` is `true`, this method enumerates virtual child elements\r\n * after the original children.\r\n * @param parent - The element to get the children of.\r\n * @param allowVirtualChildren - true if the method should enumerate virtual child elements.\r\n */\r\nexport function getChildren(parent, allowVirtualChildren) {\r\n    if (allowVirtualChildren === void 0) { allowVirtualChildren = true; }\r\n    var children = [];\r\n    if (parent) {\r\n        for (var i = 0; i < parent.children.length; i++) {\r\n            children.push(parent.children.item(i));\r\n        }\r\n        if (allowVirtualChildren && isVirtualElement(parent)) {\r\n            children.push.apply(children, parent._virtual.children);\r\n        }\r\n    }\r\n    return children;\r\n}\r\n//# sourceMappingURL=getChildren.js.map","/**\r\n * Regular expression matching characters to ignore when calculating the initials.\r\n * The first part matches characters within parenthesis, including the parenthesis.\r\n * The second part matches special ASCII characters except space, plus some unicode special characters.\r\n */\r\nvar UNWANTED_CHARS_REGEX = /\\([^)]*\\)|[\\0-\\u001F\\!-/:-@\\[-`\\{-\\u00BF\\u0250-\\u036F\\uD800-\\uFFFF]/g;\r\n/**\r\n * Regular expression matching phone numbers. Applied after chars matching UNWANTED_CHARS_REGEX have been removed\r\n * and number has been trimmed for whitespaces\r\n */\r\nvar PHONENUMBER_REGEX = /^\\d+[\\d\\s]*(:?ext|x|)\\s*\\d+$/i;\r\n/** Regular expression matching one or more spaces. */\r\nvar MULTIPLE_WHITESPACES_REGEX = /\\s+/g;\r\n/**\r\n * Regular expression matching languages for which we currently don't support initials.\r\n * Arabic:   Arabic, Arabic Supplement, Arabic Extended-A.\r\n * Korean:   Hangul Jamo, Hangul Compatibility Jamo, Hangul Jamo Extended-A, Hangul Syllables, Hangul Jamo Extended-B.\r\n * Japanese: Hiragana, Katakana.\r\n * CJK:      CJK Unified Ideographs Extension A, CJK Unified Ideographs, CJK Compatibility Ideographs, CJK Unified Ideographs Extension B\r\n */\r\n/* tslint:disable:max-line-length */\r\nvar UNSUPPORTED_TEXT_REGEX = /[\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\u1100-\\u11FF\\u3130-\\u318F\\uA960-\\uA97F\\uAC00-\\uD7AF\\uD7B0-\\uD7FF\\u3040-\\u309F\\u30A0-\\u30FF\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD869][\\uDC00-\\uDED6]/;\r\n/* tslint:enable:max-line-length */\r\nfunction getInitialsLatin(displayName, isRtl) {\r\n    var initials = '';\r\n    var splits = displayName.split(' ');\r\n    if (splits.length === 2) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n        initials += splits[1].charAt(0).toUpperCase();\r\n    }\r\n    else if (splits.length === 3) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n        initials += splits[2].charAt(0).toUpperCase();\r\n    }\r\n    else if (splits.length !== 0) {\r\n        initials += splits[0].charAt(0).toUpperCase();\r\n    }\r\n    if (isRtl && initials.length > 1) {\r\n        return initials.charAt(1) + initials.charAt(0);\r\n    }\r\n    return initials;\r\n}\r\nfunction cleanupDisplayName(displayName) {\r\n    displayName = displayName.replace(UNWANTED_CHARS_REGEX, '');\r\n    displayName = displayName.replace(MULTIPLE_WHITESPACES_REGEX, ' ');\r\n    displayName = displayName.trim();\r\n    return displayName;\r\n}\r\n/**\r\n * Get (up to 2 characters) initials based on display name of the persona.\r\n *\r\n * @public\r\n */\r\nexport function getInitials(displayName, isRtl, allowPhoneInitials) {\r\n    if (!displayName) {\r\n        return '';\r\n    }\r\n    displayName = cleanupDisplayName(displayName);\r\n    // For names containing CJK characters, and phone numbers, we don't display initials\r\n    if (UNSUPPORTED_TEXT_REGEX.test(displayName) || (!allowPhoneInitials && PHONENUMBER_REGEX.test(displayName))) {\r\n        return '';\r\n    }\r\n    return getInitialsLatin(displayName, isRtl);\r\n}\r\n//# sourceMappingURL=initials.js.map","/**\r\n * Determines the distance between two points.\r\n *\r\n * @public\r\n */\r\nexport function getDistanceBetweenPoints(point1, point2) {\r\n    var distance = Math.sqrt(Math.pow(point1.x - point2.x, 2) + Math.pow(point1.y - point2.y, 2));\r\n    return distance;\r\n}\r\n/**\r\n * Produces a proportionally-scaled version of an input content size when fit to a bounding size.\r\n * Given a `contentSize` and a `boundsSize`, this function scales `contentSize` proportionally\r\n * using either `contain` or `cover` fit behaviors.\r\n * Use this function to pre-calculate the layout for the CSS `object-fit` and `background-fit` behaviors.\r\n * With `contain`, the output size must be the largest it can be while completely within the `boundsSize`.\r\n * With `cover`, the output size must be the smallest it can be while completely around the `boundsSize`.\r\n * By default, there is a `maxScale` value of 1, which prevents the `contentSize` from being scaled larger.\r\n *\r\n * @param options - the options for the bounds fit operation\r\n */\r\nexport function fitContentToBounds(options) {\r\n    var contentSize = options.contentSize, boundsSize = options.boundsSize, _a = options.mode, mode = _a === void 0 ? 'contain' : _a, _b = options.maxScale, maxScale = _b === void 0 ? 1 : _b;\r\n    var contentAspectRatio = contentSize.width / contentSize.height;\r\n    var boundsAspectRatio = boundsSize.width / boundsSize.height;\r\n    var scale;\r\n    if (mode === 'contain' ? contentAspectRatio > boundsAspectRatio : contentAspectRatio < boundsAspectRatio) {\r\n        scale = boundsSize.width / contentSize.width;\r\n    }\r\n    else {\r\n        scale = boundsSize.height / contentSize.height;\r\n    }\r\n    var finalScale = Math.min(maxScale, scale);\r\n    return {\r\n        width: contentSize.width * finalScale,\r\n        height: contentSize.height * finalScale\r\n    };\r\n}\r\n/**\r\n * Calculates a number's precision based on the number of trailing\r\n * zeros if the number does not have a decimal indicated by a negative\r\n * precision. Otherwise, it calculates the number of digits after\r\n * the decimal point indicated by a positive precision.\r\n * @param value - the value to determine the precision of\r\n */\r\nexport function calculatePrecision(value) {\r\n    /**\r\n     * Group 1:\r\n     * [1-9]([0]+$) matches trailing zeros\r\n     * Group 2:\r\n     * \\.([0-9]*) matches all digits after a decimal point.\r\n     */\r\n    var groups = /[1-9]([0]+$)|\\.([0-9]*)/.exec(String(value));\r\n    if (!groups) {\r\n        return 0;\r\n    }\r\n    if (groups[1]) {\r\n        return -groups[1].length;\r\n    }\r\n    if (groups[2]) {\r\n        return groups[2].length;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Rounds a number to a certain level of precision. Accepts negative precision.\r\n * @param value - The value that is being rounded.\r\n * @param precision - The number of decimal places to round the number to\r\n */\r\nexport function precisionRound(value, precision, base) {\r\n    if (base === void 0) { base = 10; }\r\n    var exp = Math.pow(base, precision);\r\n    return Math.round(value * exp) / exp;\r\n}\r\n//# sourceMappingURL=math.js.map","var _baseUrl = '';\r\n/** Sets the current base url used for fetching images. */\r\nexport function getResourceUrl(url) {\r\n    return _baseUrl + url;\r\n}\r\n/** Gets the current base url used for fetching images. */\r\nexport function setBaseUrl(baseUrl) {\r\n    _baseUrl = baseUrl;\r\n}\r\n//# sourceMappingURL=resources.js.map","// Regex that finds { and } so they can be removed on a lookup for string format\r\nvar FORMAT_ARGS_REGEX = /[\\{\\}]/g;\r\n// Regex that finds {#} so it can be replaced by the arguments in string format\r\nvar FORMAT_REGEX = /\\{\\d+\\}/g;\r\n/**\r\n * String format method, used for scenarios where at runtime you\r\n * need to evaluate a formatted string given a tokenized string. This\r\n * usually only is needed in localization scenarios.\r\n\r\n * @example\r\n * ```tsx\r\n * \"I love {0} every {1}\".format(\"CXP\")\r\n * ```\r\n * will result in a Debug Exception.\r\n *\r\n * @public\r\n */\r\n// tslint:disable-next-line:no-any\r\nexport function format(s) {\r\n    'use strict';\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    var args = values;\r\n    // Callback match function\r\n    function replace_func(match) {\r\n        // looks up in the args\r\n        // tslint:disable-next-line:no-any\r\n        var replacement = args[match.replace(FORMAT_ARGS_REGEX, '')];\r\n        // catches undefined in nondebug and null in debug and nondebug\r\n        if (replacement === null || replacement === undefined) {\r\n            replacement = '';\r\n        }\r\n        return replacement;\r\n    }\r\n    return s.replace(FORMAT_REGEX, replace_func);\r\n}\r\n//# sourceMappingURL=string.js.map","// @uifabric/utilities@6.34.0\r\n// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.\r\nimport { setVersion } from '@uifabric/set-version';\r\nsetVersion('@uifabric/utilities', '6.34.0');\r\n//# sourceMappingURL=version.js.map","export * from './Async';\r\nexport * from './AutoScroll';\r\nexport * from './BaseComponent';\r\nexport * from './Context';\r\nexport * from './DelayedRender';\r\nexport * from './EventGroup';\r\nexport * from './FabricPerformance';\r\nexport * from './GlobalSettings';\r\nexport * from './KeyCodes';\r\nexport * from './Rectangle';\r\nexport * from './appendFunction';\r\nexport * from './aria';\r\nexport * from './array';\r\nexport * from './asAsync';\r\nexport * from './assertNever';\r\nexport * from './autobind';\r\nexport * from './classNamesFunction';\r\nexport * from './createRef';\r\nexport * from './css';\r\nexport * from './customizations/Customizations';\r\nexport * from './customizations/Customizer';\r\nexport * from './customizations/CustomizerContext';\r\nexport * from './customizations/customizable';\r\nexport * from './customizations/mergeCustomizations';\r\nexport * from './customizations/mergeSettings';\r\nexport * from './dom';\r\nexport * from './extendComponent';\r\nexport * from './focus';\r\nexport * from './hoist';\r\nexport * from './hoistStatics';\r\nexport * from './initializeComponentRef';\r\nexport * from './initializeFocusRects';\r\nexport * from './initials';\r\nexport * from './keyboard';\r\nexport * from './language';\r\nexport * from './math';\r\nexport * from './memoize';\r\nexport * from './merge';\r\nexport * from './mobileDetector';\r\nexport * from './object';\r\nexport * from './osDetector';\r\nexport * from './overflow';\r\nexport * from './properties';\r\nexport * from './resources';\r\nexport * from './rtl';\r\nexport * from './scroll';\r\nexport * from './string';\r\nexport * from './styled';\r\nexport * from './warn';\r\nexport { setSSR } from './dom/setSSR';\r\nimport './version';\r\n//# sourceMappingURL=index.js.map","import { setVersion } from './setVersion';\r\nexport { setVersion };\r\nsetVersion('@uifabric/set-version', '6.0.0');\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar React = require(\"react\");\r\nvar BaseDecorator_1 = require(\"./BaseDecorator\");\r\nvar Utilities_1 = require(\"../../Utilities\");\r\nvar ResponsiveMode;\r\n(function (ResponsiveMode) {\r\n    ResponsiveMode[ResponsiveMode[\"small\"] = 0] = \"small\";\r\n    ResponsiveMode[ResponsiveMode[\"medium\"] = 1] = \"medium\";\r\n    ResponsiveMode[ResponsiveMode[\"large\"] = 2] = \"large\";\r\n    ResponsiveMode[ResponsiveMode[\"xLarge\"] = 3] = \"xLarge\";\r\n    ResponsiveMode[ResponsiveMode[\"xxLarge\"] = 4] = \"xxLarge\";\r\n    ResponsiveMode[ResponsiveMode[\"xxxLarge\"] = 5] = \"xxxLarge\";\r\n})(ResponsiveMode = exports.ResponsiveMode || (exports.ResponsiveMode = {}));\r\nvar RESPONSIVE_MAX_CONSTRAINT = [479, 639, 1023, 1365, 1919, 99999999];\r\nvar _defaultMode;\r\n/**\r\n * Allows a server rendered scenario to provide a default responsive mode.\r\n */\r\nfunction setResponsiveMode(responsiveMode) {\r\n    _defaultMode = responsiveMode;\r\n}\r\nexports.setResponsiveMode = setResponsiveMode;\r\nfunction withResponsiveMode(ComposedComponent) {\r\n    var resultClass = /** @class */ (function (_super) {\r\n        tslib_1.__extends(WithResponsiveMode, _super);\r\n        function WithResponsiveMode(props) {\r\n            var _this = _super.call(this, props) || this;\r\n            _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\r\n            _this.state = {\r\n                responsiveMode: _this._getResponsiveMode()\r\n            };\r\n            return _this;\r\n        }\r\n        WithResponsiveMode.prototype.componentDidMount = function () {\r\n            var _this = this;\r\n            this._events.on(window, 'resize', function () {\r\n                var responsiveMode = _this._getResponsiveMode();\r\n                if (responsiveMode !== _this.state.responsiveMode) {\r\n                    _this.setState({\r\n                        responsiveMode: responsiveMode\r\n                    });\r\n                }\r\n            });\r\n        };\r\n        WithResponsiveMode.prototype.componentWillUnmount = function () {\r\n            this._events.dispose();\r\n        };\r\n        WithResponsiveMode.prototype.render = function () {\r\n            var responsiveMode = this.state.responsiveMode;\r\n            return React.createElement(ComposedComponent, tslib_1.__assign({ ref: this._updateComposedComponentRef, responsiveMode: responsiveMode }, this.props));\r\n        };\r\n        WithResponsiveMode.prototype._getResponsiveMode = function () {\r\n            var responsiveMode = ResponsiveMode.small;\r\n            var win = Utilities_1.getWindow();\r\n            if (typeof win !== 'undefined') {\r\n                try {\r\n                    while (win.innerWidth > RESPONSIVE_MAX_CONSTRAINT[responsiveMode]) {\r\n                        responsiveMode++;\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // Return a best effort result in cases where we're in the browser but it throws on getting innerWidth.\r\n                    responsiveMode = ResponsiveMode.large;\r\n                }\r\n            }\r\n            else {\r\n                if (_defaultMode !== undefined) {\r\n                    responsiveMode = _defaultMode;\r\n                }\r\n                else {\r\n                    throw new Error('Content was rendered in a server environment without providing a default responsive mode. ' +\r\n                        'Call setResponsiveMode to define what the responsive mode is.');\r\n                }\r\n            }\r\n            return responsiveMode;\r\n        };\r\n        return WithResponsiveMode;\r\n    }(BaseDecorator_1.BaseDecorator));\r\n    return Utilities_1.hoistStatics(ComposedComponent, resultClass);\r\n}\r\nexports.withResponsiveMode = withResponsiveMode;\r\n//# sourceMappingURL=withResponsiveMode.js.map","import _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport React from 'react';\nimport { Router, __RouterContext, Route } from 'react-router';\nexport * from 'react-router';\nimport { createBrowserHistory, createHashHistory, createLocation } from 'history';\nimport PropTypes from 'prop-types';\nimport warning from 'tiny-warning';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport invariant from 'tiny-invariant';\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\n\nvar BrowserRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(BrowserRouter, _React$Component);\n\n  function BrowserRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createBrowserHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = BrowserRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return BrowserRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<BrowserRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\") : void 0;\n  };\n}\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\n\nvar HashRouter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(HashRouter, _React$Component);\n\n  function HashRouter() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.history = createHashHistory(_this.props);\n    return _this;\n  }\n\n  var _proto = HashRouter.prototype;\n\n  _proto.render = function render() {\n    return React.createElement(Router, {\n      history: this.history,\n      children: this.props.children\n    });\n  };\n\n  return HashRouter;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function () {\n    process.env.NODE_ENV !== \"production\" ? warning(!this.props.history, \"<HashRouter> ignores the history prop. To use a custom history, \" + \"use `import { Router }` instead of `import { HashRouter as Router }`.\") : void 0;\n  };\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n/**\n * The public API for rendering a history-aware <a>.\n */\n\n\nvar Link =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Link, _React$Component);\n\n  function Link() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Link.prototype;\n\n  _proto.handleClick = function handleClick(event, history) {\n    if (this.props.onClick) this.props.onClick(event);\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && ( // ignore everything but left clicks\n    !this.props.target || this.props.target === \"_self\") && // let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n        event.preventDefault();\n        var method = this.props.replace ? history.replace : history.push;\n        method(this.props.to);\n      }\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        innerRef = _this$props.innerRef,\n        replace = _this$props.replace,\n        to = _this$props.to,\n        rest = _objectWithoutPropertiesLoose(_this$props, [\"innerRef\", \"replace\", \"to\"]); // eslint-disable-line no-unused-vars\n\n\n    return React.createElement(__RouterContext.Consumer, null, function (context) {\n      !context ? process.env.NODE_ENV !== \"production\" ? invariant(false, \"You should not use <Link> outside a <Router>\") : invariant(false) : void 0;\n      var location = typeof to === \"string\" ? createLocation(to, null, null, context.location) : to;\n      var href = location ? context.history.createHref(location) : \"\";\n      return React.createElement(\"a\", _extends({}, rest, {\n        onClick: function onClick(event) {\n          return _this.handleClick(event, context.history);\n        },\n        href: href,\n        ref: innerRef\n      }));\n    });\n  };\n\n  return Link;\n}(React.Component);\n\nif (process.env.NODE_ENV !== \"production\") {\n  var toType = PropTypes.oneOfType([PropTypes.string, PropTypes.object]);\n  var innerRefType = PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.shape({\n    current: PropTypes.any\n  })]);\n  Link.propTypes = {\n    innerRef: innerRefType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nfunction joinClassnames() {\n  for (var _len = arguments.length, classnames = new Array(_len), _key = 0; _key < _len; _key++) {\n    classnames[_key] = arguments[_key];\n  }\n\n  return classnames.filter(function (i) {\n    return i;\n  }).join(\" \");\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\n\n\nfunction NavLink(_ref) {\n  var _ref$ariaCurrent = _ref[\"aria-current\"],\n      ariaCurrent = _ref$ariaCurrent === void 0 ? \"page\" : _ref$ariaCurrent,\n      _ref$activeClassName = _ref.activeClassName,\n      activeClassName = _ref$activeClassName === void 0 ? \"active\" : _ref$activeClassName,\n      activeStyle = _ref.activeStyle,\n      classNameProp = _ref.className,\n      exact = _ref.exact,\n      isActiveProp = _ref.isActive,\n      location = _ref.location,\n      strict = _ref.strict,\n      styleProp = _ref.style,\n      to = _ref.to,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"aria-current\", \"activeClassName\", \"activeStyle\", \"className\", \"exact\", \"isActive\", \"location\", \"strict\", \"style\", \"to\"]);\n\n  var path = typeof to === \"object\" ? to.pathname : to; // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n\n  var escapedPath = path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n  return React.createElement(Route, {\n    path: escapedPath,\n    exact: exact,\n    strict: strict,\n    location: location,\n    children: function children(_ref2) {\n      var location = _ref2.location,\n          match = _ref2.match;\n      var isActive = !!(isActiveProp ? isActiveProp(match, location) : match);\n      var className = isActive ? joinClassnames(classNameProp, activeClassName) : classNameProp;\n      var style = isActive ? _extends({}, styleProp, activeStyle) : styleProp;\n      return React.createElement(Link, _extends({\n        \"aria-current\": isActive && ariaCurrent || null,\n        className: className,\n        style: style,\n        to: to\n      }, rest));\n    }\n  });\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  var ariaCurrentType = PropTypes.oneOf([\"page\", \"step\", \"location\", \"date\", \"time\", \"true\"]);\n  NavLink.propTypes = _extends({}, Link.propTypes, {\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.string,\n    exact: Route.propTypes.exact,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    strict: Route.propTypes.strict,\n    style: PropTypes.object\n  });\n}\n\nexport { BrowserRouter, HashRouter, Link, NavLink };\n","import { HighContrastSelector } from '../../Styling';\r\nexport function standardStyles(theme) {\r\n    var s = theme.semanticColors;\r\n    var buttonBackground = s.buttonBackground;\r\n    var buttonBackgroundChecked = s.buttonBackgroundChecked;\r\n    var buttonBackgroundHovered = s.buttonBackgroundHovered;\r\n    var buttonText = s.buttonText;\r\n    var buttonTextHovered = s.buttonTextHovered;\r\n    var buttonTextChecked = s.buttonTextChecked;\r\n    var buttonTextCheckedHovered = s.buttonTextCheckedHovered;\r\n    return {\r\n        root: {\r\n            backgroundColor: buttonBackground,\r\n            color: buttonText\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: buttonBackgroundHovered,\r\n            color: buttonTextHovered,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    borderColor: 'Highlight',\r\n                    color: 'Highlight'\r\n                },\r\n                _a)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: buttonBackgroundChecked,\r\n            color: buttonTextChecked\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.neutralLight,\r\n            color: buttonTextCheckedHovered\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _b)\r\n        },\r\n        splitButtonMenuButton: {\r\n            color: theme.palette.white,\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLight,\r\n                    selectors: (_c = {},\r\n                        _c[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _c)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.neutralTertiaryAlt\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.themePrimary\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.neutralLight\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.neutralPrimary\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        }\r\n    };\r\n    var _a, _b, _c;\r\n}\r\nexport function primaryStyles(theme) {\r\n    return {\r\n        root: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'WindowText',\r\n                    MsHighContrastAdjust: 'none'\r\n                },\r\n                _a)\r\n        },\r\n        rootHovered: {\r\n            backgroundColor: theme.palette.themeDarkAlt,\r\n            color: theme.palette.white,\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'Highlight'\r\n                },\r\n                _b)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white,\r\n            selectors: (_c = {},\r\n                _c[HighContrastSelector] = {\r\n                    color: 'Window',\r\n                    backgroundColor: 'WindowText',\r\n                    MsHighContrastAdjust: 'none'\r\n                },\r\n                _c)\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: theme.palette.themeDark,\r\n            color: theme.palette.white\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white\r\n        },\r\n        rootDisabled: {\r\n            selectors: (_d = {},\r\n                _d[HighContrastSelector] = {\r\n                    color: 'GrayText',\r\n                    borderColor: 'GrayText',\r\n                    backgroundColor: 'Window'\r\n                },\r\n                _d)\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_e = {},\r\n                _e[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _e)\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.themeLighter\r\n        },\r\n        splitButtonMenuButton: {\r\n            backgroundColor: theme.palette.themePrimary,\r\n            color: theme.palette.white,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.themeDark,\r\n                    selectors: (_f = {},\r\n                        _f[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _f)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.themeDark\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.themeDark\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.white\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f;\r\n}\r\n//# sourceMappingURL=ButtonThemes.js.map","export var TooltipDelay;\r\n(function (TooltipDelay) {\r\n    TooltipDelay[TooltipDelay[\"zero\"] = 0] = \"zero\";\r\n    TooltipDelay[TooltipDelay[\"medium\"] = 1] = \"medium\";\r\n    TooltipDelay[TooltipDelay[\"long\"] = 2] = \"long\";\r\n})(TooltipDelay || (TooltipDelay = {}));\r\n//# sourceMappingURL=Tooltip.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * Utility component for delaying the render of a child component after a given delay. This component\r\n * requires a single child component; don't pass in many components. Wrap multiple components in a DIV\r\n * if necessary.\r\n *\r\n * @public\r\n */\r\nvar DelayedRender = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DelayedRender, _super);\r\n    function DelayedRender(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.state = {\r\n            isRendered: false\r\n        };\r\n        return _this;\r\n    }\r\n    DelayedRender.prototype.componentDidMount = function () {\r\n        var _this = this;\r\n        var delay = this.props.delay;\r\n        this._timeoutId = setTimeout(function () {\r\n            _this.setState({\r\n                isRendered: true\r\n            });\r\n        }, delay);\r\n    };\r\n    DelayedRender.prototype.componentWillUnmount = function () {\r\n        if (this._timeoutId) {\r\n            clearTimeout(this._timeoutId);\r\n        }\r\n    };\r\n    DelayedRender.prototype.render = function () {\r\n        return this.state.isRendered ? React.Children.only(this.props.children) : null;\r\n    };\r\n    DelayedRender.defaultProps = {\r\n        delay: 0\r\n    };\r\n    return DelayedRender;\r\n}(React.Component));\r\nexport { DelayedRender };\r\n//# sourceMappingURL=DelayedRender.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nrequire(\"./version\");\r\ntslib_1.__exportStar(require(\"@uifabric/utilities\"), exports);\r\n//# sourceMappingURL=Utilities.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\n/**\r\n * @deprecated This function uses the legacy context API, which is deprecated and should not be\r\n * used in new code. Please migrate to the new context API. https://reactjs.org/docs/context.html\r\n */\r\nexport function provideContext(contextTypes, mapPropsToContext) {\r\n    var Provider = /** @class */ (function (_super) {\r\n        tslib_1.__extends(Provider, _super);\r\n        function Provider() {\r\n            return _super !== null && _super.apply(this, arguments) || this;\r\n        }\r\n        Provider.prototype.getChildContext = function () {\r\n            return mapPropsToContext(this.props);\r\n        };\r\n        Provider.prototype.render = function () {\r\n            return React.Children.only(this.props.children);\r\n        };\r\n        Provider.childContextTypes = contextTypes;\r\n        return Provider;\r\n    }(React.Component));\r\n    return Provider;\r\n}\r\n//# sourceMappingURL=Context.js.map","/**\r\n * Detects whether an element's content has horizontal overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasHorizontalOverflow(element) {\r\n    return element.clientWidth < element.scrollWidth;\r\n}\r\n/**\r\n * Detects whether an element's content has vertical overflow\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasVerticalOverflow(element) {\r\n    return element.clientHeight < element.scrollHeight;\r\n}\r\n/**\r\n * Detects whether an element's content has overflow in any direction\r\n *\r\n * @public\r\n * @param element - Element to check for overflow\r\n * @returns True if element's content overflows\r\n */\r\nexport function hasOverflow(element) {\r\n    return hasHorizontalOverflow(element) || hasVerticalOverflow(element);\r\n}\r\n//# sourceMappingURL=overflow.js.map","import { concatStyleSets, FontWeights } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\r\nimport { primaryStyles, standardStyles } from '../ButtonThemes';\r\nvar DEFAULT_BUTTON_HEIGHT = '32px';\r\nvar DEFAULT_BUTTON_MINWIDTH = '80px';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles, primary) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var splitButtonStyles = getSplitButtonStyles(theme);\r\n    var defaultButtonStyles = {\r\n        root: {\r\n            minWidth: DEFAULT_BUTTON_MINWIDTH,\r\n            height: DEFAULT_BUTTON_HEIGHT\r\n        },\r\n        label: {\r\n            fontWeight: FontWeights.semibold\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, defaultButtonStyles, primary ? primaryStyles(theme) : standardStyles(theme), splitButtonStyles, customStyles);\r\n});\r\n//# sourceMappingURL=DefaultButton.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './DefaultButton.styles';\r\nvar DefaultButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DefaultButton, _super);\r\n    function DefaultButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    DefaultButton.prototype.render = function () {\r\n        var _a = this.props, _b = _a.primary, primary = _b === void 0 ? false : _b, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: primary ? 'ms-Button--primary' : 'ms-Button--default', styles: getStyles(theme, styles, primary), onRenderDescription: nullRender })));\r\n    };\r\n    DefaultButton = tslib_1.__decorate([\r\n        customizable('DefaultButton', ['theme', 'styles'], true)\r\n    ], DefaultButton);\r\n    return DefaultButton;\r\n}(BaseComponent));\r\nexport { DefaultButton };\r\n//# sourceMappingURL=DefaultButton.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tslib_1 = require(\"tslib\");\r\nvar Utilities_1 = require(\"../../Utilities\");\r\nvar BaseDecorator = /** @class */ (function (_super) {\r\n    tslib_1.__extends(BaseDecorator, _super);\r\n    function BaseDecorator(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // tslint:disable-next-line:typedef\r\n        _this._skipComponentRefResolution = true;\r\n        _this._updateComposedComponentRef = _this._updateComposedComponentRef.bind(_this);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Updates the ref to the component composed by the decorator, which will also take care of hoisting\r\n     * (and unhoisting as appropriate) methods from said component.\r\n     *\r\n     * Pass this method as the argument to the 'ref' property of the composed component.\r\n     */\r\n    BaseDecorator.prototype._updateComposedComponentRef = function (composedComponentInstance) {\r\n        this._composedComponentInstance = composedComponentInstance;\r\n        if (composedComponentInstance) {\r\n            this._hoisted = Utilities_1.hoistMethods(this, composedComponentInstance);\r\n        }\r\n        else if (this._hoisted) {\r\n            Utilities_1.unhoistMethods(this, this._hoisted);\r\n        }\r\n    };\r\n    return BaseDecorator;\r\n}(Utilities_1.BaseComponent));\r\nexports.BaseDecorator = BaseDecorator;\r\n//# sourceMappingURL=BaseDecorator.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// office-ui-fabric-react@6.152.1\r\n// Do not modify this file, the file is generated as part of publish. The checked in version is a placeholder only.\r\nvar set_version_1 = require(\"@uifabric/set-version\");\r\nset_version_1.setVersion('office-ui-fabric-react', '6.152.1');\r\n//# sourceMappingURL=version.js.map","// This file mimics styles and mixins from _General.Mixins.scss\r\nexport var normalize = {\r\n    boxShadow: 'none',\r\n    margin: 0,\r\n    padding: 0,\r\n    boxSizing: 'border-box'\r\n};\r\nexport var noWrap = {\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    whiteSpace: 'nowrap'\r\n};\r\n//# sourceMappingURL=GeneralStyles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { DefaultButton } from '../DefaultButton/DefaultButton';\r\nvar PrimaryButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PrimaryButton, _super);\r\n    function PrimaryButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Set this BaseComponent._skipComponentRefResolution to true, bypassing resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    PrimaryButton.prototype.render = function () {\r\n        return React.createElement(DefaultButton, tslib_1.__assign({}, this.props, { primary: true, onRenderDescription: nullRender }));\r\n    };\r\n    PrimaryButton = tslib_1.__decorate([\r\n        customizable('PrimaryButton', ['theme', 'styles'], true)\r\n    ], PrimaryButton);\r\n    return PrimaryButton;\r\n}(BaseComponent));\r\nexport { PrimaryButton };\r\n//# sourceMappingURL=PrimaryButton.js.map","export var SelectableOptionMenuItemType;\r\n(function (SelectableOptionMenuItemType) {\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Normal\"] = 0] = \"Normal\";\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Divider\"] = 1] = \"Divider\";\r\n    SelectableOptionMenuItemType[SelectableOptionMenuItemType[\"Header\"] = 2] = \"Header\";\r\n})(SelectableOptionMenuItemType || (SelectableOptionMenuItemType = {}));\r\n//# sourceMappingURL=SelectableOption.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, getId, classNamesFunction, mergeAriaAttributeValues } from '../../Utilities';\r\nimport { Icon } from '../../Icon';\r\nimport { KeytipData } from '../../KeytipData';\r\nvar getClassNames = classNamesFunction();\r\nvar CheckboxBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CheckboxBase, _super);\r\n    /**\r\n     * Initialize a new instance of the Checkbox\r\n     * @param props - Props for the component\r\n     * @param context - Context or initial state for the base component.\r\n     */\r\n    function CheckboxBase(props, context) {\r\n        var _this = _super.call(this, props, context) || this;\r\n        _this._checkBox = React.createRef();\r\n        _this._onFocus = function (ev) {\r\n            var inputProps = _this.props.inputProps;\r\n            if (inputProps && inputProps.onFocus) {\r\n                inputProps.onFocus(ev);\r\n            }\r\n        };\r\n        _this._onBlur = function (ev) {\r\n            var inputProps = _this.props.inputProps;\r\n            if (inputProps && inputProps.onBlur) {\r\n                inputProps.onBlur(ev);\r\n            }\r\n        };\r\n        _this._onChange = function (ev) {\r\n            var _a = _this.props, disabled = _a.disabled, onChange = _a.onChange;\r\n            var isChecked = _this.state.isChecked;\r\n            if (!disabled) {\r\n                if (onChange) {\r\n                    onChange(ev, !isChecked);\r\n                }\r\n                if (_this.props.checked === undefined) {\r\n                    _this.setState({ isChecked: !isChecked });\r\n                }\r\n            }\r\n        };\r\n        _this._onRenderLabel = function (props) {\r\n            var label = props.label;\r\n            return label ? React.createElement(\"span\", { className: _this._classNames.text }, label) : null;\r\n        };\r\n        _this._warnMutuallyExclusive({\r\n            checked: 'defaultChecked'\r\n        });\r\n        _this._id = _this.props.id || getId('checkbox-');\r\n        _this.state = {\r\n            isChecked: !!(props.checked !== undefined ? props.checked : props.defaultChecked)\r\n        };\r\n        return _this;\r\n    }\r\n    CheckboxBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.checked !== undefined) {\r\n            this.setState({\r\n                isChecked: !!newProps.checked // convert null to false\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Render the Checkbox based on passed props\r\n     */\r\n    CheckboxBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, checked = _a.checked, className = _a.className, defaultChecked = _a.defaultChecked, disabled = _a.disabled, inputProps = _a.inputProps, name = _a.name, boxSide = _a.boxSide, theme = _a.theme, ariaLabel = _a.ariaLabel, ariaLabelledBy = _a.ariaLabelledBy, ariaDescribedBy = _a.ariaDescribedBy, styles = _a.styles, _b = _a.onRenderLabel, onRenderLabel = _b === void 0 ? this._onRenderLabel : _b, checkmarkIconProps = _a.checkmarkIconProps, ariaPositionInSet = _a.ariaPositionInSet, ariaSetSize = _a.ariaSetSize, keytipProps = _a.keytipProps, title = _a.title;\r\n        var isChecked = checked === undefined ? this.state.isChecked : checked;\r\n        var isReversed = boxSide !== 'start' ? true : false;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            checked: isChecked,\r\n            reversed: isReversed,\r\n            isUsingCustomLabelRender: onRenderLabel !== this._onRenderLabel\r\n        });\r\n        return (React.createElement(KeytipData, { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"div\", { className: _this._classNames.root },\r\n            React.createElement(\"input\", tslib_1.__assign({ type: \"checkbox\" }, inputProps, { \"data-ktp-execute-target\": keytipAttributes['data-ktp-execute-target'] }, checked !== undefined && { checked: checked }, defaultChecked !== undefined && { defaultChecked: defaultChecked }, { disabled: disabled, className: _this._classNames.input, ref: _this._checkBox, name: name, id: _this._id, title: title, onChange: _this._onChange, onFocus: _this._onFocus, onBlur: _this._onBlur, \"aria-disabled\": disabled, \"aria-label\": ariaLabel, \"aria-labelledby\": ariaLabelledBy, \"aria-describedby\": mergeAriaAttributeValues(ariaDescribedBy, keytipAttributes['aria-describedby']), \"aria-posinset\": ariaPositionInSet, \"aria-setsize\": ariaSetSize })),\r\n            React.createElement(\"label\", { className: _this._classNames.label, htmlFor: _this._id },\r\n                React.createElement(\"div\", { className: _this._classNames.checkbox, \"data-ktp-target\": keytipAttributes['data-ktp-target'] },\r\n                    React.createElement(Icon, tslib_1.__assign({ iconName: \"CheckMark\" }, checkmarkIconProps, { className: _this._classNames.checkmark }))),\r\n                onRenderLabel(_this.props, _this._onRenderLabel)))); }));\r\n    };\r\n    Object.defineProperty(CheckboxBase.prototype, \"checked\", {\r\n        get: function () {\r\n            return this.state.isChecked;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CheckboxBase.prototype.focus = function () {\r\n        if (this._checkBox.current) {\r\n            this._checkBox.current.focus();\r\n        }\r\n    };\r\n    CheckboxBase.defaultProps = {\r\n        boxSide: 'start'\r\n    };\r\n    return CheckboxBase;\r\n}(BaseComponent));\r\nexport { CheckboxBase };\r\n//# sourceMappingURL=Checkbox.base.js.map","import { styled } from '../../Utilities';\r\nimport { CheckboxBase } from './Checkbox.base';\r\nimport { getStyles } from './Checkbox.styles';\r\nexport var Checkbox = styled(CheckboxBase, getStyles, undefined, { scope: 'Checkbox' });\r\n//# sourceMappingURL=Checkbox.js.map","import { FontSizes, HighContrastSelector } from '../../Styling';\r\nimport { IsFocusVisibleClassName } from '../../Utilities';\r\nvar MS_CHECKBOX_LABEL_SIZE = '20px';\r\nvar MS_CHECKBOX_TRANSITION_DURATION = '200ms';\r\nvar MS_CHECKBOX_TRANSITION_TIMING = 'cubic-bezier(.4, 0, .23, 1)';\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme, reversed = props.reversed, checked = props.checked, disabled = props.disabled, isUsingCustomLabelRender = props.isUsingCustomLabelRender;\r\n    var semanticColors = theme.semanticColors;\r\n    var checkmarkFontColor = semanticColors.inputForegroundChecked;\r\n    var checkmarkFontColorCheckedDisabled = semanticColors.disabledBackground;\r\n    var checkmarkFontColorHovered = semanticColors.inputBorder;\r\n    var checkboxBorderColor = semanticColors.smallInputBorder;\r\n    var checkboxBorderColorChecked = semanticColors.inputBackgroundChecked;\r\n    var checkboxBorderColorDisabled = semanticColors.disabledBodySubtext;\r\n    var checkboxBorderHoveredColor = semanticColors.inputBorderHovered;\r\n    var checkboxBackgroundChecked = semanticColors.inputBackgroundChecked;\r\n    var checkboxBackgroundCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n    var checkboxBorderColorCheckedHovered = semanticColors.inputBackgroundCheckedHovered;\r\n    var checkboxHoveredTextColor = semanticColors.bodyText;\r\n    var checkboxBackgroundDisabledChecked = semanticColors.disabledBodySubtext;\r\n    var checkboxTextColor = semanticColors.bodyText;\r\n    var checkboxTextColorDisabled = semanticColors.disabledText;\r\n    return {\r\n        root: [\r\n            'ms-Checkbox',\r\n            {\r\n                position: 'relative',\r\n                display: 'flex'\r\n            },\r\n            reversed && 'reversed',\r\n            checked && 'is-checked',\r\n            !disabled && 'is-enabled',\r\n            disabled && 'is-disabled',\r\n            !disabled && [\r\n                !checked && {\r\n                    selectors: {\r\n                        ':hover .ms-Checkbox-checkbox': {\r\n                            borderColor: checkboxBorderHoveredColor,\r\n                            selectors: (_a = {},\r\n                                _a[HighContrastSelector] = {\r\n                                    borderColor: 'Highlight'\r\n                                },\r\n                                _a)\r\n                        },\r\n                        ':focus .ms-Checkbox-checkbox': { borderColor: checkboxBorderHoveredColor },\r\n                        ':hover .ms-Checkbox-checkmark': {\r\n                            color: checkmarkFontColorHovered,\r\n                            opacity: '1',\r\n                            selectors: (_b = {},\r\n                                _b[HighContrastSelector] = {\r\n                                    color: 'Highlight'\r\n                                },\r\n                                _b)\r\n                        }\r\n                    }\r\n                },\r\n                checked && {\r\n                    selectors: (_c = {\r\n                            ':hover .ms-Checkbox-checkbox': {\r\n                                background: checkboxBackgroundCheckedHovered,\r\n                                borderColor: checkboxBorderColorCheckedHovered\r\n                            },\r\n                            ':focus .ms-Checkbox-checkbox': {\r\n                                background: checkboxBackgroundCheckedHovered,\r\n                                borderColor: checkboxBorderColorCheckedHovered\r\n                            }\r\n                        },\r\n                        _c[HighContrastSelector] = {\r\n                            selectors: {\r\n                                ':hover .ms-Checkbox-checkbox': {\r\n                                    background: 'Window',\r\n                                    borderColor: 'Highlight'\r\n                                },\r\n                                ':focus .ms-Checkbox-checkbox': {\r\n                                    background: 'Highlight'\r\n                                },\r\n                                ':focus:hover .ms-Checkbox-checkbox': {\r\n                                    background: 'Highlight'\r\n                                },\r\n                                ':focus:hover .ms-Checkbox-checkmark': {\r\n                                    color: 'Window'\r\n                                },\r\n                                ':hover .ms-Checkbox-checkmark': {\r\n                                    color: 'Highlight'\r\n                                }\r\n                            }\r\n                        },\r\n                        _c)\r\n                },\r\n                {\r\n                    selectors: {\r\n                        ':hover .ms-Checkbox-text': { color: checkboxHoveredTextColor },\r\n                        ':focus .ms-Checkbox-text': { color: checkboxHoveredTextColor }\r\n                    }\r\n                }\r\n            ],\r\n            className\r\n        ],\r\n        input: [\r\n            {\r\n                position: 'absolute',\r\n                background: 'none',\r\n                opacity: 0,\r\n                selectors: (_d = {},\r\n                    _d[\".\" + IsFocusVisibleClassName + \" &:focus + label::before\"] = {\r\n                        outline: '1px solid ' + theme.palette.neutralSecondary,\r\n                        outlineOffset: '2px',\r\n                        selectors: (_e = {},\r\n                            _e[HighContrastSelector] = {\r\n                                outline: '1px solid ActiveBorder'\r\n                            },\r\n                            _e)\r\n                    },\r\n                    _d)\r\n            }\r\n        ],\r\n        label: [\r\n            'ms-Checkbox-label',\r\n            theme.fonts.medium,\r\n            {\r\n                display: 'flex',\r\n                alignItems: isUsingCustomLabelRender ? 'center' : 'flex-start',\r\n                cursor: disabled ? 'default' : 'pointer',\r\n                position: 'relative',\r\n                userSelect: 'none',\r\n                textAlign: 'left'\r\n            },\r\n            reversed && {\r\n                flexDirection: 'row-reverse',\r\n                justifyContent: 'flex-end'\r\n            },\r\n            {\r\n                selectors: {\r\n                    '&::before': {\r\n                        position: 'absolute',\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 0,\r\n                        bottom: 0,\r\n                        content: '\"\"',\r\n                        pointerEvents: 'none'\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        checkbox: [\r\n            'ms-Checkbox-checkbox',\r\n            {\r\n                display: 'flex',\r\n                flexShrink: 0,\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                height: MS_CHECKBOX_LABEL_SIZE,\r\n                width: MS_CHECKBOX_LABEL_SIZE,\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                borderColor: checkboxBorderColor,\r\n                boxSizing: 'border-box',\r\n                transitionProperty: 'background, border, border-color',\r\n                transitionDuration: MS_CHECKBOX_TRANSITION_DURATION,\r\n                transitionTimingFunction: MS_CHECKBOX_TRANSITION_TIMING,\r\n                /* in case the icon is bigger than the box */\r\n                overflow: 'hidden'\r\n            },\r\n            !reversed\r\n                ? // this margin on the checkbox is for backwards compat.\r\n                    // notably it has the effect where a customRender is used, there will be only a 4px margin from checkbox to label.\r\n                    // the label by default would have another 4px margin for a total of 8px margin between checkbox and label.\r\n                    // we don't combine the two (and move it into the text) to not incur a breaking change for everyone using custom render atm.\r\n                    {\r\n                        marginRight: 4\r\n                    }\r\n                : {\r\n                    marginLeft: 4\r\n                },\r\n            !disabled &&\r\n                checked && {\r\n                background: checkboxBackgroundChecked,\r\n                borderColor: checkboxBorderColorChecked,\r\n                selectors: (_f = {},\r\n                    _f[HighContrastSelector] = {\r\n                        background: 'Highlight',\r\n                        borderColor: 'Highlight'\r\n                    },\r\n                    _f)\r\n            },\r\n            disabled && {\r\n                borderColor: checkboxBorderColorDisabled,\r\n                selectors: (_g = {},\r\n                    _g[HighContrastSelector] = {\r\n                        borderColor: 'InactiveBorder'\r\n                    },\r\n                    _g)\r\n            },\r\n            checked &&\r\n                disabled && {\r\n                background: checkboxBackgroundDisabledChecked,\r\n                borderColor: checkboxBorderColorDisabled\r\n            }\r\n        ],\r\n        checkmark: [\r\n            'ms-Checkbox-checkmark',\r\n            {\r\n                opacity: checked ? '1' : '0',\r\n                color: checked && disabled ? checkmarkFontColorCheckedDisabled : checkmarkFontColor,\r\n                selectors: (_h = {},\r\n                    _h[HighContrastSelector] = {\r\n                        color: disabled ? 'InactiveBorder' : 'Window',\r\n                        MsHighContrastAdjust: 'none'\r\n                    },\r\n                    _h)\r\n            }\r\n        ],\r\n        text: [\r\n            'ms-Checkbox-text',\r\n            {\r\n                color: disabled ? checkboxTextColorDisabled : checkboxTextColor,\r\n                fontSize: FontSizes.medium,\r\n                lineHeight: '20px'\r\n            },\r\n            !reversed\r\n                ? {\r\n                    marginLeft: 4\r\n                }\r\n                : {\r\n                    marginRight: 4\r\n                },\r\n            disabled && {\r\n                selectors: (_j = {},\r\n                    _j[HighContrastSelector] = {\r\n                        // backwards compat for the color of the text when the checkbox was rendered\r\n                        // using a Button.\r\n                        color: 'InactiveBorder'\r\n                    },\r\n                    _j)\r\n            }\r\n        ]\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n};\r\n//# sourceMappingURL=Checkbox.styles.js.map","import { concatStyleSets, HighContrastSelector } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nvar DEFAULT_BUTTON_HEIGHT = '40px';\r\nvar DEFAULT_PADDING = '0 4px';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var actionButtonStyles = {\r\n        root: {\r\n            padding: DEFAULT_PADDING,\r\n            height: DEFAULT_BUTTON_HEIGHT,\r\n            color: theme.palette.neutralPrimary,\r\n            backgroundColor: 'transparent',\r\n            border: '1px solid transparent'\r\n        },\r\n        rootHovered: {\r\n            color: theme.palette.themePrimary,\r\n            selectors: (_a = {},\r\n                _a[HighContrastSelector] = {\r\n                    borderColor: 'Highlight',\r\n                    color: 'Highlight'\r\n                },\r\n                _a)\r\n        },\r\n        iconHovered: {\r\n            color: theme.palette.themePrimary\r\n        },\r\n        rootPressed: {\r\n            color: theme.palette.black\r\n        },\r\n        rootExpanded: {\r\n            color: theme.palette.themePrimary\r\n        },\r\n        iconPressed: {\r\n            color: theme.palette.themeDarker\r\n        },\r\n        rootDisabled: {\r\n            color: theme.palette.neutralTertiary,\r\n            backgroundColor: 'transparent'\r\n        },\r\n        rootChecked: {\r\n            color: theme.palette.black\r\n        },\r\n        iconChecked: {\r\n            color: theme.palette.themeDarker\r\n        },\r\n        flexContainer: {\r\n            justifyContent: 'flex-start'\r\n        },\r\n        icon: {\r\n            color: theme.palette.themeDarkAlt\r\n        },\r\n        iconDisabled: {\r\n            color: 'inherit'\r\n        },\r\n        menuIcon: {\r\n            color: theme.palette.neutralSecondary\r\n        },\r\n        textContainer: {\r\n            flexGrow: 0\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, actionButtonStyles, customStyles);\r\n    var _a;\r\n});\r\n//# sourceMappingURL=ActionButton.styles.js.map","import { ActionButton } from '../ActionButton/ActionButton';\r\nexport var CommandButton = ActionButton;\r\n//# sourceMappingURL=CommandButton.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './ActionButton.styles';\r\nvar ActionButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ActionButton, _super);\r\n    function ActionButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    ActionButton.prototype.render = function () {\r\n        var _a = this.props, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: \"ms-Button--action ms-Button--command\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\r\n    };\r\n    ActionButton = tslib_1.__decorate([\r\n        customizable('ActionButton', ['theme', 'styles'], true)\r\n    ], ActionButton);\r\n    return ActionButton;\r\n}(BaseComponent));\r\nexport { ActionButton };\r\n//# sourceMappingURL=ActionButton.js.map","import { DropdownMenuItemType } from '../Dropdown.types';\r\n/**\r\n * A utility class to cache size and position in cache.\r\n *\r\n * Dropdown options has non-selectable display types. It is therefore not cheap to determine\r\n * the total number of actual selectable options as well as the position an option is in the\r\n * list of options - O(n) cost for each lookup.\r\n *\r\n * Given that we potentially have to make this determination on every single render pass, this\r\n * cache should provide a little bit of relief.\r\n */\r\nvar DropdownSizePosCache = /** @class */ (function () {\r\n    function DropdownSizePosCache() {\r\n        this._size = 0;\r\n    }\r\n    /**\r\n     * Invalidates the cache and recalculate the size of selectable options.\r\n     */\r\n    DropdownSizePosCache.prototype.updateOptions = function (options) {\r\n        var displayOnlyOptionsCache = [];\r\n        var size = 0;\r\n        for (var i = 0; i < options.length; i++) {\r\n            if (options[i].itemType === DropdownMenuItemType.Divider || options[i].itemType === DropdownMenuItemType.Header) {\r\n                displayOnlyOptionsCache.push(i);\r\n            }\r\n            else {\r\n                size++;\r\n            }\r\n        }\r\n        this._size = size;\r\n        this._displayOnlyOptionsCache = displayOnlyOptionsCache;\r\n    };\r\n    Object.defineProperty(DropdownSizePosCache.prototype, \"optionSetSize\", {\r\n        /**\r\n         * The size of all the selectable options.\r\n         */\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the position of this option element relative to the full set of selectable option elements.\r\n     * Note: the first selectable element is position 1 in the set.\r\n     * @param index The raw index of the option element.\r\n     */\r\n    DropdownSizePosCache.prototype.positionInSet = function (index) {\r\n        if (index === undefined) {\r\n            return undefined;\r\n        }\r\n        // we could possibly memoize this too but this should be good enough, most of the time (the expectation is that\r\n        // when you have a lot of options, the selectable options will heavily dominate over the non-selectable options.\r\n        var offset = 0;\r\n        while (index > this._displayOnlyOptionsCache[offset]) {\r\n            offset++;\r\n        }\r\n        if (this._displayOnlyOptionsCache[offset] === index) {\r\n            throw new Error(\"Unexpected: Option at index \" + index + \" is not a selectable element.\");\r\n        }\r\n        return index - offset + 1;\r\n    };\r\n    return DropdownSizePosCache;\r\n}());\r\nexport { DropdownSizePosCache };\r\n//# sourceMappingURL=DropdownSizePosCache.js.map","export var PanelType;\r\n(function (PanelType) {\r\n    /**\r\n     * Renders the Panel with a `fluid` (full screen) width.\r\n     * Recommended for use on small screen breakpoints.\r\n     * - Small (320-479): full screen width, 16px left/right padding\r\n     * - Medium (480-639): full screen width, 16px left/right padding\r\n     * - Large (640-1023): full screen width, 32px left/right padding\r\n     * - XLarge (1024-1365): full screen width, 32px left/right padding\r\n     * - XXLarge (1366-up): full screen width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFluid\"] = 0] = \"smallFluid\";\r\n    /**\r\n     * Renders the Panel in fixed-width `small` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): 340px width, 16px left/right padding\r\n     * - Large (640-1023): 340px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 340px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 340px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFixedFar\"] = 1] = \"smallFixedFar\";\r\n    /**\r\n     * Renders the Panel in fixed-width `small` size, anchored to the near side (left in LTR mode).\r\n     * - Small (320-479): 272px width, 16px left/right padding\r\n     * - Medium (480-639): 272px width, 16px left/right padding\r\n     * - Large (640-1023): 272px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 272px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 272px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"smallFixedNear\"] = 2] = \"smallFixedNear\";\r\n    /**\r\n     * Renders the Panel in `medium` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): 592px width, 32px left/right padding\r\n     * - XLarge (1024-1365): 644px width, 32px left/right padding\r\n     * - XXLarge (1366-up): 644px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"medium\"] = 3] = \"medium\";\r\n    /**\r\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639):  adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\r\n     * - XXLarge (1366-up): 428px fixed left margin, fluid width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"large\"] = 4] = \"large\";\r\n    /**\r\n     * Renders the Panel in `large` size, anchored to the far side (right in LTR mode), with a fixed width at XX-Large breakpoint.\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): 48px fixed left margin, fluid width, 32px left/right padding\r\n     * - XXLarge (1366-up): 940px width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"largeFixed\"] = 5] = \"largeFixed\";\r\n    /**\r\n     * Renders the Panel in `extra large` size, anchored to the far side (right in LTR mode).\r\n     * - Small (320-479): adapts to `PanelType.smallFluid` at this breakpoint\r\n     * - Medium (480-639): adapts to `PanelType.smallFixedFar` at this breakpoint\r\n     * - Large (640-1023): adapts to `PanelType.medium` at this breakpoint\r\n     * - XLarge (1024-1365): adapts to `PanelType.large` at this breakpoint\r\n     * - XXLarge (1366-1919): 176px fixed left margin, fluid width, 40px left/right padding\r\n     * - XXXLarge (1920-up): 176px fixed left margin, fluid width, 40px left/right padding\r\n     */\r\n    PanelType[PanelType[\"extraLarge\"] = 6] = \"extraLarge\";\r\n    /**\r\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the far side (right in LTR mode).\r\n     * - Has a fixed width provided by the `customWidth` prop\r\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\r\n     * taking up 100% of the viewport width\r\n     */\r\n    PanelType[PanelType[\"custom\"] = 7] = \"custom\";\r\n    /**\r\n     * Renders the Panel in `custom` size using `customWidth`, anchored to the near side (left in LTR mode).\r\n     * - Has a fixed width provided by the `customWidth` prop\r\n     * - When screen width reaches the `customWidth` value it will behave like a fluid width Panel\r\n     * taking up 100% of the viewport width\r\n     */\r\n    PanelType[PanelType[\"customNear\"] = 8] = \"customNear\";\r\n})(PanelType || (PanelType = {}));\r\n//# sourceMappingURL=Panel.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, getNativeProps, divProperties, enableBodyScroll, disableBodyScroll } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar OverlayBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OverlayBase, _super);\r\n    function OverlayBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    OverlayBase.prototype.componentDidMount = function () {\r\n        disableBodyScroll();\r\n    };\r\n    OverlayBase.prototype.componentWillUnmount = function () {\r\n        enableBodyScroll();\r\n    };\r\n    OverlayBase.prototype.render = function () {\r\n        var _a = this.props, isDark = _a.isDarkThemed, className = _a.className, theme = _a.theme, styles = _a.styles;\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            isDark: isDark\r\n        });\r\n        return React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: classNames.root }));\r\n    };\r\n    return OverlayBase;\r\n}(BaseComponent));\r\nexport { OverlayBase };\r\n//# sourceMappingURL=Overlay.base.js.map","import { HighContrastSelector, getGlobalClassNames } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Overlay',\r\n    rootDark: 'ms-Overlay--dark'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme, isNone = props.isNone, isDark = props.isDark;\r\n    var palette = theme.palette;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            {\r\n                backgroundColor: palette.whiteTranslucent40,\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                position: 'absolute',\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        border: '1px solid WindowText',\r\n                        opacity: 0\r\n                    },\r\n                    _a)\r\n            },\r\n            isNone && {\r\n                visibility: 'hidden'\r\n            },\r\n            isDark && [\r\n                classNames.rootDark,\r\n                {\r\n                    backgroundColor: palette.blackTranslucent40\r\n                }\r\n            ],\r\n            className\r\n        ]\r\n    };\r\n    var _a;\r\n};\r\n//# sourceMappingURL=Overlay.styles.js.map","import { styled } from '../../Utilities';\r\nimport { OverlayBase } from './Overlay.base';\r\nimport { getStyles } from './Overlay.styles';\r\nexport var Overlay = styled(OverlayBase, getStyles, undefined, {\r\n    scope: 'Overlay'\r\n});\r\n//# sourceMappingURL=Overlay.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, KeyCodes, elementContains, getNativeProps, divProperties, getFirstTabbable, getLastTabbable, getNextElement, focusAsync } from '../../Utilities';\r\nvar FocusTrapZone = /** @class */ (function (_super) {\r\n    tslib_1.__extends(FocusTrapZone, _super);\r\n    function FocusTrapZone() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._root = React.createRef();\r\n        _this._onFocusCapture = function (ev) {\r\n            if (_this.props.onFocusCapture) {\r\n                _this.props.onFocusCapture(ev);\r\n            }\r\n            if (ev.target !== ev.currentTarget) {\r\n                // every time focus changes within the trap zone, remember the focused element so that\r\n                // it can be restored if focus leaves the pane and returns via keystroke (i.e. via a call to this.focus(true))\r\n                _this._previouslyFocusedElementInTrapZone = ev.target;\r\n            }\r\n        };\r\n        _this._onKeyboardHandler = function (ev) {\r\n            if (_this.props.onKeyDown) {\r\n                _this.props.onKeyDown(ev);\r\n            }\r\n            // If the default has been prevented, do not process keyboard events.\r\n            if (ev.isDefaultPrevented()) {\r\n                return;\r\n            }\r\n            if (ev.which !== KeyCodes.tab) {\r\n                return;\r\n            }\r\n            if (!_this._root.current) {\r\n                return;\r\n            }\r\n            var _firstTabbableChild = getFirstTabbable(_this._root.current, _this._root.current.firstChild, true);\r\n            var _lastTabbableChild = getLastTabbable(_this._root.current, _this._root.current.lastChild, true);\r\n            if (ev.shiftKey && _firstTabbableChild === ev.target) {\r\n                focusAsync(_lastTabbableChild);\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n            else if (!ev.shiftKey && _lastTabbableChild === ev.target) {\r\n                focusAsync(_firstTabbableChild);\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        };\r\n        return _this;\r\n    }\r\n    FocusTrapZone.prototype.componentDidMount = function () {\r\n        this._bringFocusIntoZone();\r\n        this._updateEventHandlers(this.props);\r\n    };\r\n    FocusTrapZone.prototype.componentWillReceiveProps = function (nextProps) {\r\n        var elementToFocusOnDismiss = nextProps.elementToFocusOnDismiss;\r\n        if (elementToFocusOnDismiss && this._previouslyFocusedElementOutsideTrapZone !== elementToFocusOnDismiss) {\r\n            this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss;\r\n        }\r\n        this._updateEventHandlers(nextProps);\r\n    };\r\n    FocusTrapZone.prototype.componentDidUpdate = function (prevProps) {\r\n        var prevForceFocusInsideTrap = prevProps.forceFocusInsideTrap !== undefined ? prevProps.forceFocusInsideTrap : true;\r\n        var newForceFocusInsideTrap = this.props.forceFocusInsideTrap !== undefined ? this.props.forceFocusInsideTrap : true;\r\n        if (!prevForceFocusInsideTrap && newForceFocusInsideTrap) {\r\n            // Transition from forceFocusInsideTrap disabled to enabled. Emulate what happens when a FocusTrapZone gets mounted\r\n            this._bringFocusIntoZone();\r\n        }\r\n        else if (prevForceFocusInsideTrap && !newForceFocusInsideTrap) {\r\n            // Transition from forceFocusInsideTrap enabled to disabled. Emulate what happens when a FocusTrapZone gets unmounted\r\n            this._returnFocusToInitiator();\r\n        }\r\n    };\r\n    FocusTrapZone.prototype.componentWillUnmount = function () {\r\n        this._events.dispose();\r\n        this._returnFocusToInitiator();\r\n    };\r\n    FocusTrapZone.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, ariaLabelledBy = _a.ariaLabelledBy;\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        return (React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: className, ref: this._root, \"aria-labelledby\": ariaLabelledBy, onKeyDown: this._onKeyboardHandler, onFocusCapture: this._onFocusCapture }), this.props.children));\r\n    };\r\n    FocusTrapZone.prototype.focus = function () {\r\n        var _a = this.props, focusPreviouslyFocusedInnerElement = _a.focusPreviouslyFocusedInnerElement, firstFocusableSelector = _a.firstFocusableSelector;\r\n        if (focusPreviouslyFocusedInnerElement &&\r\n            this._previouslyFocusedElementInTrapZone &&\r\n            elementContains(this._root.current, this._previouslyFocusedElementInTrapZone)) {\r\n            // focus on the last item that had focus in the zone before we left the zone\r\n            focusAsync(this._previouslyFocusedElementInTrapZone);\r\n            return;\r\n        }\r\n        var focusSelector = typeof firstFocusableSelector === 'string' ? firstFocusableSelector : firstFocusableSelector && firstFocusableSelector();\r\n        var _firstFocusableChild;\r\n        if (this._root.current) {\r\n            if (focusSelector) {\r\n                _firstFocusableChild = this._root.current.querySelector('.' + focusSelector);\r\n            }\r\n            else {\r\n                _firstFocusableChild = getNextElement(this._root.current, this._root.current.firstChild, true, false, false, true);\r\n            }\r\n        }\r\n        if (_firstFocusableChild) {\r\n            focusAsync(_firstFocusableChild);\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._bringFocusIntoZone = function () {\r\n        var _a = this.props, elementToFocusOnDismiss = _a.elementToFocusOnDismiss, _b = _a.disableFirstFocus, disableFirstFocus = _b === void 0 ? false : _b;\r\n        FocusTrapZone._focusStack.push(this);\r\n        this._previouslyFocusedElementOutsideTrapZone = elementToFocusOnDismiss\r\n            ? elementToFocusOnDismiss\r\n            : document.activeElement;\r\n        if (!elementContains(this._root.current, this._previouslyFocusedElementOutsideTrapZone) && !disableFirstFocus) {\r\n            this.focus();\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._returnFocusToInitiator = function () {\r\n        var _this = this;\r\n        var ignoreExternalFocusing = this.props.ignoreExternalFocusing;\r\n        FocusTrapZone._focusStack = FocusTrapZone._focusStack.filter(function (value) {\r\n            return _this !== value;\r\n        });\r\n        var activeElement = document.activeElement;\r\n        if (!ignoreExternalFocusing &&\r\n            this._previouslyFocusedElementOutsideTrapZone &&\r\n            typeof this._previouslyFocusedElementOutsideTrapZone.focus === 'function' &&\r\n            (elementContains(this._root.current, activeElement) || activeElement === document.body)) {\r\n            focusAsync(this._previouslyFocusedElementOutsideTrapZone);\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._updateEventHandlers = function (newProps) {\r\n        var _a = newProps.isClickableOutsideFocusTrap, isClickableOutsideFocusTrap = _a === void 0 ? false : _a, _b = newProps.forceFocusInsideTrap, forceFocusInsideTrap = _b === void 0 ? true : _b;\r\n        if (forceFocusInsideTrap && !this._hasFocusHandler) {\r\n            this._events.on(window, 'focus', this._forceFocusInTrap, true);\r\n        }\r\n        else if (!forceFocusInsideTrap && this._hasFocusHandler) {\r\n            this._events.off(window, 'focus', this._forceFocusInTrap, true);\r\n        }\r\n        this._hasFocusHandler = forceFocusInsideTrap;\r\n        if (!isClickableOutsideFocusTrap && !this._hasClickHandler) {\r\n            this._events.on(window, 'click', this._forceClickInTrap, true);\r\n        }\r\n        else if (isClickableOutsideFocusTrap && this._hasClickHandler) {\r\n            this._events.off(window, 'click', this._forceClickInTrap, true);\r\n        }\r\n        this._hasClickHandler = !isClickableOutsideFocusTrap;\r\n    };\r\n    FocusTrapZone.prototype._forceFocusInTrap = function (ev) {\r\n        if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n            var focusedElement = ev.relatedTarget || document.activeElement;\r\n            if (!elementContains(this._root.current, focusedElement)) {\r\n                this.focus();\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n    FocusTrapZone.prototype._forceClickInTrap = function (ev) {\r\n        if (FocusTrapZone._focusStack.length && this === FocusTrapZone._focusStack[FocusTrapZone._focusStack.length - 1]) {\r\n            var clickedElement = ev.target;\r\n            if (clickedElement && !elementContains(this._root.current, clickedElement)) {\r\n                this.focus();\r\n                ev.preventDefault();\r\n                ev.stopPropagation();\r\n            }\r\n        }\r\n    };\r\n    FocusTrapZone._focusStack = [];\r\n    return FocusTrapZone;\r\n}(BaseComponent));\r\nexport { FocusTrapZone };\r\n//# sourceMappingURL=FocusTrapZone.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { IconButton } from '../../Button';\r\nimport { Layer } from '../../Layer';\r\nimport { Overlay } from '../../Overlay';\r\nimport { Popup } from '../../Popup';\r\nimport { getTheme, IconFontSizes } from '../../Styling';\r\nimport { allowScrollOnElement, BaseComponent, classNamesFunction, divProperties, elementContains, getId, getNativeProps, getRTL } from '../../Utilities';\r\nimport { FocusTrapZone } from '../FocusTrapZone/index';\r\nimport { PanelType } from './Panel.types';\r\nvar getClassNames = classNamesFunction();\r\nvar PanelBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PanelBase, _super);\r\n    function PanelBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._panel = React.createRef();\r\n        _this.dismiss = function (ev) {\r\n            if (_this.state.isOpen) {\r\n                if (_this.props.onDismiss) {\r\n                    _this.props.onDismiss(ev);\r\n                }\r\n                if (!ev || (ev && !ev.defaultPrevented)) {\r\n                    _this.setState({\r\n                        isOpen: false,\r\n                        isAnimating: true\r\n                    }, function () {\r\n                        _this._async.setTimeout(_this._onTransitionComplete, 200);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        // Allow the user to scroll within the panel but not on the body\r\n        _this._allowScrollOnPanel = function (elt) {\r\n            if (elt) {\r\n                allowScrollOnElement(elt, _this._events);\r\n            }\r\n            else {\r\n                _this._events.off(_this._scrollableContent);\r\n            }\r\n            _this._scrollableContent = elt;\r\n        };\r\n        _this._onRenderNavigation = function (props) {\r\n            var _a = _this.props.onRenderNavigationContent, onRenderNavigationContent = _a === void 0 ? _this._onRenderNavigationContent : _a;\r\n            return React.createElement(\"div\", { className: _this._classNames.navigation }, onRenderNavigationContent(props, _this._onRenderNavigationContent));\r\n        };\r\n        _this._onRenderNavigationContent = function (props) {\r\n            var closeButtonAriaLabel = props.closeButtonAriaLabel, hasCloseButton = props.hasCloseButton;\r\n            var theme = getTheme();\r\n            if (hasCloseButton) {\r\n                // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                // const iconButtonStyles = this._classNames.subComponentStyles\r\n                // ? (this._classNames.subComponentStyles.iconButton as IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles>)\r\n                // : undefined;\r\n                return (React.createElement(IconButton\r\n                // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                // className={iconButtonStyles}\r\n                , { \r\n                    // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n                    // className={iconButtonStyles}\r\n                    styles: {\r\n                        root: {\r\n                            height: 'auto',\r\n                            width: '44px',\r\n                            color: theme.palette.neutralSecondary,\r\n                            fontSize: IconFontSizes.large\r\n                        },\r\n                        rootHovered: {\r\n                            color: theme.palette.neutralPrimary\r\n                        }\r\n                    }, className: _this._classNames.closeButton, onClick: _this._onPanelClick, ariaLabel: closeButtonAriaLabel, \"data-is-visible\": true, iconProps: { iconName: 'Cancel' } }));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderHeader = function (props, defaultRender, headerTextId) {\r\n            var headerText = props.headerText;\r\n            if (headerText) {\r\n                return (React.createElement(\"div\", { className: _this._classNames.header },\r\n                    React.createElement(\"p\", { className: _this._classNames.headerText, id: headerTextId, role: \"heading\", \"aria-level\": 2 }, headerText)));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderBody = function (props) {\r\n            return React.createElement(\"div\", { className: _this._classNames.content }, props.children);\r\n        };\r\n        _this._onRenderFooter = function (props) {\r\n            var _a = _this.props.onRenderFooterContent, onRenderFooterContent = _a === void 0 ? null : _a;\r\n            if (onRenderFooterContent) {\r\n                return (React.createElement(\"div\", { className: _this._classNames.footer },\r\n                    React.createElement(\"div\", { className: _this._classNames.footerInner }, onRenderFooterContent())));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onPanelClick = function (ev) {\r\n            _this.dismiss(ev);\r\n        };\r\n        _this._onTransitionComplete = function () {\r\n            _this._updateFooterPosition();\r\n            _this.setState({\r\n                isAnimating: false\r\n            });\r\n            if (!_this.state.isOpen && _this.props.onDismissed) {\r\n                _this.props.onDismissed();\r\n            }\r\n        };\r\n        _this._warnDeprecations({\r\n            ignoreExternalFocusing: 'focusTrapZoneProps',\r\n            forceFocusInsideTrap: 'focusTrapZoneProps',\r\n            firstFocusableSelector: 'focusTrapZoneProps'\r\n        });\r\n        _this.state = {\r\n            isFooterSticky: false,\r\n            isOpen: false,\r\n            isAnimating: false,\r\n            id: getId('Panel')\r\n        };\r\n        return _this;\r\n    }\r\n    PanelBase.prototype.componentDidMount = function () {\r\n        this._events.on(window, 'resize', this._updateFooterPosition);\r\n        if (this._shouldListenForOuterClick(this.props)) {\r\n            this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n        if (this.props.isOpen) {\r\n            this.open();\r\n        }\r\n    };\r\n    PanelBase.prototype.componentDidUpdate = function (previousProps) {\r\n        var shouldListenOnOuterClick = this._shouldListenForOuterClick(this.props);\r\n        var previousShouldListenOnOuterClick = this._shouldListenForOuterClick(previousProps);\r\n        if (shouldListenOnOuterClick && !previousShouldListenOnOuterClick) {\r\n            this._events.on(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n        else if (!shouldListenOnOuterClick && previousShouldListenOnOuterClick) {\r\n            this._events.off(document.body, 'mousedown', this._dismissOnOuterClick, true);\r\n        }\r\n    };\r\n    PanelBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.isOpen !== this.state.isOpen) {\r\n            if (newProps.isOpen) {\r\n                this.open();\r\n            }\r\n            else {\r\n                this.dismiss();\r\n            }\r\n        }\r\n    };\r\n    PanelBase.prototype.render = function () {\r\n        var _a = this.props, _b = _a.className, className = _b === void 0 ? '' : _b, elementToFocusOnDismiss = _a.elementToFocusOnDismiss, firstFocusableSelector = _a.firstFocusableSelector, focusTrapZoneProps = _a.focusTrapZoneProps, forceFocusInsideTrap = _a.forceFocusInsideTrap, hasCloseButton = _a.hasCloseButton, headerText = _a.headerText, _c = _a.headerClassName, headerClassName = _c === void 0 ? '' : _c, ignoreExternalFocusing = _a.ignoreExternalFocusing, isBlocking = _a.isBlocking, isFooterAtBottom = _a.isFooterAtBottom, isLightDismiss = _a.isLightDismiss, isHiddenOnDismiss = _a.isHiddenOnDismiss, layerProps = _a.layerProps, type = _a.type, styles = _a.styles, theme = _a.theme, customWidth = _a.customWidth, _d = _a.onLightDismissClick, onLightDismissClick = _d === void 0 ? this._onPanelClick : _d, _e = _a.onRenderNavigation, onRenderNavigation = _e === void 0 ? this._onRenderNavigation : _e, _f = _a.onRenderHeader, onRenderHeader = _f === void 0 ? this._onRenderHeader : _f, _g = _a.onRenderBody, onRenderBody = _g === void 0 ? this._onRenderBody : _g, _h = _a.onRenderFooter, onRenderFooter = _h === void 0 ? this._onRenderFooter : _h;\r\n        var _j = this.state, isFooterSticky = _j.isFooterSticky, isOpen = _j.isOpen, isAnimating = _j.isAnimating, id = _j.id;\r\n        var isLeft = type === PanelType.smallFixedNear || type === PanelType.customNear ? true : false;\r\n        var isRTL = getRTL();\r\n        var isOnRightSide = isRTL ? isLeft : !isLeft;\r\n        var headerTextId = headerText && id + '-headerText';\r\n        var customWidthStyles = type === PanelType.custom || type === PanelType.customNear ? { width: customWidth } : {};\r\n        var nativeProps = getNativeProps(this.props, divProperties);\r\n        if (!isOpen && !isAnimating && !isHiddenOnDismiss) {\r\n            return null;\r\n        }\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            focusTrapZoneClassName: focusTrapZoneProps ? focusTrapZoneProps.className : undefined,\r\n            hasCloseButton: hasCloseButton,\r\n            headerClassName: headerClassName,\r\n            isAnimating: isAnimating,\r\n            isFooterAtBottom: isFooterAtBottom,\r\n            isFooterSticky: isFooterSticky,\r\n            isOnRightSide: isOnRightSide,\r\n            isOpen: isOpen,\r\n            isHiddenOnDismiss: isHiddenOnDismiss,\r\n            type: type\r\n        });\r\n        var _classNames = this._classNames;\r\n        var overlay;\r\n        if (isBlocking && isOpen) {\r\n            overlay = React.createElement(Overlay, { className: _classNames.overlay, isDarkThemed: false, onClick: isLightDismiss ? onLightDismissClick : undefined });\r\n        }\r\n        var header = onRenderHeader(this.props, this._onRenderHeader, headerTextId);\r\n        return (React.createElement(Layer, tslib_1.__assign({}, layerProps),\r\n            React.createElement(Popup, { role: \"dialog\", \"aria-modal\": \"true\", ariaLabelledBy: header ? headerTextId : undefined, onDismiss: this.dismiss, className: _classNames.hiddenPanel },\r\n                React.createElement(\"div\", tslib_1.__assign({ \"aria-hidden\": !isOpen && isAnimating }, nativeProps, { ref: this._panel, className: _classNames.root }),\r\n                    overlay,\r\n                    React.createElement(FocusTrapZone, tslib_1.__assign({ ignoreExternalFocusing: ignoreExternalFocusing, forceFocusInsideTrap: isHiddenOnDismiss && !isOpen ? false : forceFocusInsideTrap, firstFocusableSelector: firstFocusableSelector, isClickableOutsideFocusTrap: true }, focusTrapZoneProps, { className: _classNames.main, style: customWidthStyles, elementToFocusOnDismiss: elementToFocusOnDismiss }),\r\n                        React.createElement(\"div\", { className: _classNames.commands, \"data-is-visible\": true }, onRenderNavigation(this.props, this._onRenderNavigation)),\r\n                        React.createElement(\"div\", { className: _classNames.contentInner },\r\n                            header,\r\n                            React.createElement(\"div\", { ref: this._allowScrollOnPanel, className: _classNames.scrollableContent, \"data-is-scrollable\": true }, onRenderBody(this.props, this._onRenderBody)),\r\n                            onRenderFooter(this.props, this._onRenderFooter)))))));\r\n    };\r\n    PanelBase.prototype.open = function () {\r\n        var _this = this;\r\n        if (!this.state.isOpen) {\r\n            this.setState({\r\n                isOpen: true,\r\n                isAnimating: true\r\n            }, function () {\r\n                _this._async.setTimeout(_this._onTransitionComplete, 200);\r\n            });\r\n        }\r\n    };\r\n    PanelBase.prototype._shouldListenForOuterClick = function (props) {\r\n        return !!props.isBlocking && !!props.isOpen;\r\n    };\r\n    PanelBase.prototype._updateFooterPosition = function () {\r\n        var scrollableContent = this._scrollableContent;\r\n        if (scrollableContent) {\r\n            var height = scrollableContent.clientHeight;\r\n            var innerHeight_1 = scrollableContent.scrollHeight;\r\n            this.setState({\r\n                isFooterSticky: height < innerHeight_1 ? true : false\r\n            });\r\n        }\r\n    };\r\n    PanelBase.prototype._dismissOnOuterClick = function (ev) {\r\n        var panel = this._panel.current;\r\n        if (this.state.isOpen && panel) {\r\n            if (!elementContains(panel, ev.target)) {\r\n                if (this.props.onOuterClick) {\r\n                    this.props.onOuterClick();\r\n                    ev.preventDefault();\r\n                }\r\n                else {\r\n                    this.dismiss();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    PanelBase.defaultProps = {\r\n        isHiddenOnDismiss: false,\r\n        isOpen: false,\r\n        isBlocking: true,\r\n        hasCloseButton: true,\r\n        type: PanelType.smallFixedFar\r\n    };\r\n    return PanelBase;\r\n}(BaseComponent));\r\nexport { PanelBase };\r\n//# sourceMappingURL=Panel.base.js.map","import * as tslib_1 from \"tslib\";\r\nimport { PanelType } from './Panel.types';\r\nimport { AnimationClassNames, AnimationVariables, DefaultFontStyles, getGlobalClassNames, ScreenWidthMinMedium, ScreenWidthMinLarge, ScreenWidthMinXLarge, ScreenWidthMinXXLarge, ScreenWidthMinUhfMobile } from '../../Styling';\r\n// TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n// import { IStyleFunctionOrObject } from '../../Utilities';\r\n// import { IButtonStyles, IButtonStyleProps } from '../../Button';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Panel',\r\n    main: 'ms-Panel-main',\r\n    commands: 'ms-Panel-commands',\r\n    contentInner: 'ms-Panel-contentInner',\r\n    scrollableContent: 'ms-Panel-scrollableContent',\r\n    navigation: 'ms-Panel-navigation',\r\n    closeButton: 'ms-Panel-closeButton ms-PanelAction-close',\r\n    header: 'ms-Panel-header',\r\n    headerText: 'ms-Panel-headerText',\r\n    content: 'ms-Panel-content',\r\n    footer: 'ms-Panel-footer',\r\n    footerInner: 'ms-Panel-footerInner',\r\n    isOpen: 'is-open',\r\n    hasCloseButton: 'ms-Panel--hasCloseButton',\r\n    smallFluid: 'ms-Panel--smFluid',\r\n    smallFixedNear: 'ms-Panel--smLeft',\r\n    smallFixedFar: 'ms-Panel--sm',\r\n    medium: 'ms-Panel--md',\r\n    large: 'ms-Panel--lg',\r\n    largeFixed: 'ms-Panel--fixed',\r\n    extraLarge: 'ms-Panel--xl',\r\n    custom: 'ms-Panel--custom',\r\n    customNear: 'ms-Panel--customLeft'\r\n};\r\nvar panelWidth = {\r\n    full: '100%',\r\n    auto: 'auto',\r\n    xs: 272,\r\n    sm: 340,\r\n    md1: 592,\r\n    md2: 644,\r\n    lg: 940\r\n};\r\nvar panelMargin = {\r\n    auto: 'auto',\r\n    none: 0,\r\n    md: 48,\r\n    lg: 428,\r\n    xl: 176\r\n};\r\n// Following consts are used below in `getPanelBreakpoints()` function to provide\r\n// necessary fallbacks for different types of Panel in different breakpoints.\r\nvar smallPanelSelectors = (_a = {},\r\n    _a[\"@media (min-width: \" + ScreenWidthMinMedium + \"px)\"] = {\r\n        width: panelWidth.sm\r\n    },\r\n    _a);\r\nvar mediumPanelSelectors = (_b = {},\r\n    _b[\"@media (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\r\n        width: panelWidth.md1\r\n    },\r\n    _b[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\r\n        width: panelWidth.md2\r\n    },\r\n    _b);\r\nvar largePanelSelectors = (_c = {},\r\n    _c[\"@media (min-width: \" + ScreenWidthMinUhfMobile + \"px)\"] = {\r\n        left: panelMargin.md,\r\n        width: panelWidth.auto\r\n    },\r\n    _c[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.lg\r\n    },\r\n    _c);\r\nvar largeFixedPanelSelectors = (_d = {},\r\n    _d[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.auto,\r\n        width: panelWidth.lg\r\n    },\r\n    _d);\r\nvar extraLargePanelSelectors = (_e = {},\r\n    _e[\"@media (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n        left: panelMargin.xl\r\n    },\r\n    _e);\r\n// Make sure Panels have fallbacks to different breakpoints by reusing same selectors.\r\n// This is done in the effort to follow design redlines.\r\nvar getPanelBreakpoints = function (type) {\r\n    var selectors;\r\n    // Panel types `smallFluid`, `smallFixedNear`, `custom` and `customNear`\r\n    // are not checked in here because they render the same in all the breakpoints\r\n    // and have the checks done separately in the `getStyles` function below.\r\n    switch (type) {\r\n        case PanelType.smallFixedFar:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors);\r\n            break;\r\n        case PanelType.medium:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors);\r\n            break;\r\n        case PanelType.large:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors);\r\n            break;\r\n        case PanelType.largeFixed:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors, largeFixedPanelSelectors);\r\n            break;\r\n        case PanelType.extraLarge:\r\n            selectors = tslib_1.__assign({}, smallPanelSelectors, mediumPanelSelectors, largePanelSelectors, extraLargePanelSelectors);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n    return selectors;\r\n};\r\nvar commandBarHeight = '44px';\r\nvar sharedPaddingStyles = {\r\n    paddingLeft: '16px',\r\n    paddingRight: '16px',\r\n    selectors: (_f = {},\r\n        _f[\"@media screen and (min-width: \" + ScreenWidthMinLarge + \"px)\"] = {\r\n            paddingLeft: '32px',\r\n            paddingRight: '32px'\r\n        },\r\n        _f[\"@media screen and (min-width: \" + ScreenWidthMinXXLarge + \"px)\"] = {\r\n            paddingLeft: '40px',\r\n            paddingRight: '40px'\r\n        },\r\n        _f)\r\n};\r\n// // TODO -Issue #5689: Comment in once Button is converted to mergeStyles\r\n// function getIconButtonStyles(props: IPanelStyleProps): IStyleFunctionOrObject<IButtonStyleProps, IButtonStyles> {\r\n//   const { theme } = props;\r\n//   return () => ({\r\n//     root: {\r\n//       height: 'auto',\r\n//       width: '44px',\r\n//       color: theme.palette.neutralSecondary,\r\n//       fontSize: IconFontSizes.large\r\n//     },\r\n//     rootHovered: {\r\n//       color: theme.palette.neutralPrimary\r\n//     }\r\n//   });\r\n// }\r\nexport var getStyles = function (props) {\r\n    var className = props.className, focusTrapZoneClassName = props.focusTrapZoneClassName, hasCloseButton = props.hasCloseButton, headerClassName = props.headerClassName, isAnimating = props.isAnimating, isFooterAtBottom = props.isFooterAtBottom, isFooterSticky = props.isFooterSticky, isOnRightSide = props.isOnRightSide, isOpen = props.isOpen, isHiddenOnDismiss = props.isHiddenOnDismiss, theme = props.theme, _a = props.type, type = _a === void 0 ? PanelType.smallFixedFar : _a;\r\n    var palette = theme.palette;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var isCustomPanel = type === PanelType.custom || type === PanelType.customNear;\r\n    var windowHeight = typeof window !== 'undefined' ? window.innerHeight : '100%';\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            isOpen && classNames.isOpen,\r\n            hasCloseButton && classNames.hasCloseButton,\r\n            {\r\n                pointerEvents: 'none',\r\n                position: 'absolute',\r\n                top: 0,\r\n                left: 0,\r\n                right: 0,\r\n                bottom: 0\r\n            },\r\n            isCustomPanel && isOnRightSide && classNames.custom,\r\n            isCustomPanel && !isOnRightSide && classNames.customNear,\r\n            className\r\n        ],\r\n        overlay: [\r\n            {\r\n                pointerEvents: 'auto',\r\n                cursor: 'pointer'\r\n            },\r\n            isOpen && isAnimating && AnimationClassNames.fadeIn100,\r\n            !isOpen && isAnimating && AnimationClassNames.fadeOut100\r\n        ],\r\n        hiddenPanel: [\r\n            !isOpen &&\r\n                !isAnimating &&\r\n                isHiddenOnDismiss && {\r\n                visibility: 'hidden'\r\n            }\r\n        ],\r\n        main: [\r\n            classNames.main,\r\n            {\r\n                backgroundColor: palette.white,\r\n                boxShadow: '0px 0px 30px 0px rgba(0,0,0,0.2)',\r\n                pointerEvents: 'auto',\r\n                position: 'absolute',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                overflowX: 'hidden',\r\n                overflowY: 'auto',\r\n                WebkitOverflowScrolling: 'touch',\r\n                maxHeight: '100%',\r\n                bottom: 0,\r\n                top: 0,\r\n                // (left, right, width) - Properties to be overridden depending on the type of the Panel and the screen breakpoint.\r\n                left: panelMargin.auto,\r\n                right: panelMargin.none,\r\n                width: panelWidth.full,\r\n                selectors: tslib_1.__assign((_b = {}, _b['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                    maxHeight: windowHeight\r\n                }, _b), getPanelBreakpoints(type))\r\n            },\r\n            type === PanelType.smallFluid && {\r\n                left: panelMargin.none\r\n            },\r\n            type === PanelType.smallFixedNear && {\r\n                left: panelMargin.none,\r\n                right: panelMargin.auto,\r\n                width: panelWidth.xs\r\n            },\r\n            type === PanelType.customNear && {\r\n                right: 'auto',\r\n                left: 0\r\n            },\r\n            isCustomPanel && {\r\n                maxWidth: '100vw'\r\n            },\r\n            isFooterAtBottom && {\r\n                height: '100%',\r\n                selectors: (_c = {},\r\n                    _c['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _c)\r\n            },\r\n            isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideRightIn40,\r\n            isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideLeftIn40,\r\n            !isOpen && isAnimating && !isOnRightSide && AnimationClassNames.slideLeftOut40,\r\n            !isOpen && isAnimating && isOnRightSide && AnimationClassNames.slideRightOut40,\r\n            focusTrapZoneClassName\r\n        ],\r\n        commands: [classNames.commands],\r\n        navigation: [\r\n            classNames.navigation,\r\n            {\r\n                padding: '0 5px',\r\n                height: commandBarHeight,\r\n                display: 'flex',\r\n                justifyContent: 'flex-end'\r\n            }\r\n        ],\r\n        closeButton: [classNames.closeButton],\r\n        contentInner: [\r\n            classNames.contentInner,\r\n            {\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                flexGrow: 1,\r\n                maxHeight: '100%',\r\n                overflowY: 'hidden',\r\n                selectors: (_d = {},\r\n                    _d['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        maxHeight: windowHeight\r\n                    },\r\n                    _d)\r\n            },\r\n            isFooterAtBottom && {\r\n                height: '100%',\r\n                selectors: (_e = {},\r\n                    _e['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _e)\r\n            }\r\n        ],\r\n        header: [\r\n            classNames.header,\r\n            sharedPaddingStyles,\r\n            {\r\n                margin: '14px 0',\r\n                // Ensure that title doesn't shrink if screen is too small\r\n                flexGrow: 0,\r\n                selectors: (_f = {},\r\n                    _f[\"@media (min-width: \" + ScreenWidthMinXLarge + \"px)\"] = {\r\n                        marginTop: '30px'\r\n                    },\r\n                    _f)\r\n            }\r\n        ],\r\n        headerText: [\r\n            classNames.headerText,\r\n            DefaultFontStyles.xLarge,\r\n            {\r\n                color: palette.neutralPrimary,\r\n                lineHeight: '32px',\r\n                margin: 0\r\n            },\r\n            headerClassName\r\n        ],\r\n        scrollableContent: [\r\n            classNames.scrollableContent,\r\n            {\r\n                overflowY: 'auto',\r\n                height: '100%',\r\n                selectors: (_g = {},\r\n                    _g['@supports (-webkit-overflow-scrolling: touch)'] = {\r\n                        height: windowHeight\r\n                    },\r\n                    _g)\r\n            }\r\n        ],\r\n        content: [\r\n            classNames.content,\r\n            sharedPaddingStyles,\r\n            {\r\n                marginBottom: 0,\r\n                paddingBottom: 20\r\n            }\r\n        ],\r\n        footer: [\r\n            classNames.footer,\r\n            {\r\n                // Ensure that footer doesn't shrink if screen is too small\r\n                flexGrow: 0,\r\n                borderTop: '1px solid transparent',\r\n                transition: \"opacity \" + AnimationVariables.durationValue3 + \" \" + AnimationVariables.easeFunction2\r\n            },\r\n            isFooterSticky && {\r\n                background: palette.white,\r\n                borderTopColor: palette.neutralLight\r\n            }\r\n        ],\r\n        footerInner: [\r\n            classNames.footerInner,\r\n            sharedPaddingStyles,\r\n            {\r\n                paddingBottom: '20px',\r\n                paddingTop: '20px'\r\n            }\r\n        ]\r\n        // subComponentStyles: {\r\n        //   iconButton: getIconButtonStyles(props)\r\n        // }\r\n    };\r\n    var _b, _c, _d, _e, _f, _g;\r\n};\r\nvar _a, _b, _c, _d, _e, _f;\r\n//# sourceMappingURL=Panel.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport { FontSizes, FontWeights, HighContrastSelector, getGlobalClassNames, normalize } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-Dropdown-container',\r\n    label: 'ms-Dropdown-label',\r\n    dropdown: 'ms-Dropdown',\r\n    title: 'ms-Dropdown-title',\r\n    caretDownWrapper: 'ms-Dropdown-caretDownWrapper',\r\n    caretDown: 'ms-Dropdown-caretDown',\r\n    callout: 'ms-Dropdown-callout',\r\n    panel: 'ms-Dropdown-panel',\r\n    dropdownItems: 'ms-Dropdown-items',\r\n    dropdownItem: 'ms-Dropdown-item',\r\n    dropdownDivider: 'ms-Dropdown-divider',\r\n    dropdownOptionText: 'ms-Dropdown-optionText',\r\n    dropdownItemHeader: 'ms-Dropdown-header',\r\n    titleIsPlaceHolder: 'ms-Dropdown-titleIsPlaceHolder',\r\n    titleHasError: 'ms-Dropdown-title--hasError'\r\n};\r\nvar DROPDOWN_HEIGHT = 32;\r\nvar DROPDOWN_ITEM_HEIGHT = 32;\r\nvar highContrastAdjustMixin = {\r\n    // highContrastAdjust mixin\r\n    '@media screen and (-ms-high-contrast: active), screen and (-ms-high-contrast: black-on-white)': {\r\n        MsHighContrastAdjust: 'none'\r\n    }\r\n};\r\nvar highContrastItemAndTitleStateMixin = {\r\n    selectors: tslib_1.__assign((_a = {}, _a[HighContrastSelector] = {\r\n        backgroundColor: 'Highlight',\r\n        borderColor: 'Highlight',\r\n        color: 'HighlightText',\r\n        selectors: {\r\n            ':hover': {\r\n                color: 'HighlightText' // overrides the hover styling for buttons that are also selected\r\n            }\r\n        }\r\n    }, _a), highContrastAdjustMixin)\r\n};\r\nvar highContrastBorderState = {\r\n    selectors: (_b = {},\r\n        _b[HighContrastSelector] = {\r\n            borderColor: 'Highlight'\r\n        },\r\n        _b)\r\n};\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, hasError = props.hasError, className = props.className, isOpen = props.isOpen, disabled = props.disabled, required = props.required, isRenderingPlaceholder = props.isRenderingPlaceholder, panelClassName = props.panelClassName, calloutClassName = props.calloutClassName;\r\n    if (!theme) {\r\n        throw new Error('theme is undefined or null in base Dropdown getStyles function.');\r\n    }\r\n    var globalClassnames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var palette = theme.palette, semanticColors = theme.semanticColors;\r\n    var rootHoverFocusActiveSelectorNeutralDarkMixin = {\r\n        color: palette.neutralDark\r\n    };\r\n    var rootHoverFocusActiveSelectorBodySubtextMixin = {\r\n        color: semanticColors.bodySubtext\r\n    };\r\n    var borderColorError = {\r\n        borderColor: semanticColors.errorText\r\n    };\r\n    var dropdownItemStyle = [\r\n        globalClassnames.dropdownItem,\r\n        {\r\n            backgroundColor: 'transparent',\r\n            boxSizing: 'border-box',\r\n            cursor: 'pointer',\r\n            display: 'block',\r\n            padding: '4px 16px',\r\n            width: '100%',\r\n            minHeight: DROPDOWN_ITEM_HEIGHT,\r\n            lineHeight: 20,\r\n            height: 'auto',\r\n            position: 'relative',\r\n            border: '1px solid transparent',\r\n            wordWrap: 'break-word',\r\n            overflowWrap: 'break-word',\r\n            textAlign: 'left'\r\n        }\r\n    ];\r\n    var dropdownItemSelected = dropdownItemStyle.concat([\r\n        {\r\n            backgroundColor: palette.neutralQuaternaryAlt,\r\n            color: palette.black\r\n        },\r\n        highContrastItemAndTitleStateMixin\r\n    ]);\r\n    var dropdownItemDisabled = dropdownItemStyle.concat([\r\n        {\r\n            color: semanticColors.disabledText,\r\n            cursor: 'default'\r\n        }\r\n    ]);\r\n    return {\r\n        root: globalClassnames.root,\r\n        label: globalClassnames.label,\r\n        dropdown: [\r\n            globalClassnames.dropdown,\r\n            normalize,\r\n            tslib_1.__assign({}, theme.fonts.medium, { color: palette.neutralPrimary, position: 'relative', outline: 0, userSelect: 'none', selectors: (_a = {},\r\n                    _a['&:hover .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.neutralDark },\r\n                        highContrastBorderState\r\n                    ],\r\n                    _a['&:focus .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.themePrimary },\r\n                        highContrastItemAndTitleStateMixin\r\n                    ],\r\n                    _a['&:active .' + globalClassnames.title] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { borderColor: palette.themeDark },\r\n                        highContrastBorderState\r\n                    ],\r\n                    _a['&:hover .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                    _a['&:focus .' + globalClassnames.caretDown] = [\r\n                        !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                        { selectors: tslib_1.__assign((_b = {}, _b[HighContrastSelector] = { color: 'HighlightText' }, _b), highContrastAdjustMixin) }\r\n                    ],\r\n                    _a['&:active .' + globalClassnames.caretDown] = !disabled && rootHoverFocusActiveSelectorNeutralDarkMixin,\r\n                    _a['&:hover .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:focus .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:active .' + globalClassnames.titleIsPlaceHolder] = rootHoverFocusActiveSelectorBodySubtextMixin,\r\n                    _a['&:hover .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a['&:active .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a['&:focus .' + globalClassnames.titleHasError] = borderColorError,\r\n                    _a) }),\r\n            className,\r\n            isOpen && 'is-open',\r\n            disabled && 'is-disabled',\r\n            required && 'is-required'\r\n        ],\r\n        title: [\r\n            globalClassnames.title,\r\n            normalize,\r\n            {\r\n                backgroundColor: semanticColors.inputBackground,\r\n                borderWidth: 1,\r\n                borderStyle: 'solid',\r\n                borderColor: semanticColors.inputBorder,\r\n                cursor: 'pointer',\r\n                display: 'block',\r\n                height: DROPDOWN_HEIGHT,\r\n                lineHeight: DROPDOWN_HEIGHT - 2,\r\n                padding: \"0 \" + DROPDOWN_HEIGHT + \"px 0 12px\",\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis'\r\n            },\r\n            isRenderingPlaceholder && [globalClassnames.titleIsPlaceHolder, { color: semanticColors.inputPlaceholderText }],\r\n            hasError && [globalClassnames.titleHasError, borderColorError],\r\n            disabled && {\r\n                backgroundColor: semanticColors.disabledBackground,\r\n                border: 'none',\r\n                color: semanticColors.disabledText,\r\n                cursor: 'default',\r\n                selectors: (_c = {}, _c[HighContrastSelector] = { border: '1px solid GrayText', color: 'GrayText' }, _c)\r\n            }\r\n        ],\r\n        caretDownWrapper: [\r\n            globalClassnames.caretDownWrapper,\r\n            {\r\n                position: 'absolute',\r\n                top: 1,\r\n                right: 12,\r\n                height: DROPDOWN_HEIGHT,\r\n                lineHeight: DROPDOWN_HEIGHT - 2 // height minus the border\r\n            },\r\n            !disabled && {\r\n                cursor: 'pointer'\r\n            }\r\n        ],\r\n        caretDown: [\r\n            globalClassnames.caretDown,\r\n            { color: palette.neutralSecondary, fontSize: FontSizes.small, pointerEvents: 'none' },\r\n            disabled && { color: semanticColors.disabledText, selectors: (_d = {}, _d[HighContrastSelector] = { color: 'GrayText' }, _d) }\r\n        ],\r\n        errorMessage: tslib_1.__assign({ color: semanticColors.errorText }, theme.fonts.small, { paddingTop: 5 }),\r\n        callout: [\r\n            globalClassnames.callout,\r\n            {\r\n                boxShadow: '0 0 2px 0 rgba(0,0,0,0.2)',\r\n                border: \"1px solid \" + palette.neutralLight\r\n            },\r\n            calloutClassName\r\n        ],\r\n        dropdownItemsWrapper: { selectors: { '&:focus': { outline: 0 } } },\r\n        dropdownItems: [globalClassnames.dropdownItems, { display: 'block' }],\r\n        dropdownItem: dropdownItemStyle.concat([\r\n            {\r\n                selectors: (_e = {},\r\n                    _e[HighContrastSelector] = {\r\n                        borderColor: 'Window'\r\n                    },\r\n                    _e['&:hover'] = {\r\n                        color: 'inherit'\r\n                    },\r\n                    _e['&:focus'] = {\r\n                        backgroundColor: semanticColors.listItemBackgroundHovered\r\n                    },\r\n                    _e['&:active'] = {\r\n                        backgroundColor: semanticColors.listHeaderBackgroundHovered,\r\n                        color: palette.black\r\n                    },\r\n                    _e)\r\n            }\r\n        ]),\r\n        dropdownItemSelected: dropdownItemSelected,\r\n        dropdownItemDisabled: dropdownItemDisabled,\r\n        dropdownItemSelectedAndDisabled: [dropdownItemSelected, dropdownItemDisabled, { backgroundColor: 'transparent' }],\r\n        dropdownDivider: [globalClassnames.dropdownDivider, { height: 1, backgroundColor: semanticColors.bodyDivider }],\r\n        dropdownOptionText: [\r\n            globalClassnames.dropdownOptionText,\r\n            {\r\n                overflow: 'hidden',\r\n                whiteSpace: 'nowrap',\r\n                textOverflow: 'ellipsis',\r\n                minWidth: 0,\r\n                maxWidth: '100%',\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word',\r\n                margin: '1px'\r\n            }\r\n        ],\r\n        dropdownItemHeader: [\r\n            globalClassnames.dropdownItemHeader,\r\n            tslib_1.__assign({}, theme.fonts.medium, { fontWeight: FontWeights.semibold, color: semanticColors.menuHeader, background: 'none', backgroundColor: 'transparent', border: 'none', height: DROPDOWN_ITEM_HEIGHT, lineHeight: DROPDOWN_ITEM_HEIGHT, cursor: 'default', padding: '0px 16px', userSelect: 'none', textAlign: 'left' })\r\n        ],\r\n        subComponentStyles: {\r\n            label: { root: { display: 'inline-block' } },\r\n            panel: {\r\n                root: [panelClassName],\r\n                main: {\r\n                    // Force drop shadow even under medium breakpoint\r\n                    boxShadow: '-30px 0px 30px -30px rgba(0,0,0,0.2)'\r\n                },\r\n                contentInner: { padding: '0 0 20px' }\r\n            }\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e;\r\n};\r\nvar _a, _b;\r\n//# sourceMappingURL=Dropdown.styles.js.map","import { styled } from '../../Utilities';\r\nimport { PanelBase } from './Panel.base';\r\nimport { getStyles } from './Panel.styles';\r\n/**\r\n * Panel description\r\n */\r\nexport var Panel = styled(PanelBase, getStyles, undefined, {\r\n    scope: 'Panel'\r\n});\r\n//# sourceMappingURL=Panel.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, findIndex, getDocument, getFirstFocusable, getId, getLastFocusable, getNativeProps, isIOS, isMac, KeyCodes, mergeAriaAttributeValues } from '../../Utilities';\r\nimport { Callout } from '../../Callout';\r\nimport { Checkbox } from '../../Checkbox';\r\nimport { CommandButton } from '../../Button';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nimport { DropdownMenuItemType } from './Dropdown.types';\r\nimport { DropdownSizePosCache } from './utilities/DropdownSizePosCache';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { Icon } from '../../Icon';\r\nimport { Label } from '../../Label';\r\nimport { KeytipData } from '../../KeytipData';\r\nimport { Panel } from '../../Panel';\r\nimport { ResponsiveMode, withResponsiveMode } from '../../utilities/decorators/withResponsiveMode';\r\nimport { SelectableOptionMenuItemType } from '../../utilities/selectableOption/SelectableOption.types';\r\nvar getClassNames = classNamesFunction();\r\nvar DropdownBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(DropdownBase, _super);\r\n    function DropdownBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._host = React.createRef();\r\n        _this._focusZone = React.createRef();\r\n        _this._dropDown = React.createRef();\r\n        _this._scrollIdleDelay = 250 /* ms */;\r\n        _this._sizePosCache = new DropdownSizePosCache();\r\n        /** Render text in dropdown input */\r\n        _this._onRenderTitle = function (item) {\r\n            var _a = _this.props.multiSelectDelimiter, multiSelectDelimiter = _a === void 0 ? ', ' : _a;\r\n            var displayTxt = item.map(function (i) { return i.text; }).join(multiSelectDelimiter);\r\n            return React.createElement(\"span\", null, displayTxt);\r\n        };\r\n        /** Render placeholder text in dropdown input */\r\n        _this._onRenderPlaceholder = function (props) {\r\n            if (!_this._placeholder) {\r\n                return null;\r\n            }\r\n            return React.createElement(\"span\", null, _this._placeholder);\r\n        };\r\n        /** Render Callout or Panel container and pass in list */\r\n        _this._onRenderContainer = function (props) {\r\n            var _a = _this.props, responsiveMode = _a.responsiveMode, calloutProps = _a.calloutProps, panelProps = _a.panelProps, dropdownWidth = _a.dropdownWidth;\r\n            var isSmall = responsiveMode <= ResponsiveMode.medium;\r\n            var panelStyles = _this._classNames.subComponentStyles\r\n                ? _this._classNames.subComponentStyles.panel\r\n                : undefined;\r\n            return isSmall ? (React.createElement(Panel, tslib_1.__assign({ isOpen: true, isLightDismiss: true, onDismissed: _this._onDismiss, hasCloseButton: false, styles: panelStyles }, panelProps), _this._renderFocusableList(props))) : (React.createElement(Callout, tslib_1.__assign({ isBeakVisible: false, gapSpace: 0, doNotLayer: false, directionalHintFixed: false, directionalHint: DirectionalHint.bottomLeftEdge }, calloutProps, { className: _this._classNames.callout, target: _this._dropDown.current, onDismiss: _this._onDismiss, onScroll: _this._onScroll, onPositioned: _this._onPositioned, calloutWidth: dropdownWidth || (_this._dropDown.current ? _this._dropDown.current.clientWidth : 0) }), _this._renderFocusableList(props)));\r\n        };\r\n        /** Render Caret Down Icon */\r\n        _this._onRenderCaretDown = function (props) {\r\n            return React.createElement(Icon, { className: _this._classNames.caretDown, iconName: \"ChevronDown\" });\r\n        };\r\n        /** Render List of items */\r\n        _this._onRenderList = function (props) {\r\n            var _a = _this.props.onRenderItem, onRenderItem = _a === void 0 ? _this._onRenderItem : _a;\r\n            return React.createElement(React.Fragment, null, _this.props.options.map(function (item, index) { return onRenderItem(tslib_1.__assign({}, item, { index: index }), _this._onRenderItem); }));\r\n        };\r\n        _this._onRenderItem = function (item) {\r\n            switch (item.itemType) {\r\n                case SelectableOptionMenuItemType.Divider:\r\n                    return _this._renderSeparator(item);\r\n                case SelectableOptionMenuItemType.Header:\r\n                    return _this._renderHeader(item);\r\n                default:\r\n                    return _this._renderOption(item);\r\n            }\r\n        };\r\n        _this._renderOption = function (item) {\r\n            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;\r\n            var _b = _this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;\r\n            var id = _this._id;\r\n            var isItemSelected = item.index !== undefined && selectedIndices ? selectedIndices.indexOf(item.index) > -1 : false;\r\n            // select the right className based on the combination of selected/disabled\r\n            var itemClassName = isItemSelected && item.disabled === true // predicate: both selected and disabled\r\n                ? _this._classNames.dropdownItemSelectedAndDisabled\r\n                : isItemSelected // predicate: selected only\r\n                    ? _this._classNames.dropdownItemSelected\r\n                    : item.disabled === true // predicate: disabled only\r\n                        ? _this._classNames.dropdownItemDisabled\r\n                        : _this._classNames.dropdownItem;\r\n            return !_this.props.multiSelect ? (React.createElement(CommandButton, { id: id + '-list' + item.index, key: item.key, \"data-index\": item.index, \"data-is-focusable\": !item.disabled, disabled: item.disabled, className: itemClassName, onClick: _this._onItemClick(item), onMouseEnter: _this._onItemMouseEnter.bind(_this, item), onMouseLeave: _this._onMouseItemLeave.bind(_this, item), onMouseMove: _this._onItemMouseMove.bind(_this, item), role: \"option\", \"aria-selected\": isItemSelected ? 'true' : 'false', ariaLabel: item.ariaLabel, title: item.title ? item.title : item.text }, onRenderOption(item, _this._onRenderOption))) : (React.createElement(Checkbox, { id: id + '-list' + item.index, key: item.key, \"data-index\": item.index, \"data-is-focusable\": !item.disabled, disabled: item.disabled, onChange: _this._onItemClick(item), inputProps: {\r\n                    onMouseEnter: _this._onItemMouseEnter.bind(_this, item),\r\n                    onMouseLeave: _this._onMouseItemLeave.bind(_this, item),\r\n                    onMouseMove: _this._onItemMouseMove.bind(_this, item)\r\n                }, label: item.text, title: item.title ? item.title : item.text, onRenderLabel: _this._onRenderLabel.bind(_this, item), className: itemClassName, role: \"option\", \"aria-selected\": isItemSelected ? 'true' : 'false', checked: isItemSelected }));\r\n        };\r\n        /** Render content of item (i.e. text/icon inside of button) */\r\n        _this._onRenderOption = function (item) {\r\n            return React.createElement(\"span\", { className: _this._classNames.dropdownOptionText }, item.text);\r\n        };\r\n        /** Render custom label for drop down item */\r\n        _this._onRenderLabel = function (item) {\r\n            var _a = _this.props.onRenderOption, onRenderOption = _a === void 0 ? _this._onRenderOption : _a;\r\n            return onRenderOption(item, _this._onRenderOption);\r\n        };\r\n        _this._onPositioned = function (positions) {\r\n            if (_this._focusZone.current) {\r\n                // Focusing an element can trigger a reflow. Making this wait until there is an animation\r\n                // frame can improve perf significantly.\r\n                _this._async.requestAnimationFrame(function () {\r\n                    var selectedIndices = _this.state.selectedIndices;\r\n                    if (selectedIndices && selectedIndices[0] && !_this.props.options[selectedIndices[0]].disabled) {\r\n                        var element = getDocument().querySelector(\"#\" + _this._id + \"-list\" + selectedIndices[0]);\r\n                        _this._focusZone.current.focusElement(element);\r\n                    }\r\n                    else {\r\n                        _this._focusZone.current.focus();\r\n                    }\r\n                });\r\n            }\r\n            if (!_this.state.calloutRenderEdge || _this.state.calloutRenderEdge !== positions.targetEdge) {\r\n                _this.setState({\r\n                    calloutRenderEdge: positions.targetEdge\r\n                });\r\n            }\r\n        };\r\n        _this._onItemClick = function (item) {\r\n            return function (event) {\r\n                if (!item.disabled) {\r\n                    _this.setSelectedIndex(event, item.index);\r\n                    if (!_this.props.multiSelect) {\r\n                        // only close the callout when it's in single-select mode\r\n                        _this.setState({\r\n                            isOpen: false\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n        };\r\n        /**\r\n         * Scroll handler for the callout to make sure the mouse events\r\n         * for updating focus are not interacting during scroll\r\n         */\r\n        _this._onScroll = function () {\r\n            if (!_this._isScrollIdle && _this._scrollIdleTimeoutId !== undefined) {\r\n                _this._async.clearTimeout(_this._scrollIdleTimeoutId);\r\n                _this._scrollIdleTimeoutId = undefined;\r\n            }\r\n            else {\r\n                _this._isScrollIdle = false;\r\n            }\r\n            _this._scrollIdleTimeoutId = _this._async.setTimeout(function () {\r\n                _this._isScrollIdle = true;\r\n            }, _this._scrollIdleDelay);\r\n        };\r\n        _this._onMouseItemLeave = function (item, ev) {\r\n            if (_this._shouldIgnoreMouseEvent()) {\r\n                return;\r\n            }\r\n            /**\r\n             * IE11 focus() method forces parents to scroll to top of element.\r\n             * Edge and IE expose a setActive() function for focusable divs that\r\n             * sets the page focus but does not scroll the parent element.\r\n             */\r\n            if (_this._host.current) {\r\n                if (_this._host.current.setActive) {\r\n                    try {\r\n                        _this._host.current.setActive();\r\n                    }\r\n                    catch (e) {\r\n                        /* no-op */\r\n                    }\r\n                }\r\n                else {\r\n                    _this._host.current.focus();\r\n                }\r\n            }\r\n        };\r\n        _this._onDismiss = function () {\r\n            _this.setState({ isOpen: false });\r\n            if (_this._dropDown.current) {\r\n                _this._dropDown.current.focus();\r\n            }\r\n        };\r\n        _this._onDropdownBlur = function (ev) {\r\n            // If Dropdown disabled do not proceed with this logic.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            // hasFocus tracks whether the root element has focus so always update the state.\r\n            _this.setState({ hasFocus: false });\r\n            if (_this.state.isOpen) {\r\n                // Do not onBlur when the callout is opened\r\n                return;\r\n            }\r\n            if (_this.props.onBlur) {\r\n                _this.props.onBlur(ev);\r\n            }\r\n        };\r\n        _this._onDropdownKeyDown = function (ev) {\r\n            // If Dropdown disabled do not process any keyboard events.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            // Take note if we are processing an alt (option) or meta (command) keydown.\r\n            // See comment in _shouldHandleKeyUp for reasoning.\r\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\r\n            if (_this.props.onKeyDown) {\r\n                _this.props.onKeyDown(ev);\r\n                if (ev.defaultPrevented) {\r\n                    return;\r\n                }\r\n            }\r\n            var newIndex;\r\n            var selectedIndex = _this.state.selectedIndices.length ? _this.state.selectedIndices[0] : -1;\r\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\r\n            var isOpen = _this.state.isOpen;\r\n            switch (ev.which) {\r\n                case KeyCodes.enter:\r\n                    _this.setState({\r\n                        isOpen: !isOpen\r\n                    });\r\n                    break;\r\n                case KeyCodes.escape:\r\n                    if (!isOpen) {\r\n                        return;\r\n                    }\r\n                    _this.setState({\r\n                        isOpen: false\r\n                    });\r\n                    break;\r\n                case KeyCodes.up:\r\n                    if (containsExpandCollapseModifier) {\r\n                        if (isOpen) {\r\n                            _this.setState({ isOpen: false });\r\n                            break;\r\n                        }\r\n                        return;\r\n                    }\r\n                    if (_this.props.multiSelect) {\r\n                        _this.setState({ isOpen: true });\r\n                    }\r\n                    else if (!_this._isDisabled()) {\r\n                        newIndex = _this._moveIndex(ev, -1, selectedIndex - 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.down:\r\n                    if (containsExpandCollapseModifier) {\r\n                        ev.stopPropagation();\r\n                        ev.preventDefault();\r\n                    }\r\n                    if ((containsExpandCollapseModifier && !isOpen) || _this.props.multiSelect) {\r\n                        _this.setState({ isOpen: true });\r\n                    }\r\n                    else if (!_this._isDisabled()) {\r\n                        newIndex = _this._moveIndex(ev, 1, selectedIndex + 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.home:\r\n                    if (!_this.props.multiSelect) {\r\n                        newIndex = _this._moveIndex(ev, 1, 0, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.end:\r\n                    if (!_this.props.multiSelect) {\r\n                        newIndex = _this._moveIndex(ev, -1, _this.props.options.length - 1, selectedIndex);\r\n                    }\r\n                    break;\r\n                case KeyCodes.space:\r\n                    // event handled in _onDropdownKeyUp\r\n                    break;\r\n                default:\r\n                    return;\r\n            }\r\n            if (newIndex !== selectedIndex) {\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n            }\r\n        };\r\n        _this._onDropdownKeyUp = function (ev) {\r\n            // If Dropdown disabled do not process any keyboard events.\r\n            var disabled = _this._isDisabled();\r\n            if (disabled) {\r\n                return;\r\n            }\r\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\r\n            var isOpen = _this.state.isOpen;\r\n            if (_this.props.onKeyUp) {\r\n                _this.props.onKeyUp(ev);\r\n                if (ev.preventDefault) {\r\n                    return;\r\n                }\r\n            }\r\n            switch (ev.which) {\r\n                case KeyCodes.space:\r\n                    _this.setState({\r\n                        isOpen: !isOpen\r\n                    });\r\n                    break;\r\n                default:\r\n                    if (shouldHandleKey && isOpen) {\r\n                        _this.setState({ isOpen: false });\r\n                    }\r\n                    return;\r\n            }\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n        };\r\n        _this._onZoneKeyDown = function (ev) {\r\n            var elementToFocus;\r\n            // Take note if we are processing an alt (option) or meta (command) keydown.\r\n            // See comment in _shouldHandleKeyUp for reasoning.\r\n            _this._lastKeyDownWasAltOrMeta = _this._isAltOrMeta(ev);\r\n            var containsExpandCollapseModifier = ev.altKey || ev.metaKey;\r\n            switch (ev.which) {\r\n                case KeyCodes.up:\r\n                    if (containsExpandCollapseModifier) {\r\n                        _this.setState({ isOpen: false });\r\n                    }\r\n                    else {\r\n                        if (_this._host.current) {\r\n                            elementToFocus = getLastFocusable(_this._host.current, _this._host.current.lastChild, true);\r\n                        }\r\n                    }\r\n                    break;\r\n                // All directional keystrokes should be canceled when the zone is rendered.\r\n                // This avoids the body scroll from reacting and thus dismissing the dropdown.\r\n                case KeyCodes.home:\r\n                case KeyCodes.end:\r\n                case KeyCodes.pageUp:\r\n                case KeyCodes.pageDown:\r\n                    break;\r\n                case KeyCodes.down:\r\n                    if (!containsExpandCollapseModifier && _this._host.current) {\r\n                        elementToFocus = getFirstFocusable(_this._host.current, _this._host.current.firstChild, true);\r\n                    }\r\n                    break;\r\n                case KeyCodes.escape:\r\n                    _this.setState({ isOpen: false });\r\n                    break;\r\n                case KeyCodes.tab:\r\n                    _this.setState({ isOpen: false });\r\n                    return;\r\n                default:\r\n                    return;\r\n            }\r\n            if (elementToFocus) {\r\n                elementToFocus.focus();\r\n            }\r\n            ev.stopPropagation();\r\n            ev.preventDefault();\r\n        };\r\n        _this._onZoneKeyUp = function (ev) {\r\n            var shouldHandleKey = _this._shouldHandleKeyUp(ev);\r\n            if (shouldHandleKey && _this.state.isOpen) {\r\n                _this.setState({ isOpen: false });\r\n                ev.preventDefault();\r\n            }\r\n        };\r\n        _this._onDropdownClick = function (ev) {\r\n            if (_this.props.onClick) {\r\n                _this.props.onClick(ev);\r\n                if (ev.preventDefault) {\r\n                    return;\r\n                }\r\n            }\r\n            var isOpen = _this.state.isOpen;\r\n            var disabled = _this._isDisabled();\r\n            if (!disabled) {\r\n                _this.setState({\r\n                    isOpen: !isOpen\r\n                });\r\n            }\r\n        };\r\n        _this._onFocus = function (ev) {\r\n            var _a = _this.state, isOpen = _a.isOpen, selectedIndices = _a.selectedIndices;\r\n            var multiSelect = _this.props.multiSelect;\r\n            var disabled = _this._isDisabled();\r\n            if (!disabled) {\r\n                if (!isOpen && selectedIndices.length === 0 && !multiSelect) {\r\n                    // Per aria\r\n                    _this._moveIndex(ev, 1, 0, -1);\r\n                }\r\n                if (_this.props.onFocus) {\r\n                    _this.props.onFocus(ev);\r\n                }\r\n                _this.setState({ hasFocus: true });\r\n            }\r\n        };\r\n        /**\r\n         * Because the isDisabled prop is deprecated, we have had to repeat this logic all over the place.\r\n         * This helper method avoids all the repetition.\r\n         */\r\n        _this._isDisabled = function () {\r\n            var disabled = _this.props.disabled;\r\n            var isDisabled = _this.props.isDisabled;\r\n            // Remove this deprecation workaround at 1.0.0\r\n            if (isDisabled !== undefined) {\r\n                disabled = isDisabled;\r\n            }\r\n            return disabled;\r\n        };\r\n        _this._warnDeprecations({\r\n            isDisabled: 'disabled',\r\n            onChanged: 'onChange',\r\n            placeHolder: 'placeholder'\r\n        });\r\n        _this._warnMutuallyExclusive({\r\n            defaultSelectedKey: 'selectedKey',\r\n            defaultSelectedKeys: 'selectedKeys',\r\n            selectedKeys: 'selectedKey',\r\n            multiSelect: 'defaultSelectedKey',\r\n            selectedKey: 'multiSelect'\r\n        });\r\n        _this._id = props.id || getId('Dropdown');\r\n        _this._isScrollIdle = true;\r\n        var selectedIndices;\r\n        if (_this.props.multiSelect) {\r\n            var selectedKeys = props.defaultSelectedKeys !== undefined ? props.defaultSelectedKeys : props.selectedKeys;\r\n            selectedIndices = _this._getSelectedIndexes(props.options, selectedKeys);\r\n        }\r\n        else {\r\n            var selectedKey = props.defaultSelectedKey !== undefined ? props.defaultSelectedKey : props.selectedKey;\r\n            selectedIndices = _this._getSelectedIndexes(props.options, selectedKey);\r\n            _this._sizePosCache.updateOptions(props.options);\r\n        }\r\n        _this.state = {\r\n            isOpen: false,\r\n            selectedIndices: selectedIndices,\r\n            hasFocus: false,\r\n            calloutRenderEdge: undefined\r\n        };\r\n        return _this;\r\n    }\r\n    DropdownBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        // In controlled component usage where selectedKey is provided, update the selectedIndex\r\n        // state if the key or options change.\r\n        var selectedKeyProp;\r\n        // this does a shallow compare (assumes options are pure), for the purposes of determining whether\r\n        // defaultSelectedKey/defaultSelectedKeys are respected.\r\n        var didOptionsChange = newProps.options !== this.props.options;\r\n        if (newProps.multiSelect) {\r\n            if (didOptionsChange && newProps.defaultSelectedKeys !== undefined) {\r\n                selectedKeyProp = 'defaultSelectedKeys';\r\n            }\r\n            else {\r\n                selectedKeyProp = 'selectedKeys';\r\n            }\r\n        }\r\n        else {\r\n            if (didOptionsChange && newProps.defaultSelectedKey !== undefined) {\r\n                selectedKeyProp = 'defaultSelectedKey';\r\n            }\r\n            else {\r\n                selectedKeyProp = 'selectedKey';\r\n            }\r\n        }\r\n        if (newProps[selectedKeyProp] !== undefined && (newProps[selectedKeyProp] !== this.props[selectedKeyProp] || didOptionsChange)) {\r\n            this.setState({\r\n                selectedIndices: this._getSelectedIndexes(newProps.options, newProps[selectedKeyProp])\r\n            });\r\n        }\r\n        if (newProps.options !== this.props.options && // preexisting code assumes purity of the options...\r\n            !newProps.multiSelect // only relevant in single selection\r\n        ) {\r\n            this._sizePosCache.updateOptions(newProps.options);\r\n        }\r\n    };\r\n    DropdownBase.prototype.componentDidUpdate = function (prevProps, prevState) {\r\n        if (prevState.isOpen === true && this.state.isOpen === false) {\r\n            this._gotMouseMove = false;\r\n            if (this._dropDown.current) {\r\n                this._dropDown.current.focus();\r\n            }\r\n            if (this.props.onDismiss) {\r\n                this.props.onDismiss();\r\n            }\r\n        }\r\n    };\r\n    DropdownBase.prototype.render = function () {\r\n        var _this = this;\r\n        var id = this._id;\r\n        var _a = this.props, className = _a.className, label = _a.label, options = _a.options, ariaLabel = _a.ariaLabel, required = _a.required, errorMessage = _a.errorMessage, multiSelect = _a.multiSelect, keytipProps = _a.keytipProps, propStyles = _a.styles, theme = _a.theme, panelProps = _a.panelProps, calloutProps = _a.calloutProps, _b = _a.onRenderTitle, onRenderTitle = _b === void 0 ? this._onRenderTitle : _b, _c = _a.onRenderContainer, onRenderContainer = _c === void 0 ? this._onRenderContainer : _c, _d = _a.onRenderPlaceHolder, onRenderPlaceHolder = _d === void 0 ? this._onRenderPlaceholder : _d, _e = _a.onRenderCaretDown, onRenderCaretDown = _e === void 0 ? this._onRenderCaretDown : _e;\r\n        var _f = this.state, isOpen = _f.isOpen, selectedIndices = _f.selectedIndices, hasFocus = _f.hasFocus, calloutRenderEdge = _f.calloutRenderEdge;\r\n        var selectedOptions = this._getAllSelectedOptions(options, selectedIndices);\r\n        var divProps = getNativeProps(this.props, divProperties);\r\n        var disabled = this._isDisabled();\r\n        var optionId = id + '-option';\r\n        var ariaAttrs = multiSelect || disabled\r\n            ? {\r\n                role: undefined,\r\n                ariaActiveDescendant: undefined,\r\n                childRole: undefined,\r\n                ariaSetSize: undefined,\r\n                ariaPosInSet: undefined,\r\n                ariaSelected: undefined\r\n            }\r\n            : // single select\r\n                {\r\n                    role: 'listbox',\r\n                    ariaActiveDescendant: isOpen && selectedIndices.length === 1 && selectedIndices[0] >= 0 ? this._id + '-list' + selectedIndices[0] : optionId,\r\n                    childRole: 'option',\r\n                    ariaSetSize: this._sizePosCache.optionSetSize,\r\n                    ariaPosInSet: this._sizePosCache.positionInSet(selectedIndices[0]),\r\n                    ariaSelected: selectedIndices[0] === undefined ? undefined : true\r\n                };\r\n        this._classNames = getClassNames(propStyles, {\r\n            theme: theme,\r\n            className: className,\r\n            hasError: Boolean(errorMessage && errorMessage.length > 0),\r\n            isOpen: isOpen,\r\n            required: required,\r\n            disabled: disabled,\r\n            isRenderingPlaceholder: !selectedOptions.length,\r\n            panelClassName: !!panelProps ? panelProps.className : undefined,\r\n            calloutClassName: !!calloutProps ? calloutProps.className : undefined,\r\n            calloutRenderEdge: calloutRenderEdge\r\n        });\r\n        var labelStyles = this._classNames.subComponentStyles\r\n            ? this._classNames.subComponentStyles.label\r\n            : undefined;\r\n        return (React.createElement(\"div\", { className: this._classNames.root },\r\n            label && (React.createElement(Label, { className: this._classNames.label, id: id + '-label', htmlFor: id, required: required, styles: labelStyles }, label)),\r\n            React.createElement(KeytipData, { keytipProps: keytipProps, disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"div\", tslib_1.__assign({}, keytipAttributes, { \"data-is-focusable\": !disabled, ref: _this._dropDown, id: id, tabIndex: disabled ? -1 : 0, \"aria-expanded\": isOpen ? 'true' : 'false', role: ariaAttrs.role, \"aria-label\": ariaLabel, \"aria-labelledby\": label && !ariaLabel ? id + '-label' : undefined, \"aria-describedby\": mergeAriaAttributeValues(optionId, keytipAttributes['aria-describedby']), \"aria-activedescendant\": isOpen ? ariaAttrs.ariaActiveDescendant : undefined, \"aria-required\": required, \"aria-disabled\": disabled, \"aria-owns\": isOpen ? id + '-list' : undefined }, divProps, { className: _this._classNames.dropdown, onBlur: _this._onDropdownBlur, onKeyDown: _this._onDropdownKeyDown, onKeyUp: _this._onDropdownKeyUp, onClick: _this._onDropdownClick, onFocus: _this._onFocus }),\r\n                React.createElement(\"span\", { id: optionId, className: _this._classNames.title, \"aria-atomic\": true, role: ariaAttrs.childRole, \"aria-live\": !hasFocus || disabled || multiSelect || isOpen ? 'off' : 'assertive', \"aria-label\": selectedOptions.length ? selectedOptions[0].text : _this._placeholder, \"aria-setsize\": ariaAttrs.ariaSetSize, \"aria-posinset\": ariaAttrs.ariaPosInSet, \"aria-selected\": ariaAttrs.ariaSelected }, // If option is selected render title, otherwise render the placeholder text\r\n                selectedOptions.length\r\n                    ? onRenderTitle(selectedOptions, _this._onRenderTitle)\r\n                    : onRenderPlaceHolder(_this.props, _this._onRenderPlaceholder)),\r\n                React.createElement(\"span\", { className: _this._classNames.caretDownWrapper }, onRenderCaretDown(_this.props, _this._onRenderCaretDown)))); }),\r\n            isOpen && onRenderContainer(this.props, this._onRenderContainer),\r\n            errorMessage && errorMessage.length > 0 && React.createElement(\"div\", { className: this._classNames.errorMessage }, errorMessage)));\r\n    };\r\n    DropdownBase.prototype.focus = function (shouldOpenOnFocus) {\r\n        if (this._dropDown.current && this._dropDown.current.tabIndex !== -1) {\r\n            this._dropDown.current.focus();\r\n            if (shouldOpenOnFocus) {\r\n                this.setState({\r\n                    isOpen: true\r\n                });\r\n            }\r\n        }\r\n    };\r\n    DropdownBase.prototype.setSelectedIndex = function (event, index) {\r\n        var _a = this.props, onChange = _a.onChange, onChanged = _a.onChanged, options = _a.options, selectedKey = _a.selectedKey, selectedKeys = _a.selectedKeys, multiSelect = _a.multiSelect, notifyOnReselect = _a.notifyOnReselect;\r\n        var _b = this.state.selectedIndices, selectedIndices = _b === void 0 ? [] : _b;\r\n        var checked = selectedIndices ? selectedIndices.indexOf(index) > -1 : false;\r\n        index = Math.max(0, Math.min(options.length - 1, index));\r\n        if (!multiSelect && !notifyOnReselect && index === selectedIndices[0]) {\r\n            return;\r\n        }\r\n        else if (!multiSelect && selectedKey === undefined) {\r\n            // Set the selected option if this is an uncontrolled component\r\n            this.setState({\r\n                selectedIndices: [index]\r\n            });\r\n        }\r\n        else if (multiSelect && selectedKeys === undefined) {\r\n            var newIndexes = selectedIndices ? this._copyArray(selectedIndices) : [];\r\n            if (checked) {\r\n                var position = newIndexes.indexOf(index);\r\n                if (position > -1) {\r\n                    // unchecked the current one\r\n                    newIndexes.splice(position, 1);\r\n                }\r\n            }\r\n            else {\r\n                // add the new selected index into the existing one\r\n                newIndexes.push(index);\r\n            }\r\n            this.setState({\r\n                selectedIndices: newIndexes\r\n            });\r\n        }\r\n        if (onChange) {\r\n            // for single-select, option passed in will always be selected.\r\n            // for multi-select, flip the checked value\r\n            var changedOpt = multiSelect ? tslib_1.__assign({}, options[index], { selected: !checked }) : options[index];\r\n            onChange(event, changedOpt, index);\r\n        }\r\n        if (onChanged) {\r\n            // for single-select, option passed in will always be selected.\r\n            // for multi-select, flip the checked value\r\n            var changedOpt = multiSelect ? tslib_1.__assign({}, options[index], { selected: !checked }) : options[index];\r\n            onChanged(changedOpt, index);\r\n        }\r\n    };\r\n    Object.defineProperty(DropdownBase.prototype, \"_placeholder\", {\r\n        /** Get either props.placeholder (new name) or props.placeHolder (old name) */\r\n        get: function () {\r\n            return this.props.placeholder || this.props.placeHolder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DropdownBase.prototype._copyArray = function (array) {\r\n        var newArray = [];\r\n        for (var _i = 0, array_1 = array; _i < array_1.length; _i++) {\r\n            var element = array_1[_i];\r\n            newArray.push(element);\r\n        }\r\n        return newArray;\r\n    };\r\n    /**\r\n     * Finds the next valid Dropdown option and sets the selected index to it.\r\n     * @param stepValue Value of how many items the function should traverse.  Should be -1 or 1.\r\n     * @param index Index of where the search should start\r\n     * @param selectedIndex The selectedIndex Dropdown's state\r\n     * @returns The next valid dropdown option's index\r\n     */\r\n    DropdownBase.prototype._moveIndex = function (event, stepValue, index, selectedIndex) {\r\n        var options = this.props.options;\r\n        // Return selectedIndex if nothing has changed or options is empty\r\n        if (selectedIndex === index || options.length === 0) {\r\n            return selectedIndex;\r\n        }\r\n        // Set starting index to 0 if index is < 0\r\n        if (index < 0) {\r\n            index = 0;\r\n        }\r\n        // Set starting index to last option index if greater than options.length\r\n        if (index >= options.length) {\r\n            index = options.length - 1;\r\n        }\r\n        var stepCounter = 0;\r\n        // If current index is a header or divider, or disabled, increment by step\r\n        while (options[index].itemType === DropdownMenuItemType.Header ||\r\n            options[index].itemType === DropdownMenuItemType.Divider ||\r\n            options[index].disabled) {\r\n            // If stepCounter exceeds length of options, then return selectedIndex (-1)\r\n            if (stepCounter >= options.length) {\r\n                return selectedIndex;\r\n            }\r\n            // If index + stepValue is out of bounds, wrap around\r\n            if (index + stepValue < 0) {\r\n                index = options.length;\r\n            }\r\n            else if (index + stepValue >= options.length) {\r\n                index = -1;\r\n            }\r\n            index = index + stepValue;\r\n            stepCounter++;\r\n        }\r\n        this.setSelectedIndex(event, index);\r\n        return index;\r\n    };\r\n    /** Wrap item list in a FocusZone */\r\n    DropdownBase.prototype._renderFocusableList = function (props) {\r\n        var _a = props.onRenderList, onRenderList = _a === void 0 ? this._onRenderList : _a, label = props.label;\r\n        var id = this._id;\r\n        return (React.createElement(\"div\", { className: this._classNames.dropdownItemsWrapper, onKeyDown: this._onZoneKeyDown, onKeyUp: this._onZoneKeyUp, ref: this._host, tabIndex: 0 },\r\n            React.createElement(FocusZone, { ref: this._focusZone, direction: FocusZoneDirection.vertical, id: id + '-list', className: this._classNames.dropdownItems, \"aria-labelledby\": label ? id + '-label' : undefined, role: \"listbox\" }, onRenderList(props, this._onRenderList))));\r\n    };\r\n    DropdownBase.prototype._renderSeparator = function (item) {\r\n        var index = item.index, key = item.key;\r\n        if (index > 0) {\r\n            return React.createElement(\"div\", { role: \"separator\", key: key, className: this._classNames.dropdownDivider });\r\n        }\r\n        return null;\r\n    };\r\n    DropdownBase.prototype._renderHeader = function (item) {\r\n        var _a = this.props.onRenderOption, onRenderOption = _a === void 0 ? this._onRenderOption : _a;\r\n        var key = item.key;\r\n        return (React.createElement(\"div\", { key: key, className: this._classNames.dropdownItemHeader }, onRenderOption(item, this._onRenderOption)));\r\n    };\r\n    DropdownBase.prototype._onItemMouseEnter = function (item, ev) {\r\n        if (this._shouldIgnoreMouseEvent()) {\r\n            return;\r\n        }\r\n        var targetElement = ev.currentTarget;\r\n        targetElement.focus();\r\n    };\r\n    DropdownBase.prototype._onItemMouseMove = function (item, ev) {\r\n        var targetElement = ev.currentTarget;\r\n        this._gotMouseMove = true;\r\n        if (!this._isScrollIdle || document.activeElement === targetElement) {\r\n            return;\r\n        }\r\n        targetElement.focus();\r\n    };\r\n    DropdownBase.prototype._shouldIgnoreMouseEvent = function () {\r\n        return !this._isScrollIdle || !this._gotMouseMove;\r\n    };\r\n    /** Get all selected indexes for multi-select mode */\r\n    DropdownBase.prototype._getSelectedIndexes = function (options, selectedKey) {\r\n        if (selectedKey === undefined) {\r\n            if (this.props.multiSelect) {\r\n                return this._getAllSelectedIndices(options);\r\n            }\r\n            var selectedIndex = this._getSelectedIndex(options, null);\r\n            return selectedIndex !== -1 ? [selectedIndex] : [];\r\n        }\r\n        else if (!Array.isArray(selectedKey)) {\r\n            return [this._getSelectedIndex(options, selectedKey)];\r\n        }\r\n        var selectedIndices = [];\r\n        for (var _i = 0, selectedKey_1 = selectedKey; _i < selectedKey_1.length; _i++) {\r\n            var key = selectedKey_1[_i];\r\n            selectedIndices.push(this._getSelectedIndex(options, key));\r\n        }\r\n        return selectedIndices;\r\n    };\r\n    /** Get all selected options for multi-select mode */\r\n    DropdownBase.prototype._getAllSelectedOptions = function (options, selectedIndices) {\r\n        var selectedOptions = [];\r\n        for (var _i = 0, selectedIndices_1 = selectedIndices; _i < selectedIndices_1.length; _i++) {\r\n            var index = selectedIndices_1[_i];\r\n            var option = options[index];\r\n            if (option) {\r\n                selectedOptions.push(option);\r\n            }\r\n        }\r\n        return selectedOptions;\r\n    };\r\n    DropdownBase.prototype._getAllSelectedIndices = function (options) {\r\n        return options.map(function (option, index) { return (option.selected ? index : -1); }).filter(function (index) { return index !== -1; });\r\n    };\r\n    DropdownBase.prototype._getSelectedIndex = function (options, selectedKey) {\r\n        return findIndex(options, function (option) {\r\n            // tslint:disable-next-line:triple-equals\r\n            if (selectedKey != null) {\r\n                return option.key === selectedKey;\r\n            }\r\n            else {\r\n                return !!option.isSelected || !!option.selected;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Returns true if the key for the event is alt (Mac option) or meta (Mac command).\r\n     */\r\n    DropdownBase.prototype._isAltOrMeta = function (ev) {\r\n        return ev.which === KeyCodes.alt || ev.key === 'Meta';\r\n    };\r\n    /**\r\n     * We close the menu on key up only if ALL of the following are true:\r\n     * - Most recent key down was alt or meta (command)\r\n     * - The alt/meta key down was NOT followed by some other key (such as down/up arrow to\r\n     *   expand/collapse the menu)\r\n     * - We're not on a Mac (or iOS)\r\n     *\r\n     * This is because on Windows, pressing alt moves focus to the application menu bar or similar,\r\n     * closing any open context menus. There is not a similar behavior on Macs.\r\n     */\r\n    DropdownBase.prototype._shouldHandleKeyUp = function (ev) {\r\n        var keyPressIsAltOrMetaAlone = this._lastKeyDownWasAltOrMeta && this._isAltOrMeta(ev);\r\n        this._lastKeyDownWasAltOrMeta = false;\r\n        return !!keyPressIsAltOrMetaAlone && !(isMac() || isIOS());\r\n    };\r\n    DropdownBase.defaultProps = {\r\n        options: []\r\n    };\r\n    DropdownBase = tslib_1.__decorate([\r\n        withResponsiveMode\r\n    ], DropdownBase);\r\n    return DropdownBase;\r\n}(BaseComponent));\r\nexport { DropdownBase };\r\n//# sourceMappingURL=Dropdown.base.js.map","import { styled } from '../../Utilities';\r\nimport { DropdownBase } from './Dropdown.base';\r\nimport { getStyles } from './Dropdown.styles';\r\nexport var Dropdown = styled(DropdownBase, getStyles, undefined, {\r\n    scope: 'Dropdown'\r\n});\r\n//# sourceMappingURL=Dropdown.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { BaseComponent, classNamesFunction, divProperties, elementContains, focusFirstChild, getNativeProps } from '../../Utilities';\r\nimport { KeytipManager } from '../../utilities/keytips/KeytipManager';\r\nvar getClassNames = classNamesFunction();\r\nvar OverflowSetBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(OverflowSetBase, _super);\r\n    function OverflowSetBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._focusZone = React.createRef();\r\n        _this._persistedKeytips = {};\r\n        _this._keytipManager = KeytipManager.getInstance();\r\n        _this._divContainer = React.createRef();\r\n        _this._onRenderItems = function (items) {\r\n            return items.map(function (item, i) {\r\n                var wrapperDivProps = {\r\n                    className: _this._classNames.item\r\n                };\r\n                return (React.createElement(\"div\", tslib_1.__assign({ key: item.key }, wrapperDivProps), _this.props.onRenderItem(item)));\r\n            });\r\n        };\r\n        _this._onRenderOverflowButtonWrapper = function (items) {\r\n            var wrapperDivProps = {\r\n                className: _this._classNames.overflowButton\r\n            };\r\n            var overflowKeytipSequences = _this.props.keytipSequences;\r\n            var newOverflowItems = [];\r\n            if (overflowKeytipSequences) {\r\n                items.forEach(function (overflowItem) {\r\n                    var keytip = overflowItem.keytipProps;\r\n                    if (keytip) {\r\n                        // Create persisted keytip\r\n                        var persistedKeytip = {\r\n                            content: keytip.content,\r\n                            keySequences: keytip.keySequences,\r\n                            disabled: keytip.disabled || !!(overflowItem.disabled || overflowItem.isDisabled),\r\n                            hasDynamicChildren: keytip.hasDynamicChildren,\r\n                            hasMenu: keytip.hasMenu\r\n                        };\r\n                        if (keytip.hasDynamicChildren || _this._getSubMenuForItem(overflowItem)) {\r\n                            // If the keytip has a submenu or children nodes, change onExecute to persistedKeytipExecute\r\n                            persistedKeytip.onExecute = _this._keytipManager.menuExecute.bind(_this._keytipManager, overflowKeytipSequences, overflowItem.keytipProps.keySequences);\r\n                        }\r\n                        else {\r\n                            // If the keytip doesn't have a submenu, just execute the original function\r\n                            persistedKeytip.onExecute = keytip.onExecute;\r\n                        }\r\n                        // Add this persisted keytip to our internal list, use a temporary uniqueID (its content)\r\n                        // uniqueID will get updated on register\r\n                        _this._persistedKeytips[persistedKeytip.content] = persistedKeytip;\r\n                        // Add the overflow sequence to this item\r\n                        var newOverflowItem = tslib_1.__assign({}, overflowItem, { keytipProps: tslib_1.__assign({}, keytip, { overflowSetSequence: overflowKeytipSequences }) });\r\n                        newOverflowItems.push(newOverflowItem);\r\n                    }\r\n                    else {\r\n                        // Nothing to change, add overflowItem to list\r\n                        newOverflowItems.push(overflowItem);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                newOverflowItems = items;\r\n            }\r\n            return React.createElement(\"div\", tslib_1.__assign({}, wrapperDivProps), _this.props.onRenderOverflowButton(newOverflowItems));\r\n        };\r\n        if (props.doNotContainWithinFocusZone) {\r\n            _this._warnMutuallyExclusive({\r\n                doNotContainWithinFocusZone: 'focusZoneProps'\r\n            });\r\n        }\r\n        return _this;\r\n    }\r\n    OverflowSetBase.prototype.render = function () {\r\n        var _a = this.props, items = _a.items, overflowItems = _a.overflowItems, className = _a.className, focusZoneProps = _a.focusZoneProps, styles = _a.styles, vertical = _a.vertical, role = _a.role, doNotContainWithinFocusZone = _a.doNotContainWithinFocusZone;\r\n        this._classNames = getClassNames(styles, { className: className, vertical: vertical });\r\n        var Tag;\r\n        var uniqueComponentProps;\r\n        if (doNotContainWithinFocusZone) {\r\n            Tag = 'div';\r\n            uniqueComponentProps = tslib_1.__assign({}, getNativeProps(this.props, divProperties), { ref: this._divContainer });\r\n        }\r\n        else {\r\n            Tag = FocusZone;\r\n            uniqueComponentProps = tslib_1.__assign({}, getNativeProps(this.props, divProperties), focusZoneProps, { componentRef: this._focusZone, direction: vertical ? FocusZoneDirection.vertical : FocusZoneDirection.horizontal });\r\n        }\r\n        return (React.createElement(Tag, tslib_1.__assign({}, uniqueComponentProps, { className: this._classNames.root, role: role }),\r\n            items && this._onRenderItems(items),\r\n            overflowItems && overflowItems.length > 0 && this._onRenderOverflowButtonWrapper(overflowItems)));\r\n    };\r\n    /**\r\n     * Sets focus to the first tabbable item in the OverflowSet.\r\n     * @param forceIntoFirstElement - If true, focus will be forced into the first element,\r\n     * even if focus is already in theOverflowSet\r\n     * @returns True if focus could be set to an active element, false if no operation was taken.\r\n     */\r\n    OverflowSetBase.prototype.focus = function (forceIntoFirstElement) {\r\n        var focusSucceeded = false;\r\n        if (this.props.doNotContainWithinFocusZone) {\r\n            if (this._divContainer.current) {\r\n                focusSucceeded = focusFirstChild(this._divContainer.current);\r\n            }\r\n        }\r\n        else if (this._focusZone.current) {\r\n            focusSucceeded = this._focusZone.current.focus(forceIntoFirstElement);\r\n        }\r\n        return focusSucceeded;\r\n    };\r\n    /**\r\n     * Sets focus to a specific child element within the OverflowSet.\r\n     * @param childElement - The child element within the zone to focus.\r\n     * @returns True if focus could be set to an active element, false if no operation was taken.\r\n     */\r\n    OverflowSetBase.prototype.focusElement = function (childElement) {\r\n        var focusSucceeded = false;\r\n        if (!childElement) {\r\n            return false;\r\n        }\r\n        if (this.props.doNotContainWithinFocusZone) {\r\n            if (this._divContainer.current && elementContains(this._divContainer.current, childElement)) {\r\n                childElement.focus();\r\n                focusSucceeded = document.activeElement === childElement;\r\n            }\r\n        }\r\n        else if (this._focusZone.current) {\r\n            focusSucceeded = this._focusZone.current.focusElement(childElement);\r\n        }\r\n        return focusSucceeded;\r\n    };\r\n    // Add keytip register/unregister handlers to lifecycle functions to correctly manage persisted keytips\r\n    OverflowSetBase.prototype.componentDidMount = function () {\r\n        this._registerPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentWillUnmount = function () {\r\n        this._unregisterPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentWillUpdate = function () {\r\n        this._unregisterPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype.componentDidUpdate = function () {\r\n        this._registerPersistedKeytips();\r\n    };\r\n    OverflowSetBase.prototype._registerPersistedKeytips = function () {\r\n        var _this = this;\r\n        Object.keys(this._persistedKeytips).forEach(function (key) {\r\n            var keytip = _this._persistedKeytips[key];\r\n            var uniqueID = _this._keytipManager.register(keytip, true);\r\n            // Update map\r\n            _this._persistedKeytips[uniqueID] = keytip;\r\n            delete _this._persistedKeytips[key];\r\n        });\r\n    };\r\n    OverflowSetBase.prototype._unregisterPersistedKeytips = function () {\r\n        var _this = this;\r\n        // Delete all persisted keytips saved\r\n        Object.keys(this._persistedKeytips).forEach(function (uniqueID) {\r\n            _this._keytipManager.unregister(_this._persistedKeytips[uniqueID], uniqueID, true);\r\n        });\r\n        this._persistedKeytips = {};\r\n    };\r\n    /**\r\n     * Gets the subMenu for an overflow item\r\n     * Checks if itemSubMenuProvider has been defined, if not defaults to subMenuProps\r\n     */\r\n    OverflowSetBase.prototype._getSubMenuForItem = function (item) {\r\n        if (this.props.itemSubMenuProvider) {\r\n            return this.props.itemSubMenuProvider(item);\r\n        }\r\n        if (item.subMenuProps) {\r\n            return item.subMenuProps.items;\r\n        }\r\n        return undefined;\r\n    };\r\n    OverflowSetBase.defaultProps = {\r\n        vertical: false,\r\n        role: 'menubar'\r\n    };\r\n    return OverflowSetBase;\r\n}(BaseComponent));\r\nexport { OverflowSetBase };\r\n//# sourceMappingURL=OverflowSet.base.js.map","var overflowItemStyle = {\r\n    flexShrink: 0,\r\n    display: 'inherit'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, vertical = props.vertical;\r\n    return {\r\n        root: [\r\n            'ms-OverflowSet',\r\n            {\r\n                position: 'relative',\r\n                display: 'flex',\r\n                flexWrap: 'nowrap'\r\n            },\r\n            vertical && { flexDirection: 'column' },\r\n            className\r\n        ],\r\n        item: ['ms-OverflowSet-item', overflowItemStyle],\r\n        overflowButton: ['ms-OverflowSet-overflowButton', overflowItemStyle]\r\n    };\r\n};\r\n//# sourceMappingURL=OverflowSet.styles.js.map","import { styled } from '../../Utilities';\r\nimport { OverflowSetBase } from './OverflowSet.base';\r\nimport { getStyles } from './OverflowSet.styles';\r\nexport var OverflowSet = styled(OverflowSetBase, getStyles, undefined, {\r\n    scope: 'OverflowSet'\r\n});\r\n//# sourceMappingURL=OverflowSet.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport * as PropTypes from 'prop-types';\r\nimport { BaseComponent, divProperties, getNativeProps, provideContext } from '../../Utilities';\r\nvar RESIZE_DELAY = 16;\r\n/**\r\n * Returns a simple object is able to store measurements with a given key.\r\n */\r\nexport var getMeasurementCache = function () {\r\n    var measurementsCache = {};\r\n    return {\r\n        /**\r\n         * Checks if the provided data has a cacheKey. If it has a cacheKey and there is a\r\n         * corresponding entry in the measurementsCache, then it will return that value.\r\n         * Returns undefined otherwise.\r\n         */\r\n        getCachedMeasurement: function (data) {\r\n            if (data && data.cacheKey && measurementsCache.hasOwnProperty(data.cacheKey)) {\r\n                return measurementsCache[data.cacheKey];\r\n            }\r\n            return undefined;\r\n        },\r\n        /**\r\n         * Should be called whenever there is a new measurement associated with a given data object.\r\n         * If the data has a cacheKey, store that measurement in the measurementsCache.\r\n         */\r\n        addMeasurementToCache: function (data, measurement) {\r\n            if (data.cacheKey) {\r\n                measurementsCache[data.cacheKey] = measurement;\r\n            }\r\n        }\r\n    };\r\n};\r\n/**\r\n * Returns a function that is able to compute the next state for the ResizeGroup given the current\r\n * state and any measurement updates.\r\n */\r\nexport var getNextResizeGroupStateProvider = function (measurementCache) {\r\n    if (measurementCache === void 0) { measurementCache = getMeasurementCache(); }\r\n    var _measurementCache = measurementCache;\r\n    var _containerWidth;\r\n    /**\r\n     * Gets the width of the data rendered in a hidden div.\r\n     * @param measuredData - The data corresponding to the measurement we wish to take.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _getMeasuredWidth(measuredData, getElementToMeasureWidth) {\r\n        var cachedWidth = _measurementCache.getCachedMeasurement(measuredData);\r\n        if (cachedWidth !== undefined) {\r\n            return cachedWidth;\r\n        }\r\n        var measuredWidth = getElementToMeasureWidth();\r\n        _measurementCache.addMeasurementToCache(measuredData, measuredWidth);\r\n        return measuredWidth;\r\n    }\r\n    /**\r\n     * Will get the next IResizeGroupState based on the current data while trying to shrink contents\r\n     * to fit in the container.\r\n     * @param data - The initial data point to start measuring.\r\n     * @param onReduceData - Function that transforms the data into something that should render with less width.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _shrinkContentsUntilTheyFit(data, onReduceData, getElementToMeasureWidth) {\r\n        var dataToMeasure = data;\r\n        var measuredWidth = _getMeasuredWidth(data, getElementToMeasureWidth);\r\n        while (measuredWidth > _containerWidth) {\r\n            var nextMeasuredData = onReduceData(dataToMeasure);\r\n            // We don't want to get stuck in an infinite render loop when there are no more\r\n            // scaling steps, so implementations of onReduceData should return undefined when\r\n            // there are no more scaling states to apply.\r\n            if (nextMeasuredData === undefined) {\r\n                return {\r\n                    renderedData: dataToMeasure,\r\n                    resizeDirection: undefined,\r\n                    dataToMeasure: undefined\r\n                };\r\n            }\r\n            measuredWidth = _measurementCache.getCachedMeasurement(nextMeasuredData);\r\n            // If the measurement isn't in the cache, we need to rerender with some data in a hidden div\r\n            if (measuredWidth === undefined) {\r\n                return {\r\n                    dataToMeasure: nextMeasuredData,\r\n                    resizeDirection: 'shrink'\r\n                };\r\n            }\r\n            dataToMeasure = nextMeasuredData;\r\n        }\r\n        return {\r\n            renderedData: dataToMeasure,\r\n            resizeDirection: undefined,\r\n            dataToMeasure: undefined\r\n        };\r\n    }\r\n    /**\r\n     * This function should be called when the state changes in a manner that might allow for more content to fit\r\n     * on the screen, such as the window width growing.\r\n     * @param data - The initial data point to start measuring.\r\n     * @param onGrowData - Function that transforms the data into something that may take up more space when rendering.\r\n     * @param getElementToMeasureWidth - A function that returns the measurement of the rendered data. Only called when the measurement\r\n     * is not in the cache.\r\n     */\r\n    function _growDataUntilItDoesNotFit(data, onGrowData, getElementToMeasureWidth, onReduceData) {\r\n        var dataToMeasure = data;\r\n        var measuredWidth = _getMeasuredWidth(data, getElementToMeasureWidth);\r\n        while (measuredWidth < _containerWidth) {\r\n            var nextMeasuredData = onGrowData(dataToMeasure);\r\n            // We don't want to get stuck in an infinite render loop when there are no more\r\n            // scaling steps, so implementations of onGrowData should return undefined when\r\n            // there are no more scaling states to apply.\r\n            if (nextMeasuredData === undefined) {\r\n                return {\r\n                    renderedData: dataToMeasure,\r\n                    resizeDirection: undefined,\r\n                    dataToMeasure: undefined\r\n                };\r\n            }\r\n            measuredWidth = _measurementCache.getCachedMeasurement(nextMeasuredData);\r\n            // If the measurement isn't in the cache, we need to rerender with some data in a hidden div\r\n            if (measuredWidth === undefined) {\r\n                return {\r\n                    dataToMeasure: nextMeasuredData\r\n                };\r\n            }\r\n            dataToMeasure = nextMeasuredData;\r\n        }\r\n        // Once the loop is done, we should now shrink until the contents fit.\r\n        return tslib_1.__assign({ resizeDirection: 'shrink' }, _shrinkContentsUntilTheyFit(dataToMeasure, onReduceData, getElementToMeasureWidth));\r\n    }\r\n    /**\r\n     * Handles an update to the container width. Should only be called when we knew the previous container width.\r\n     * @param newWidth - The new width of the container.\r\n     * @param fullWidthData - The initial data passed in as a prop to resizeGroup.\r\n     * @param renderedData - The data that was rendered prior to the container size changing.\r\n     * @param onGrowData - Set to true if the Resize group has an onGrowData function.\r\n     */\r\n    function _updateContainerWidth(newWidth, fullWidthData, renderedData, onGrowData) {\r\n        var nextState;\r\n        if (newWidth > _containerWidth) {\r\n            if (onGrowData) {\r\n                nextState = {\r\n                    resizeDirection: 'grow',\r\n                    dataToMeasure: onGrowData(renderedData)\r\n                };\r\n            }\r\n            else {\r\n                nextState = {\r\n                    resizeDirection: 'shrink',\r\n                    dataToMeasure: fullWidthData\r\n                };\r\n            }\r\n        }\r\n        else {\r\n            nextState = {\r\n                resizeDirection: 'shrink',\r\n                dataToMeasure: renderedData\r\n            };\r\n        }\r\n        _containerWidth = newWidth;\r\n        return tslib_1.__assign({}, nextState, { measureContainer: false });\r\n    }\r\n    function getNextState(props, currentState, getElementToMeasureWidth, newContainerWidth) {\r\n        // If there is no new container width or data to measure, there is no need for a new state update\r\n        if (newContainerWidth === undefined && currentState.dataToMeasure === undefined) {\r\n            return undefined;\r\n        }\r\n        if (newContainerWidth) {\r\n            // If we know what the last container size was and we rendered data at that width, we can do an optimized render\r\n            if (_containerWidth && currentState.renderedData && !currentState.dataToMeasure) {\r\n                return tslib_1.__assign({}, currentState, _updateContainerWidth(newContainerWidth, props.data, currentState.renderedData, props.onGrowData));\r\n            }\r\n            // If we are just setting the container width for the first time, we can't do any optimizations\r\n            _containerWidth = newContainerWidth;\r\n        }\r\n        var nextState = tslib_1.__assign({}, currentState, { measureContainer: false });\r\n        if (currentState.dataToMeasure) {\r\n            if (currentState.resizeDirection === 'grow' && props.onGrowData) {\r\n                nextState = tslib_1.__assign({}, nextState, _growDataUntilItDoesNotFit(currentState.dataToMeasure, props.onGrowData, getElementToMeasureWidth, props.onReduceData));\r\n            }\r\n            else {\r\n                nextState = tslib_1.__assign({}, nextState, _shrinkContentsUntilTheyFit(currentState.dataToMeasure, props.onReduceData, getElementToMeasureWidth));\r\n            }\r\n        }\r\n        return nextState;\r\n    }\r\n    /** Function that determines if we need to render content for measurement based on the measurement cache contents. */\r\n    function shouldRenderDataForMeasurement(dataToMeasure) {\r\n        if (!dataToMeasure || _measurementCache.getCachedMeasurement(dataToMeasure) !== undefined) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    function getInitialResizeGroupState(data) {\r\n        return {\r\n            dataToMeasure: tslib_1.__assign({}, data),\r\n            resizeDirection: 'grow',\r\n            measureContainer: true\r\n        };\r\n    }\r\n    return {\r\n        getNextState: getNextState,\r\n        shouldRenderDataForMeasurement: shouldRenderDataForMeasurement,\r\n        getInitialResizeGroupState: getInitialResizeGroupState\r\n    };\r\n};\r\n// Provides a context property that (if true) tells any child components that\r\n// they are only being used for measurement purposes and will not be visible.\r\nvar MeasuredContext = provideContext({\r\n    isMeasured: PropTypes.bool\r\n}, function () {\r\n    return { isMeasured: true };\r\n});\r\n// Styles for the hidden div used for measurement\r\nvar hiddenDivStyles = { position: 'fixed', visibility: 'hidden' };\r\nvar hiddenParentStyles = { position: 'relative' };\r\nvar ResizeGroupBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ResizeGroupBase, _super);\r\n    function ResizeGroupBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._nextResizeGroupStateProvider = getNextResizeGroupStateProvider();\r\n        // The root div which is the container inside of which we are trying to fit content.\r\n        _this._root = React.createRef();\r\n        // A div that can be used for the initial measurement so that we can avoid mounting a second instance\r\n        // of the component being measured for the initial render.\r\n        _this._initialHiddenDiv = React.createRef();\r\n        // A hidden div that is used for mounting a new instance of the component for measurement in a hidden\r\n        // div without unmounting the currently visible content.\r\n        _this._updateHiddenDiv = React.createRef();\r\n        // Tracks if any content has been rendered to the user. This enables us to do some performance optimizations\r\n        // for the initial render.\r\n        _this._hasRenderedContent = false;\r\n        _this.state = _this._nextResizeGroupStateProvider.getInitialResizeGroupState(_this.props.data);\r\n        _this._warnDeprecations({\r\n            styles: 'className'\r\n        });\r\n        return _this;\r\n    }\r\n    ResizeGroupBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, onRenderData = _a.onRenderData;\r\n        var _b = this.state, dataToMeasure = _b.dataToMeasure, renderedData = _b.renderedData;\r\n        var divProps = getNativeProps(this.props, divProperties, ['data']);\r\n        var dataNeedsMeasuring = this._nextResizeGroupStateProvider.shouldRenderDataForMeasurement(dataToMeasure);\r\n        var isInitialMeasure = !this._hasRenderedContent && dataNeedsMeasuring;\r\n        // We only ever render the final content to the user. All measurements are done in a hidden div.\r\n        // For the initial render, we want this to be as fast as possible, so we need to make sure that we only mount one version of the\r\n        // component for measurement and the final render. For renders that update what is on screen, we want to make sure that\r\n        // there are no jarring effects such as the screen flashing as we apply scaling steps for meassurement. In the update case,\r\n        // we mount a second version of the component just for measurement purposes and leave the rendered content untouched until we know the\r\n        // next state sto show to the user.\r\n        return (React.createElement(\"div\", tslib_1.__assign({}, divProps, { className: className, ref: this._root }),\r\n            React.createElement(\"div\", { style: hiddenParentStyles },\r\n                dataNeedsMeasuring && !isInitialMeasure && (React.createElement(\"div\", { style: hiddenDivStyles, ref: this._updateHiddenDiv },\r\n                    React.createElement(MeasuredContext, null, onRenderData(dataToMeasure)))),\r\n                React.createElement(\"div\", { ref: this._initialHiddenDiv, style: isInitialMeasure ? hiddenDivStyles : undefined, \"data-automation-id\": \"visibleContent\" }, isInitialMeasure ? onRenderData(dataToMeasure) : renderedData && onRenderData(renderedData)))));\r\n    };\r\n    ResizeGroupBase.prototype.componentDidMount = function () {\r\n        this._afterComponentRendered();\r\n        this._events.on(window, 'resize', this._async.debounce(this._onResize, RESIZE_DELAY, { leading: true }));\r\n    };\r\n    ResizeGroupBase.prototype.componentWillReceiveProps = function (nextProps) {\r\n        this.setState({\r\n            dataToMeasure: tslib_1.__assign({}, nextProps.data),\r\n            resizeDirection: 'grow',\r\n            measureContainer: true // Receiving new props means the parent might rerender and the root width might change\r\n        });\r\n    };\r\n    ResizeGroupBase.prototype.componentDidUpdate = function (prevProps) {\r\n        if (this.state.renderedData) {\r\n            this._hasRenderedContent = true;\r\n            if (this.props.dataDidRender) {\r\n                this.props.dataDidRender(this.state.renderedData);\r\n            }\r\n        }\r\n        this._afterComponentRendered();\r\n    };\r\n    ResizeGroupBase.prototype.remeasure = function () {\r\n        if (this._root.current) {\r\n            this.setState({ measureContainer: true });\r\n        }\r\n    };\r\n    ResizeGroupBase.prototype._afterComponentRendered = function () {\r\n        var _this = this;\r\n        this._async.requestAnimationFrame(function () {\r\n            var containerWidth = undefined;\r\n            if (_this.state.measureContainer && _this._root.current) {\r\n                containerWidth = _this._root.current.getBoundingClientRect().width;\r\n            }\r\n            var nextState = _this._nextResizeGroupStateProvider.getNextState(_this.props, _this.state, function () {\r\n                var refToMeasure = !_this._hasRenderedContent ? _this._initialHiddenDiv : _this._updateHiddenDiv;\r\n                return refToMeasure.current ? refToMeasure.current.scrollWidth : 0;\r\n            }, containerWidth);\r\n            if (nextState) {\r\n                _this.setState(nextState);\r\n            }\r\n        });\r\n    };\r\n    ResizeGroupBase.prototype._onResize = function () {\r\n        if (this._root.current) {\r\n            this.setState({ measureContainer: true });\r\n        }\r\n    };\r\n    return ResizeGroupBase;\r\n}(BaseComponent));\r\nexport { ResizeGroupBase };\r\n//# sourceMappingURL=ResizeGroup.base.js.map","import { ResizeGroupBase } from './ResizeGroup.base';\r\nexport var ResizeGroup = ResizeGroupBase;\r\n//# sourceMappingURL=ResizeGroup.js.map","import { concatStyleSets, getFocusStyle, HighContrastSelector } from '../../../Styling';\r\nimport { memoizeFunction } from '../../../Utilities';\r\nimport { getStyles as getBaseButtonStyles } from '../BaseButton.styles';\r\nimport { getStyles as getSplitButtonStyles } from '../SplitButton/SplitButton.styles';\r\nexport var getStyles = memoizeFunction(function (theme, customStyles, focusInset, focusColor) {\r\n    var baseButtonStyles = getBaseButtonStyles(theme);\r\n    var baseSplitButtonStyles = getSplitButtonStyles(theme);\r\n    var commandButtonHighContrastFocus = {\r\n        left: 4,\r\n        top: 4,\r\n        bottom: 4,\r\n        right: 4,\r\n        border: 'none'\r\n    };\r\n    var commandButtonStyles = {\r\n        root: [\r\n            getFocusStyle(theme, -1, 'relative', commandButtonHighContrastFocus),\r\n            theme.fonts.medium,\r\n            {\r\n                minWidth: '40px',\r\n                backgroundColor: theme.palette.neutralLighter,\r\n                color: theme.palette.neutralPrimary,\r\n                padding: '0 4px',\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        border: 'none'\r\n                    },\r\n                    _a)\r\n            }\r\n        ],\r\n        rootHovered: {\r\n            backgroundColor: theme.palette.neutralLight,\r\n            color: theme.palette.neutralDark,\r\n            selectors: (_b = {},\r\n                _b[HighContrastSelector] = {\r\n                    color: 'Highlight'\r\n                },\r\n                _b)\r\n        },\r\n        rootPressed: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootChecked: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootExpanded: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black\r\n        },\r\n        rootCheckedHovered: {\r\n            backgroundColor: theme.palette.neutralQuaternary,\r\n            color: theme.palette.black\r\n        },\r\n        // Split button styles\r\n        splitButtonContainer: {\r\n            selectors: (_c = {},\r\n                _c[HighContrastSelector] = {\r\n                    border: 'none'\r\n                },\r\n                _c)\r\n        },\r\n        splitButtonDivider: {\r\n            backgroundColor: theme.palette.neutralTertiaryAlt,\r\n            marginTop: 4,\r\n            marginBottom: 4\r\n        },\r\n        splitButtonMenuButton: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            color: theme.palette.neutralPrimary,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLight,\r\n                    color: theme.palette.neutralDark,\r\n                    selectors: (_d = {},\r\n                        _d[HighContrastSelector] = {\r\n                            color: 'Highlight'\r\n                        },\r\n                        _d)\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonDisabled: {\r\n            backgroundColor: theme.palette.neutralLighter,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralLighter\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonChecked: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralQuaternaryAlt\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuButtonExpanded: {\r\n            backgroundColor: theme.palette.neutralQuaternaryAlt,\r\n            color: theme.palette.black,\r\n            selectors: {\r\n                ':hover': {\r\n                    backgroundColor: theme.palette.neutralQuaternaryAlt\r\n                }\r\n            }\r\n        },\r\n        splitButtonMenuIcon: {\r\n            color: theme.palette.neutralPrimary\r\n        },\r\n        splitButtonMenuIconDisabled: {\r\n            color: theme.palette.neutralTertiary\r\n        },\r\n        label: {\r\n            fontWeight: 'normal' // theme.fontWeights.semibold,\r\n        },\r\n        icon: {\r\n            color: theme.palette.themeDarkAlt\r\n        },\r\n        menuIcon: {\r\n            color: theme.palette.neutralSecondary\r\n        }\r\n    };\r\n    return concatStyleSets(baseButtonStyles, commandButtonStyles, baseSplitButtonStyles, customStyles);\r\n    var _a, _b, _c, _d;\r\n});\r\n//# sourceMappingURL=CommandBarButton.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseButton } from '../BaseButton';\r\nimport { BaseComponent, customizable, nullRender } from '../../../Utilities';\r\nimport { getStyles } from './CommandBarButton.styles';\r\nvar CommandBarButton = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CommandBarButton, _super);\r\n    function CommandBarButton() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        /**\r\n         * Tell BaseComponent to bypass resolution of componentRef.\r\n         */\r\n        _this._skipComponentRefResolution = true;\r\n        return _this;\r\n    }\r\n    CommandBarButton.prototype.render = function () {\r\n        var _a = this.props, styles = _a.styles, theme = _a.theme;\r\n        return (React.createElement(BaseButton, tslib_1.__assign({}, this.props, { variantClassName: \"ms-Button--commandBar\", styles: getStyles(theme, styles), onRenderDescription: nullRender })));\r\n    };\r\n    CommandBarButton = tslib_1.__decorate([\r\n        customizable('CommandBarButton', ['theme', 'styles'], true)\r\n    ], CommandBarButton);\r\n    return CommandBarButton;\r\n}(BaseComponent));\r\nexport { CommandBarButton };\r\n//# sourceMappingURL=CommandBarButton.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, css, nullRender } from '../../Utilities';\r\nimport { OverflowSet } from '../../OverflowSet';\r\nimport { ResizeGroup } from '../../ResizeGroup';\r\nimport { FocusZone, FocusZoneDirection } from '../../FocusZone';\r\nimport { classNamesFunction } from '../../Utilities';\r\nimport { CommandBarButton } from '../../Button';\r\nimport { TooltipHost } from '../../Tooltip';\r\nvar getClassNames = classNamesFunction();\r\nvar CommandBarBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(CommandBarBase, _super);\r\n    function CommandBarBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._overflowSet = React.createRef();\r\n        _this._resizeGroup = React.createRef();\r\n        _this._onRenderData = function (data) {\r\n            return (React.createElement(FocusZone, { className: css(_this._classNames.root), direction: FocusZoneDirection.horizontal, role: 'menubar', \"aria-label\": _this.props.ariaLabel },\r\n                React.createElement(OverflowSet, { componentRef: _this._resolveRef('_overflowSet'), className: css(_this._classNames.primarySet), doNotContainWithinFocusZone: true, role: 'presentation', items: data.primaryItems, overflowItems: data.overflowItems.length ? data.overflowItems : undefined, onRenderItem: _this._onRenderItem, onRenderOverflowButton: _this._onRenderOverflowButton }),\r\n                data.farItems && (React.createElement(OverflowSet, { className: css(_this._classNames.secondarySet), doNotContainWithinFocusZone: true, role: 'presentation', items: data.farItems, onRenderItem: _this._onRenderItem, onRenderOverflowButton: nullRender }))));\r\n        };\r\n        _this._onRenderItem = function (item) {\r\n            var CommandButtonType = _this.props.buttonAs || item.commandBarButtonAs || CommandBarButton;\r\n            var itemText = item.text || item.name;\r\n            if (item.onRender) {\r\n                // These are the top level items, there is no relevant menu dismissing function to\r\n                // provide for the IContextualMenuItem onRender function. Pass in a no op function instead.\r\n                return item.onRender(item, function () { return undefined; });\r\n            }\r\n            var commandButtonProps = tslib_1.__assign({ allowDisabledFocus: true, role: 'menuitem' }, item, { styles: tslib_1.__assign({ root: { height: '100%' }, label: { whiteSpace: 'nowrap' } }, item.buttonStyles), className: css('ms-CommandBarItem-link', item.className), text: !item.iconOnly ? itemText : undefined, menuProps: item.subMenuProps, onClick: _this._onButtonClick(item) });\r\n            if (item.iconOnly && itemText !== undefined) {\r\n                return (React.createElement(TooltipHost, tslib_1.__assign({ content: itemText }, item.tooltipHostProps),\r\n                    React.createElement(CommandButtonType, tslib_1.__assign({}, commandButtonProps, { defaultRender: CommandBarButton }))));\r\n            }\r\n            return React.createElement(CommandButtonType, tslib_1.__assign({}, commandButtonProps, { defaultRender: CommandBarButton }));\r\n        };\r\n        _this._onRenderOverflowButton = function (overflowItems) {\r\n            var _a = _this.props, _b = _a.overflowButtonAs, OverflowButtonType = _b === void 0 ? CommandBarButton : _b, _c = _a.overflowButtonProps // assure that props is not empty\r\n            , overflowButtonProps = _c === void 0 ? {} : _c // assure that props is not empty\r\n            ;\r\n            var combinedOverflowItems = (overflowButtonProps.menuProps ? overflowButtonProps.menuProps.items : []).concat(overflowItems);\r\n            var overflowProps = tslib_1.__assign({}, overflowButtonProps, { styles: tslib_1.__assign({ menuIcon: { fontSize: '17px' } }, overflowButtonProps.styles), className: css('ms-CommandBar-overflowButton', overflowButtonProps.className), menuProps: tslib_1.__assign({}, overflowButtonProps.menuProps, { items: combinedOverflowItems }), menuIconProps: tslib_1.__assign({ iconName: 'More' }, overflowButtonProps.menuIconProps) });\r\n            return React.createElement(OverflowButtonType, tslib_1.__assign({}, overflowProps));\r\n        };\r\n        _this._onReduceData = function (data) {\r\n            var _a = _this.props, shiftOnReduce = _a.shiftOnReduce, onDataReduced = _a.onDataReduced;\r\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\r\n            // Use first item if shiftOnReduce, otherwise use last item\r\n            var movedItem = primaryItems[shiftOnReduce ? 0 : primaryItems.length - 1];\r\n            if (movedItem !== undefined) {\r\n                movedItem.renderedInOverflow = true;\r\n                overflowItems = [movedItem].concat(overflowItems);\r\n                primaryItems = shiftOnReduce ? primaryItems.slice(1) : primaryItems.slice(0, -1);\r\n                var newData = tslib_1.__assign({}, data, { primaryItems: primaryItems, overflowItems: overflowItems });\r\n                cacheKey = _this._computeCacheKey(newData);\r\n                if (onDataReduced) {\r\n                    onDataReduced(movedItem);\r\n                }\r\n                newData.cacheKey = cacheKey;\r\n                return newData;\r\n            }\r\n            return undefined;\r\n        };\r\n        _this._onGrowData = function (data) {\r\n            var _a = _this.props, shiftOnReduce = _a.shiftOnReduce, onDataGrown = _a.onDataGrown;\r\n            var minimumOverflowItems = data.minimumOverflowItems;\r\n            var primaryItems = data.primaryItems, overflowItems = data.overflowItems, cacheKey = data.cacheKey;\r\n            var movedItem = overflowItems[0];\r\n            // Make sure that moved item exists and is not one of the original overflow items\r\n            if (movedItem !== undefined && overflowItems.length > minimumOverflowItems) {\r\n                movedItem.renderedInOverflow = false;\r\n                overflowItems = overflowItems.slice(1);\r\n                // if shiftOnReduce, movedItem goes first, otherwise, last.\r\n                primaryItems = shiftOnReduce ? [movedItem].concat(primaryItems) : primaryItems.concat([movedItem]);\r\n                var newData = tslib_1.__assign({}, data, { primaryItems: primaryItems, overflowItems: overflowItems });\r\n                cacheKey = _this._computeCacheKey(newData);\r\n                if (onDataGrown) {\r\n                    onDataGrown(movedItem);\r\n                }\r\n                newData.cacheKey = cacheKey;\r\n                return newData;\r\n            }\r\n            return undefined;\r\n        };\r\n        return _this;\r\n    }\r\n    CommandBarBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, items = _a.items, overflowItems = _a.overflowItems, farItems = _a.farItems, styles = _a.styles, theme = _a.theme, _b = _a.onReduceData, onReduceData = _b === void 0 ? this._onReduceData : _b, _c = _a.onGrowData, onGrowData = _c === void 0 ? this._onGrowData : _c;\r\n        var commandBarData = {\r\n            primaryItems: items.slice(),\r\n            overflowItems: overflowItems.slice(),\r\n            minimumOverflowItems: overflowItems.slice().length,\r\n            farItems: farItems,\r\n            cacheKey: ''\r\n        };\r\n        this._classNames = getClassNames(styles, { theme: theme });\r\n        return (React.createElement(ResizeGroup, { componentRef: this._resizeGroup, className: className, data: commandBarData, onReduceData: onReduceData, onGrowData: onGrowData, onRenderData: this._onRenderData }));\r\n    };\r\n    CommandBarBase.prototype.focus = function () {\r\n        var overflowSet = this._overflowSet.current;\r\n        overflowSet && overflowSet.focus();\r\n    };\r\n    CommandBarBase.prototype.remeasure = function () {\r\n        this._resizeGroup.current && this._resizeGroup.current.remeasure();\r\n    };\r\n    CommandBarBase.prototype._onButtonClick = function (item) {\r\n        return function (ev) {\r\n            // inactive is deprecated. remove check in 7.0\r\n            if (item.inactive) {\r\n                return;\r\n            }\r\n            if (item.onClick) {\r\n                item.onClick(ev, item);\r\n            }\r\n        };\r\n    };\r\n    CommandBarBase.prototype._computeCacheKey = function (data) {\r\n        var primaryItems = data.primaryItems, _a = data.farItems, farItems = _a === void 0 ? [] : _a, overflowItems = data.overflowItems;\r\n        var returnKey = function (acc, current) {\r\n            var _a = current.cacheKey, cacheKey = _a === void 0 ? current.key : _a;\r\n            return acc + cacheKey;\r\n        };\r\n        var primaryKey = primaryItems.reduce(returnKey, '');\r\n        var farKey = farItems.reduce(returnKey, '');\r\n        var overflowKey = !!overflowItems.length ? 'overflow' : '';\r\n        return [primaryKey, farKey, overflowKey].join(' ');\r\n    };\r\n    CommandBarBase.defaultProps = {\r\n        items: [],\r\n        overflowItems: []\r\n    };\r\n    return CommandBarBase;\r\n}(BaseComponent));\r\nexport { CommandBarBase };\r\n//# sourceMappingURL=CommandBar.base.js.map","import { styled } from '../../Utilities';\r\nimport { CommandBarBase } from './CommandBar.base';\r\nimport { getStyles } from './CommandBar.styles';\r\n// Create a CommandBar variant which uses these default styles and this styled subcomponent.\r\nexport var CommandBar = styled(CommandBarBase, getStyles, undefined, {\r\n    scope: 'CommandBar'\r\n});\r\n//# sourceMappingURL=CommandBar.js.map","export var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme;\r\n    var palette = theme.palette;\r\n    return {\r\n        root: [\r\n            theme.fonts.medium,\r\n            'ms-CommandBar',\r\n            {\r\n                display: 'flex',\r\n                backgroundColor: palette.neutralLighter,\r\n                padding: '0 16px',\r\n                height: '40px'\r\n            },\r\n            className\r\n        ],\r\n        primarySet: [\r\n            'ms-CommandBar-primaryCommand',\r\n            {\r\n                flexGrow: '1',\r\n                display: 'flex',\r\n                alignItems: 'stretch'\r\n            }\r\n        ],\r\n        secondarySet: [\r\n            'ms-CommandBar-secondaryCommand',\r\n            {\r\n                flexShrink: '0',\r\n                display: 'flex',\r\n                alignItems: 'stretch'\r\n            }\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=CommandBar.styles.js.map","export var TooltipOverflowMode;\r\n(function (TooltipOverflowMode) {\r\n    /** Only show tooltip if parent DOM element is overflowing */\r\n    TooltipOverflowMode[TooltipOverflowMode[\"Parent\"] = 0] = \"Parent\";\r\n    /** Only show tooltip if tooltip host's content is overflowing */\r\n    TooltipOverflowMode[TooltipOverflowMode[\"Self\"] = 1] = \"Self\";\r\n})(TooltipOverflowMode || (TooltipOverflowMode = {}));\r\n//# sourceMappingURL=TooltipHost.types.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, divProperties, getNativeProps } from '../../Utilities';\r\nimport { TooltipDelay } from './Tooltip.types';\r\nimport { Callout } from '../../Callout';\r\nimport { DirectionalHint } from '../../common/DirectionalHint';\r\nvar getClassNames = classNamesFunction();\r\nvar TooltipBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TooltipBase, _super);\r\n    function TooltipBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._onRenderContent = function (props) {\r\n            return React.createElement(\"p\", { className: _this._classNames.subText }, props.content);\r\n        };\r\n        return _this;\r\n    }\r\n    TooltipBase.prototype.render = function () {\r\n        var _a = this.props, className = _a.className, calloutProps = _a.calloutProps, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, styles = _a.styles, id = _a.id, maxWidth = _a.maxWidth, _b = _a.onRenderContent, onRenderContent = _b === void 0 ? this._onRenderContent : _b, targetElement = _a.targetElement, theme = _a.theme;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className || (calloutProps && calloutProps.className),\r\n            delay: delay,\r\n            maxWidth: maxWidth\r\n        });\r\n        return (React.createElement(Callout, tslib_1.__assign({ target: targetElement, directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL }, calloutProps, getNativeProps(this.props, divProperties, ['id']), { className: this._classNames.root }),\r\n            React.createElement(\"div\", { className: this._classNames.content, id: id, role: \"tooltip\", onMouseEnter: this.props.onMouseEnter, onMouseLeave: this.props.onMouseLeave }, onRenderContent(this.props, this._onRenderContent))));\r\n    };\r\n    // Specify default props values\r\n    TooltipBase.defaultProps = {\r\n        directionalHint: DirectionalHint.topCenter,\r\n        delay: TooltipDelay.medium,\r\n        maxWidth: '364px',\r\n        calloutProps: {\r\n            isBeakVisible: true,\r\n            beakWidth: 16,\r\n            gapSpace: 0,\r\n            setInitialFocus: true,\r\n            doNotLayer: false\r\n        }\r\n    };\r\n    return TooltipBase;\r\n}(BaseComponent));\r\nexport { TooltipBase };\r\n//# sourceMappingURL=Tooltip.base.js.map","import { styled } from '../../Utilities';\r\nimport { TooltipBase } from './Tooltip.base';\r\nimport { getStyles } from './Tooltip.styles';\r\nexport var Tooltip = styled(TooltipBase, getStyles, undefined, {\r\n    scope: 'Tooltip'\r\n});\r\n//# sourceMappingURL=Tooltip.js.map","import { TooltipDelay } from './Tooltip.types';\r\nimport { AnimationClassNames } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var className = props.className, delay = props.delay, maxWidth = props.maxWidth, theme = props.theme;\r\n    var palette = theme.palette, fonts = theme.fonts;\r\n    return {\r\n        root: [\r\n            'ms-Tooltip',\r\n            theme.fonts.medium,\r\n            AnimationClassNames.fadeIn200,\r\n            {\r\n                background: palette.white,\r\n                padding: '8px',\r\n                animationDelay: '300ms',\r\n                maxWidth: maxWidth\r\n            },\r\n            delay === TooltipDelay.zero && {\r\n                animationDelay: '0s'\r\n            },\r\n            delay === TooltipDelay.long && {\r\n                animationDelay: '500ms'\r\n            },\r\n            className\r\n        ],\r\n        content: [\r\n            'ms-Tooltip-content',\r\n            fonts.small,\r\n            palette.neutralPrimary,\r\n            {\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word',\r\n                overflow: 'hidden'\r\n            }\r\n        ],\r\n        subText: [\r\n            'ms-Tooltip-subtext',\r\n            {\r\n                margin: 0\r\n            }\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=Tooltip.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, divProperties, getNativeProps, getId, assign, hasOverflow, portalContainsElement, classNamesFunction } from '../../Utilities';\r\nimport { TooltipOverflowMode } from './TooltipHost.types';\r\nimport { Tooltip } from './Tooltip';\r\nimport { TooltipDelay } from './Tooltip.types';\r\nvar getClassNames = classNamesFunction();\r\nvar TooltipHostBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TooltipHostBase, _super);\r\n    // Constructor\r\n    function TooltipHostBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // The wrapping div that gets the hover events\r\n        _this._tooltipHost = React.createRef();\r\n        // The ID of the setTimeout that will eventually close the tooltip if the\r\n        // the tooltip isn't hovered over.\r\n        _this._closingTimer = -1;\r\n        _this.show = function () {\r\n            _this._toggleTooltip(true);\r\n        };\r\n        _this.dismiss = function () {\r\n            _this._hideTooltip();\r\n        };\r\n        // Show Tooltip\r\n        _this._onTooltipMouseEnter = function (ev) {\r\n            var overflowMode = _this.props.overflowMode;\r\n            if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip !== _this) {\r\n                TooltipHostBase._currentVisibleTooltip.dismiss();\r\n            }\r\n            TooltipHostBase._currentVisibleTooltip = _this;\r\n            if (overflowMode !== undefined) {\r\n                var overflowElement = _this._getTargetElement();\r\n                if (overflowElement && !hasOverflow(overflowElement)) {\r\n                    return;\r\n                }\r\n            }\r\n            if (ev.target && portalContainsElement(ev.target, _this._getTargetElement())) {\r\n                // Do not show tooltip when target is inside a portal relative to TooltipHost.\r\n                return;\r\n            }\r\n            _this._toggleTooltip(true);\r\n            _this._clearDismissTimer();\r\n        };\r\n        // Hide Tooltip\r\n        _this._onTooltipMouseLeave = function (ev) {\r\n            if (_this.props.closeDelay) {\r\n                _this._clearDismissTimer();\r\n                _this._closingTimer = _this._async.setTimeout(function () {\r\n                    _this._toggleTooltip(false);\r\n                }, _this.props.closeDelay);\r\n            }\r\n            else {\r\n                _this._toggleTooltip(false);\r\n            }\r\n            if (TooltipHostBase._currentVisibleTooltip === _this) {\r\n                TooltipHostBase._currentVisibleTooltip = undefined;\r\n            }\r\n        };\r\n        _this._clearDismissTimer = function () {\r\n            _this._async.clearTimeout(_this._closingTimer);\r\n        };\r\n        // Hide Tooltip\r\n        _this._hideTooltip = function () {\r\n            _this._toggleTooltip(false);\r\n        };\r\n        _this.state = {\r\n            isTooltipVisible: false\r\n        };\r\n        return _this;\r\n    }\r\n    // Render\r\n    TooltipHostBase.prototype.render = function () {\r\n        var _a = this.props, calloutProps = _a.calloutProps, children = _a.children, content = _a.content, delay = _a.delay, directionalHint = _a.directionalHint, directionalHintForRTL = _a.directionalHintForRTL, className = _a.hostClassName, id = _a.id, _b = _a.setAriaDescribedBy, setAriaDescribedBy = _b === void 0 ? true : _b, tooltipProps = _a.tooltipProps, styles = _a.styles, theme = _a.theme;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className\r\n        });\r\n        var isTooltipVisible = this.state.isTooltipVisible;\r\n        var tooltipId = id || getId('tooltip');\r\n        var isContentPresent = !!(content || (tooltipProps && tooltipProps.onRenderContent && tooltipProps.onRenderContent()));\r\n        var showTooltip = isTooltipVisible && isContentPresent;\r\n        var ariaDescribedBy = setAriaDescribedBy && isTooltipVisible && isContentPresent ? tooltipId : undefined;\r\n        return (React.createElement(\"div\", tslib_1.__assign({ className: this._classNames.root, ref: this._tooltipHost }, { onFocusCapture: this._onTooltipMouseEnter }, { onBlurCapture: this._hideTooltip }, { onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave, \"aria-describedby\": ariaDescribedBy }),\r\n            children,\r\n            showTooltip && (React.createElement(Tooltip, tslib_1.__assign({ id: tooltipId, delay: delay, content: content, targetElement: this._getTargetElement(), directionalHint: directionalHint, directionalHintForRTL: directionalHintForRTL, calloutProps: assign({}, calloutProps, {\r\n                    onMouseEnter: this._onTooltipMouseEnter,\r\n                    onMouseLeave: this._onTooltipMouseLeave\r\n                }), onMouseEnter: this._onTooltipMouseEnter, onMouseLeave: this._onTooltipMouseLeave }, getNativeProps(this.props, divProperties), tooltipProps)))));\r\n    };\r\n    TooltipHostBase.prototype.componentWillUnmount = function () {\r\n        if (TooltipHostBase._currentVisibleTooltip && TooltipHostBase._currentVisibleTooltip === this) {\r\n            TooltipHostBase._currentVisibleTooltip = undefined;\r\n        }\r\n    };\r\n    TooltipHostBase.prototype._getTargetElement = function () {\r\n        if (!this._tooltipHost.current) {\r\n            return undefined;\r\n        }\r\n        var overflowMode = this.props.overflowMode;\r\n        // Select target element based on overflow mode. For parent mode, you want to position the tooltip relative\r\n        // to the parent element, otherwise it might look off.\r\n        if (overflowMode !== undefined) {\r\n            switch (overflowMode) {\r\n                case TooltipOverflowMode.Parent:\r\n                    return this._tooltipHost.current.parentElement;\r\n                case TooltipOverflowMode.Self:\r\n                    return this._tooltipHost.current;\r\n            }\r\n        }\r\n        return this._tooltipHost.current;\r\n    };\r\n    TooltipHostBase.prototype._toggleTooltip = function (isTooltipVisible) {\r\n        var _this = this;\r\n        if (this.state.isTooltipVisible !== isTooltipVisible) {\r\n            this.setState({ isTooltipVisible: isTooltipVisible }, function () { return _this.props.onTooltipToggle && _this.props.onTooltipToggle(_this.state.isTooltipVisible); });\r\n        }\r\n    };\r\n    TooltipHostBase.defaultProps = {\r\n        delay: TooltipDelay.medium\r\n    };\r\n    return TooltipHostBase;\r\n}(BaseComponent));\r\nexport { TooltipHostBase };\r\n//# sourceMappingURL=TooltipHost.base.js.map","import { getGlobalClassNames } from '../../Styling';\r\nvar GlobalClassNames = {\r\n    root: 'ms-TooltipHost'\r\n};\r\nexport var getStyles = function (props) {\r\n    var className = props.className, theme = props.theme;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            {\r\n                display: 'inline'\r\n            },\r\n            className\r\n        ]\r\n    };\r\n};\r\n//# sourceMappingURL=TooltipHost.styles.js.map","import { styled } from '../../Utilities';\r\nimport { TooltipHostBase } from './TooltipHost.base';\r\nimport { getStyles } from './TooltipHost.styles';\r\nexport var TooltipHost = styled(TooltipHostBase, getStyles, undefined, {\r\n    scope: 'TooltipHost'\r\n});\r\n//# sourceMappingURL=TooltipHost.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { Label } from '../../Label';\r\nimport { Icon } from '../../Icon';\r\nimport { DelayedRender, BaseComponent, getId, getNativeProps, inputProperties, textAreaProperties, createRef, classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar DEFAULT_STATE_VALUE = '';\r\nvar TextFieldBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(TextFieldBase, _super);\r\n    function TextFieldBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._textElement = createRef();\r\n        _this._onFocus = function (ev) {\r\n            if (_this.props.onFocus) {\r\n                _this.props.onFocus(ev);\r\n            }\r\n            _this.setState({ isFocused: true });\r\n            if (_this.props.validateOnFocusIn) {\r\n                _this._validate(_this.state.value);\r\n            }\r\n        };\r\n        _this._onBlur = function (ev) {\r\n            if (_this.props.onBlur) {\r\n                _this.props.onBlur(ev);\r\n            }\r\n            _this.setState({ isFocused: false });\r\n            if (_this.props.validateOnFocusOut) {\r\n                _this._validate(_this.state.value);\r\n            }\r\n        };\r\n        _this._onRenderLabel = function (props) {\r\n            var label = props.label, required = props.required;\r\n            // IProcessedStyleSet definition requires casting for what Label expects as its styles prop\r\n            var labelStyles = _this._classNames.subComponentStyles\r\n                ? _this._classNames.subComponentStyles.label\r\n                : undefined;\r\n            if (label) {\r\n                return (React.createElement(Label, { required: required, htmlFor: _this._id, styles: labelStyles, disabled: props.disabled }, props.label));\r\n            }\r\n            return null;\r\n        };\r\n        _this._onRenderDescription = function (props) {\r\n            if (props.description) {\r\n                return React.createElement(\"span\", { className: _this._classNames.description }, props.description);\r\n            }\r\n            return null;\r\n        };\r\n        _this._onInputChange = function (event) {\r\n            event.persist();\r\n            var element = event.target;\r\n            var value = element.value;\r\n            // Avoid doing unnecessary work when the value has not changed.\r\n            if (value === _this._latestValue) {\r\n                return;\r\n            }\r\n            _this._latestValue = value;\r\n            _this.setState({ value: value }, function () {\r\n                _this._adjustInputHeight();\r\n                if (_this.props.onChange) {\r\n                    _this.props.onChange(event, value);\r\n                }\r\n                if (_this.props.onChanged) {\r\n                    _this.props.onChanged(value);\r\n                }\r\n            });\r\n            var _a = _this.props, validateOnFocusIn = _a.validateOnFocusIn, validateOnFocusOut = _a.validateOnFocusOut;\r\n            if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n                _this._delayedValidate(value);\r\n            }\r\n            if (_this.props.onBeforeChange) {\r\n                _this.props.onBeforeChange(value);\r\n            }\r\n        };\r\n        _this._warnDeprecations({\r\n            iconClass: 'iconProps',\r\n            addonString: 'prefix',\r\n            onRenderAddon: 'onRenderPrefix',\r\n            onChanged: 'onChange'\r\n        });\r\n        _this._warnMutuallyExclusive({\r\n            value: 'defaultValue'\r\n        });\r\n        _this._id = props.id || getId('TextField');\r\n        _this._descriptionId = getId('TextFieldDescription');\r\n        if (props.value !== undefined) {\r\n            _this._latestValue = props.value;\r\n        }\r\n        else if (props.defaultValue !== undefined) {\r\n            _this._latestValue = props.defaultValue;\r\n        }\r\n        else {\r\n            _this._latestValue = DEFAULT_STATE_VALUE;\r\n        }\r\n        _this.state = {\r\n            value: _this._latestValue,\r\n            isFocused: false,\r\n            errorMessage: ''\r\n        };\r\n        _this._delayedValidate = _this._async.debounce(_this._validate, _this.props.deferredValidationTime);\r\n        _this._lastValidation = 0;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(TextFieldBase.prototype, \"value\", {\r\n        /**\r\n         * Gets the current value of the text field.\r\n         */\r\n        get: function () {\r\n            return this.state.value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldBase.prototype.componentDidMount = function () {\r\n        this._isMounted = true;\r\n        this._adjustInputHeight();\r\n        if (this.props.validateOnLoad) {\r\n            this._validate(this.state.value);\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        var onBeforeChange = this.props.onBeforeChange;\r\n        // If old value prop was undefined, then component is controlled and we should\r\n        //    respect new undefined value and update state accordingly.\r\n        if (newProps.value !== this.state.value && (newProps.value !== undefined || this.props.value !== undefined)) {\r\n            if (onBeforeChange) {\r\n                onBeforeChange(newProps.value);\r\n            }\r\n            this._id = newProps.id || this._id;\r\n            this._setValue(newProps.value);\r\n            var validateOnFocusIn = newProps.validateOnFocusIn, validateOnFocusOut = newProps.validateOnFocusOut;\r\n            if (!(validateOnFocusIn || validateOnFocusOut)) {\r\n                this._delayedValidate(newProps.value);\r\n            }\r\n        }\r\n        // If component is not currently controlled and defaultValue changes, set value to new defaultValue.\r\n        if (newProps.defaultValue !== this.props.defaultValue && newProps.value === undefined) {\r\n            this._setValue(newProps.defaultValue);\r\n        }\r\n        // Text field is changing between single- and multi-line. After the change is complete,\r\n        // we'll need to reset focus and selection/cursor.\r\n        if (!!newProps.multiline !== !!this.props.multiline && this.state.isFocused) {\r\n            this._shouldResetFocusAfterRender = true;\r\n            this._selectionBeforeInputTypeChange = [this.selectionStart, this.selectionEnd];\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentDidUpdate = function () {\r\n        if (this._shouldResetFocusAfterRender) {\r\n            // The text field has just changed between single- and multi-line, so we need to reset focus\r\n            // and selection/cursor.\r\n            this._shouldResetFocusAfterRender = false;\r\n            this.focus();\r\n            if (this._selectionBeforeInputTypeChange) {\r\n                var _a = this._selectionBeforeInputTypeChange, start = _a[0], end = _a[1];\r\n                if (start !== null && end !== null) {\r\n                    this.setSelectionRange(start, end);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    TextFieldBase.prototype.componentWillUnmount = function () {\r\n        this._isMounted = false;\r\n    };\r\n    TextFieldBase.prototype.render = function () {\r\n        var _a = this.props, borderless = _a.borderless, className = _a.className, disabled = _a.disabled, iconClass = _a.iconClass, iconProps = _a.iconProps, inputClassName = _a.inputClassName, label = _a.label, multiline = _a.multiline, required = _a.required, underlined = _a.underlined, addonString = _a.addonString, // @deprecated\r\n        prefix = _a.prefix, resizable = _a.resizable, suffix = _a.suffix, theme = _a.theme, styles = _a.styles, autoAdjustHeight = _a.autoAdjustHeight, _b = _a.onRenderAddon, onRenderAddon = _b === void 0 ? this._onRenderAddon : _b, // @deprecated\r\n        _c = _a.onRenderPrefix, // @deprecated\r\n        onRenderPrefix = _c === void 0 ? this._onRenderPrefix : _c, _d = _a.onRenderSuffix, onRenderSuffix = _d === void 0 ? this._onRenderSuffix : _d, _e = _a.onRenderLabel, onRenderLabel = _e === void 0 ? this._onRenderLabel : _e, _f = _a.onRenderDescription, onRenderDescription = _f === void 0 ? this._onRenderDescription : _f;\r\n        var isFocused = this.state.isFocused;\r\n        var errorMessage = this._errorMessage;\r\n        this._classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            focused: isFocused,\r\n            required: required,\r\n            multiline: multiline,\r\n            hasLabel: !!label,\r\n            hasErrorMessage: !!errorMessage,\r\n            borderless: borderless,\r\n            resizable: resizable,\r\n            hasIcon: !!iconProps,\r\n            underlined: underlined,\r\n            iconClass: iconClass,\r\n            inputClassName: inputClassName,\r\n            autoAdjustHeight: autoAdjustHeight\r\n        });\r\n        return (React.createElement(\"div\", { className: this._classNames.root },\r\n            React.createElement(\"div\", { className: this._classNames.wrapper },\r\n                onRenderLabel(this.props, this._onRenderLabel),\r\n                React.createElement(\"div\", { className: this._classNames.fieldGroup },\r\n                    (addonString !== undefined || this.props.onRenderAddon) && (React.createElement(\"div\", { className: this._classNames.prefix }, onRenderAddon(this.props, this._onRenderAddon))),\r\n                    (prefix !== undefined || this.props.onRenderPrefix) && (React.createElement(\"div\", { className: this._classNames.prefix }, onRenderPrefix(this.props, this._onRenderPrefix))),\r\n                    multiline ? this._renderTextArea() : this._renderInput(),\r\n                    (iconClass || iconProps) && React.createElement(Icon, tslib_1.__assign({ className: this._classNames.icon }, iconProps)),\r\n                    (suffix !== undefined || this.props.onRenderSuffix) && (React.createElement(\"div\", { className: this._classNames.suffix }, onRenderSuffix(this.props, this._onRenderSuffix))))),\r\n            this._isDescriptionAvailable && (React.createElement(\"span\", { id: this._descriptionId },\r\n                onRenderDescription(this.props, this._onRenderDescription),\r\n                errorMessage && (React.createElement(\"div\", { role: \"alert\" },\r\n                    React.createElement(DelayedRender, null,\r\n                        React.createElement(\"p\", { className: this._classNames.errorMessage },\r\n                            React.createElement(\"span\", { \"data-automation-id\": \"error-message\" }, errorMessage)))))))));\r\n    };\r\n    /**\r\n     * Sets focus on the text field\r\n     */\r\n    TextFieldBase.prototype.focus = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.focus();\r\n        }\r\n    };\r\n    /**\r\n     * Blurs the text field.\r\n     */\r\n    TextFieldBase.prototype.blur = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.blur();\r\n        }\r\n    };\r\n    /**\r\n     * Selects the text field\r\n     */\r\n    TextFieldBase.prototype.select = function () {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.select();\r\n        }\r\n    };\r\n    /**\r\n     * Sets the selection start of the text field to a specified value\r\n     */\r\n    TextFieldBase.prototype.setSelectionStart = function (value) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.selectionStart = value;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the selection end of the text field to a specified value\r\n     */\r\n    TextFieldBase.prototype.setSelectionEnd = function (value) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.selectionEnd = value;\r\n        }\r\n    };\r\n    Object.defineProperty(TextFieldBase.prototype, \"selectionStart\", {\r\n        /**\r\n         * Gets the selection start of the text field\r\n         */\r\n        get: function () {\r\n            return this._textElement.current ? this._textElement.current.selectionStart : -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldBase.prototype, \"selectionEnd\", {\r\n        /**\r\n         * Gets the selection end of the text field\r\n         */\r\n        get: function () {\r\n            return this._textElement.current ? this._textElement.current.selectionEnd : -1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets the start and end positions of a selection in a text field.\r\n     * @param start - Index of the start of the selection.\r\n     * @param end - Index of the end of the selection.\r\n     */\r\n    TextFieldBase.prototype.setSelectionRange = function (start, end) {\r\n        if (this._textElement.current) {\r\n            this._textElement.current.setSelectionRange(start, end);\r\n        }\r\n    };\r\n    TextFieldBase.prototype._setValue = function (value) {\r\n        var _this = this;\r\n        this._latestValue = value;\r\n        this.setState({\r\n            value: value || DEFAULT_STATE_VALUE,\r\n            errorMessage: ''\r\n        }, function () {\r\n            _this._adjustInputHeight();\r\n        });\r\n    };\r\n    // @deprecated\r\n    TextFieldBase.prototype._onRenderAddon = function (props) {\r\n        var addonString = props.addonString;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, addonString);\r\n    };\r\n    TextFieldBase.prototype._onRenderPrefix = function (props) {\r\n        var prefix = props.prefix;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, prefix);\r\n    };\r\n    TextFieldBase.prototype._onRenderSuffix = function (props) {\r\n        var suffix = props.suffix;\r\n        return React.createElement(\"span\", { style: { paddingBottom: '1px' } }, suffix);\r\n    };\r\n    Object.defineProperty(TextFieldBase.prototype, \"_errorMessage\", {\r\n        get: function () {\r\n            var errorMessage = this.state.errorMessage;\r\n            if (!errorMessage && this.props.errorMessage) {\r\n                errorMessage = this.props.errorMessage;\r\n            }\r\n            return errorMessage;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextFieldBase.prototype, \"_isDescriptionAvailable\", {\r\n        /**\r\n         * If a custom description render function is supplied then treat description as always available.\r\n         * Otherwise defer to the presence of description or error message text.\r\n         */\r\n        get: function () {\r\n            var props = this.props;\r\n            return !!(props.onRenderDescription || props.description || this._errorMessage);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextFieldBase.prototype._renderTextArea = function () {\r\n        var textAreaProps = getNativeProps(this.props, textAreaProperties, ['defaultValue']);\r\n        return (React.createElement(\"textarea\", tslib_1.__assign({ id: this._id }, textAreaProps, { ref: this._textElement, value: this.state.value, onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, \"aria-describedby\": this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], \"aria-invalid\": !!this.state.errorMessage, \"aria-label\": this.props.ariaLabel, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur })));\r\n    };\r\n    TextFieldBase.prototype._renderInput = function () {\r\n        var inputProps = getNativeProps(this.props, inputProperties, ['defaultValue']);\r\n        return (React.createElement(\"input\", tslib_1.__assign({ type: 'text', id: this._id }, inputProps, { ref: this._textElement, value: this.state.value, onInput: this._onInputChange, onChange: this._onInputChange, className: this._classNames.field, \"aria-label\": this.props.ariaLabel, \"aria-describedby\": this._isDescriptionAvailable ? this._descriptionId : this.props['aria-describedby'], \"aria-invalid\": !!this.state.errorMessage, readOnly: this.props.readOnly, onFocus: this._onFocus, onBlur: this._onBlur })));\r\n    };\r\n    TextFieldBase.prototype._validate = function (value) {\r\n        var _this = this;\r\n        var _a = this.props, validateOnFocusIn = _a.validateOnFocusIn, validateOnFocusOut = _a.validateOnFocusOut;\r\n        // In case of _validate called multi-times during executing validate logic with promise return.\r\n        if (this._latestValidateValue === value && !(validateOnFocusIn || validateOnFocusOut)) {\r\n            return;\r\n        }\r\n        this._latestValidateValue = value;\r\n        var onGetErrorMessage = this.props.onGetErrorMessage;\r\n        var result = onGetErrorMessage(value || '');\r\n        if (result !== undefined) {\r\n            if (typeof result === 'string') {\r\n                this.setState({ errorMessage: result });\r\n                this._notifyAfterValidate(value, result);\r\n            }\r\n            else {\r\n                var currentValidation_1 = ++this._lastValidation;\r\n                result.then(function (errorMessage) {\r\n                    if (_this._isMounted && currentValidation_1 === _this._lastValidation) {\r\n                        _this.setState({ errorMessage: errorMessage });\r\n                    }\r\n                    _this._notifyAfterValidate(value, errorMessage);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this._notifyAfterValidate(value, '');\r\n        }\r\n    };\r\n    TextFieldBase.prototype._notifyAfterValidate = function (value, errorMessage) {\r\n        if (this._isMounted && value === this.state.value && this.props.onNotifyValidationResult) {\r\n            this.props.onNotifyValidationResult(errorMessage, value);\r\n        }\r\n    };\r\n    TextFieldBase.prototype._adjustInputHeight = function () {\r\n        if (this._textElement.current && this.props.autoAdjustHeight && this.props.multiline) {\r\n            var textField = this._textElement.current;\r\n            textField.style.height = '';\r\n            textField.style.height = textField.scrollHeight + 'px';\r\n        }\r\n    };\r\n    TextFieldBase.defaultProps = {\r\n        multiline: false,\r\n        resizable: true,\r\n        autoAdjustHeight: false,\r\n        underlined: false,\r\n        borderless: false,\r\n        onChange: function () {\r\n            /* noop */\r\n        },\r\n        onBeforeChange: function () {\r\n            /* noop */\r\n        },\r\n        onNotifyValidationResult: function () {\r\n            /* noop */\r\n        },\r\n        onGetErrorMessage: function () { return undefined; },\r\n        deferredValidationTime: 200,\r\n        errorMessage: '',\r\n        validateOnFocusIn: false,\r\n        validateOnFocusOut: false,\r\n        validateOnLoad: true\r\n    };\r\n    return TextFieldBase;\r\n}(BaseComponent));\r\nexport { TextFieldBase };\r\n//# sourceMappingURL=TextField.base.js.map","import { AnimationClassNames, FontSizes, getGlobalClassNames, HighContrastSelector, normalize } from '../../Styling';\r\nvar globalClassNames = {\r\n    root: 'ms-TextField',\r\n    description: 'ms-TextField-description',\r\n    errorMessage: 'ms-TextField-errorMessage',\r\n    field: 'ms-TextField-field',\r\n    fieldGroup: 'ms-TextField-fieldGroup',\r\n    prefix: 'ms-TextField-prefix',\r\n    suffix: 'ms-TextField-suffix',\r\n    wrapper: 'ms-TextField-wrapper',\r\n    multiline: 'ms-TextField--multiline',\r\n    borderless: 'ms-TextField--borderless',\r\n    underlined: 'ms-TextField--underlined',\r\n    unresizable: 'ms-TextField--unresizable',\r\n    required: 'is-required',\r\n    disabled: 'is-disabled',\r\n    active: 'is-active'\r\n};\r\nfunction getLabelStyles(props) {\r\n    var underlined = props.underlined, disabled = props.disabled, focused = props.focused;\r\n    return function () {\r\n        return ({\r\n            root: [\r\n                underlined &&\r\n                    disabled && {\r\n                    color: props.theme.palette.neutralTertiary\r\n                },\r\n                underlined && {\r\n                    fontSize: FontSizes.medium,\r\n                    marginRight: 8,\r\n                    paddingLeft: 12,\r\n                    paddingRight: 0,\r\n                    lineHeight: '22px',\r\n                    height: 32\r\n                },\r\n                underlined &&\r\n                    focused && {\r\n                    selectors: (_a = {},\r\n                        _a[HighContrastSelector] = {\r\n                            height: 31 // -1px to prevent jumpiness in HC with the increased border-width to 2px\r\n                        },\r\n                        _a)\r\n                }\r\n            ]\r\n        });\r\n        var _a;\r\n    };\r\n}\r\nexport function getStyles(props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, focused = props.focused, required = props.required, multiline = props.multiline, hasLabel = props.hasLabel, borderless = props.borderless, underlined = props.underlined, hasIcon = props.hasIcon, resizable = props.resizable, hasErrorMessage = props.hasErrorMessage, iconClass = props.iconClass, inputClassName = props.inputClassName, autoAdjustHeight = props.autoAdjustHeight;\r\n    var semanticColors = theme.semanticColors;\r\n    var classNames = getGlobalClassNames(globalClassNames, theme);\r\n    var fieldPrefixSuffix = {\r\n        background: semanticColors.disabledBackground,\r\n        color: !disabled ? semanticColors.inputPlaceholderText : semanticColors.disabledText,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 10px',\r\n        lineHeight: 1,\r\n        whiteSpace: 'nowrap'\r\n    };\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            required && classNames.required,\r\n            disabled && classNames.disabled,\r\n            focused && classNames.active,\r\n            multiline && classNames.multiline,\r\n            borderless && classNames.borderless,\r\n            underlined && classNames.underlined,\r\n            normalize,\r\n            {\r\n                position: 'relative'\r\n            },\r\n            className\r\n        ],\r\n        wrapper: [\r\n            classNames.wrapper,\r\n            underlined && {\r\n                display: 'flex',\r\n                borderBottomWidth: 1,\r\n                borderBottomStyle: 'solid',\r\n                borderBottomColor: semanticColors.inputBorder,\r\n                width: '100%'\r\n            },\r\n            hasErrorMessage &&\r\n                underlined &&\r\n                !disabled && {\r\n                borderBottomColor: semanticColors.errorText,\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderBottomColor: semanticColors.errorText,\r\n                        selectors: (_a = {},\r\n                            _a[HighContrastSelector] = {\r\n                                borderBottomColor: 'Highlight'\r\n                            },\r\n                            _a)\r\n                    }\r\n                }\r\n            },\r\n            underlined &&\r\n                disabled && {\r\n                borderBottomColor: semanticColors.disabledBackground\r\n            },\r\n            underlined &&\r\n                !disabled &&\r\n                !focused &&\r\n                !hasErrorMessage && {\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderBottomColor: semanticColors.inputBorderHovered,\r\n                        selectors: (_b = {},\r\n                            _b[HighContrastSelector] = {\r\n                                borderBottomColor: 'Highlight'\r\n                            },\r\n                            _b)\r\n                    }\r\n                }\r\n            },\r\n            underlined &&\r\n                focused && {\r\n                borderBottomColor: !hasErrorMessage ? semanticColors.inputFocusBorderAlt : semanticColors.errorText,\r\n                selectors: (_c = {},\r\n                    _c[HighContrastSelector] = {\r\n                        borderBottomWidth: 2,\r\n                        borderBottomColor: 'Highlight'\r\n                    },\r\n                    _c)\r\n            }\r\n        ],\r\n        fieldGroup: [\r\n            classNames.fieldGroup,\r\n            normalize,\r\n            {\r\n                border: \"1px solid \" + semanticColors.inputBorder,\r\n                background: semanticColors.inputBackground,\r\n                cursor: 'text',\r\n                height: 32,\r\n                display: 'flex',\r\n                flexDirection: 'row',\r\n                alignItems: 'stretch',\r\n                position: 'relative',\r\n                selectors: {\r\n                    ':hover': {\r\n                        selectors: (_d = {},\r\n                            _d[HighContrastSelector] = {\r\n                                borderColor: 'Highlight'\r\n                            },\r\n                            _d)\r\n                    }\r\n                }\r\n            },\r\n            multiline && {\r\n                minHeight: '60px',\r\n                height: 'auto',\r\n                display: 'flex'\r\n            },\r\n            borderless && {\r\n                border: 'none'\r\n            },\r\n            !focused &&\r\n                !disabled && {\r\n                selectors: {\r\n                    ':hover': {\r\n                        borderColor: semanticColors.inputBorderHovered\r\n                    }\r\n                }\r\n            },\r\n            focused && {\r\n                borderColor: semanticColors.inputFocusBorderAlt,\r\n                selectors: (_e = {},\r\n                    _e[HighContrastSelector] = {\r\n                        borderWidth: 2,\r\n                        borderColor: 'Highlight'\r\n                    },\r\n                    _e)\r\n            },\r\n            disabled && {\r\n                backgroundColor: semanticColors.disabledBackground,\r\n                borderColor: semanticColors.disabledBackground,\r\n                cursor: 'default'\r\n            },\r\n            underlined && {\r\n                flex: '1 1 0px',\r\n                border: 'none',\r\n                textAlign: 'left'\r\n            },\r\n            underlined &&\r\n                focused && {\r\n                selectors: (_f = {},\r\n                    _f[HighContrastSelector] = {\r\n                        height: 31 // -1px to prevent jumpiness in HC with the increased border-width to 2px\r\n                    },\r\n                    _f)\r\n            },\r\n            underlined &&\r\n                disabled && {\r\n                backgroundColor: 'transparent'\r\n            },\r\n            hasErrorMessage && {\r\n                borderColor: semanticColors.errorText,\r\n                selectors: {\r\n                    '&:focus, &:hover': {\r\n                        borderColor: semanticColors.errorText\r\n                    }\r\n                }\r\n            },\r\n            hasErrorMessage &&\r\n                focused && {\r\n                borderColor: semanticColors.errorText\r\n            },\r\n            !hasLabel &&\r\n                required && {\r\n                selectors: (_g = {\r\n                        ':after': {\r\n                            content: \"'*'\",\r\n                            color: semanticColors.errorText,\r\n                            position: 'absolute',\r\n                            top: -5,\r\n                            right: -10\r\n                        }\r\n                    },\r\n                    _g[HighContrastSelector] = {\r\n                        selectors: {\r\n                            ':after': {\r\n                                right: -14 // moving the * 4 pixel to right to alleviate border clipping in HC mode.\r\n                            }\r\n                        }\r\n                    },\r\n                    _g)\r\n            }\r\n        ],\r\n        field: [\r\n            theme.fonts.medium,\r\n            classNames.field,\r\n            normalize,\r\n            {\r\n                fontSize: FontSizes.medium,\r\n                borderRadius: 0,\r\n                border: 'none',\r\n                background: 'none',\r\n                backgroundColor: 'transparent',\r\n                color: semanticColors.inputText,\r\n                padding: '0 12px',\r\n                width: '100%',\r\n                minWidth: 0,\r\n                textOverflow: 'ellipsis',\r\n                outline: 0,\r\n                selectors: {\r\n                    '&:active, &:focus, &:hover': { outline: 0 },\r\n                    '::-ms-clear': {\r\n                        display: 'none'\r\n                    },\r\n                    '::placeholder': [\r\n                        theme.fonts.medium,\r\n                        {\r\n                            color: semanticColors.inputPlaceholderText,\r\n                            opacity: 1\r\n                        }\r\n                    ],\r\n                    ':-ms-input-placeholder': [\r\n                        theme.fonts.medium,\r\n                        {\r\n                            color: semanticColors.inputPlaceholderText,\r\n                            opacity: 1\r\n                        }\r\n                    ]\r\n                }\r\n            },\r\n            multiline &&\r\n                !resizable && [\r\n                classNames.unresizable,\r\n                {\r\n                    resize: 'none'\r\n                }\r\n            ],\r\n            multiline && {\r\n                minHeight: 'inherit',\r\n                lineHeight: 17,\r\n                flexGrow: 1,\r\n                paddingTop: 6,\r\n                overflow: 'auto',\r\n                width: '100%'\r\n            },\r\n            multiline &&\r\n                autoAdjustHeight && {\r\n                overflow: 'hidden'\r\n            },\r\n            hasIcon && {\r\n                paddingRight: 24\r\n            },\r\n            multiline &&\r\n                hasIcon && {\r\n                paddingRight: 40\r\n            },\r\n            disabled && {\r\n                backgroundColor: 'transparent',\r\n                borderColor: 'transparent',\r\n                color: semanticColors.disabledText,\r\n                selectors: {\r\n                    '::placeholder': {\r\n                        color: semanticColors.disabledText\r\n                    },\r\n                    ':-ms-input-placeholder': {\r\n                        color: semanticColors.disabledText\r\n                    }\r\n                }\r\n            },\r\n            underlined && {\r\n                textAlign: 'left'\r\n            },\r\n            focused &&\r\n                !borderless && {\r\n                selectors: (_h = {},\r\n                    _h[HighContrastSelector] = {\r\n                        paddingLeft: 11,\r\n                        paddingRight: 11\r\n                    },\r\n                    _h)\r\n            },\r\n            focused &&\r\n                multiline &&\r\n                !borderless && {\r\n                selectors: (_j = {},\r\n                    _j[HighContrastSelector] = {\r\n                        paddingTop: 4 // take into consideration the 2px increased border-width (not when borderless).\r\n                    },\r\n                    _j)\r\n            },\r\n            inputClassName\r\n        ],\r\n        icon: [\r\n            multiline && {\r\n                paddingRight: 24,\r\n                paddingBottom: 8,\r\n                alignItems: 'flex-end'\r\n            },\r\n            {\r\n                pointerEvents: 'none',\r\n                position: 'absolute',\r\n                bottom: 5,\r\n                right: 8,\r\n                top: 'auto',\r\n                fontSize: 16,\r\n                lineHeight: 18\r\n            },\r\n            disabled && {\r\n                color: semanticColors.disabledText\r\n            },\r\n            iconClass\r\n        ],\r\n        description: [\r\n            classNames.description,\r\n            {\r\n                color: semanticColors.bodySubtext,\r\n                fontSize: FontSizes.xSmall\r\n            }\r\n        ],\r\n        errorMessage: [\r\n            classNames.errorMessage,\r\n            AnimationClassNames.slideDownIn20,\r\n            theme.fonts.small,\r\n            {\r\n                color: semanticColors.errorText,\r\n                margin: 0,\r\n                paddingTop: 5,\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n            }\r\n        ],\r\n        prefix: [classNames.prefix, fieldPrefixSuffix],\r\n        suffix: [classNames.suffix, fieldPrefixSuffix],\r\n        subComponentStyles: {\r\n            label: getLabelStyles(props)\r\n        }\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j;\r\n}\r\n//# sourceMappingURL=TextField.styles.js.map","import { styled } from '../../Utilities';\r\nimport { TextFieldBase } from './TextField.base';\r\nimport { getStyles } from './TextField.styles';\r\nexport var TextField = styled(TextFieldBase, getStyles, undefined, {\r\n    scope: 'TextField'\r\n});\r\n//# sourceMappingURL=TextField.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, divProperties, getNativeProps } from '../../Utilities';\r\nimport { classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\nvar LabelBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(LabelBase, _super);\r\n    function LabelBase() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    LabelBase.prototype.render = function () {\r\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'label' : _b, children = _a.children, className = _a.className, disabled = _a.disabled, styles = _a.styles, required = _a.required, theme = _a.theme;\r\n        var classNames = getClassNames(styles, {\r\n            className: className,\r\n            disabled: disabled,\r\n            required: required,\r\n            theme: theme\r\n        });\r\n        return (React.createElement(RootType, tslib_1.__assign({}, getNativeProps(this.props, divProperties), { className: classNames.root }), children));\r\n    };\r\n    return LabelBase;\r\n}(BaseComponent));\r\nexport { LabelBase };\r\n//# sourceMappingURL=Label.base.js.map","import { styled } from '../../Utilities';\r\nimport { LabelBase } from './Label.base';\r\nimport { getStyles } from './Label.styles';\r\nexport var Label = styled(LabelBase, getStyles, undefined, {\r\n    scope: 'Label'\r\n});\r\n//# sourceMappingURL=Label.js.map","import { HighContrastSelector } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, required = props.required;\r\n    return {\r\n        root: [\r\n            'ms-Label',\r\n            theme.fonts.medium,\r\n            {\r\n                color: theme.semanticColors.bodyText,\r\n                boxSizing: 'border-box',\r\n                boxShadow: 'none',\r\n                margin: 0,\r\n                display: 'block',\r\n                padding: '5px 0',\r\n                wordWrap: 'break-word',\r\n                overflowWrap: 'break-word'\r\n            },\r\n            disabled && {\r\n                color: theme.semanticColors.disabledBodyText,\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        color: 'GrayText'\r\n                    },\r\n                    _a)\r\n            },\r\n            required && {\r\n                selectors: {\r\n                    '::after': {\r\n                        content: \"' *'\",\r\n                        color: theme.semanticColors.errorText,\r\n                        paddingRight: 12\r\n                    }\r\n                }\r\n            },\r\n            className\r\n        ]\r\n    };\r\n    var _a;\r\n};\r\n//# sourceMappingURL=Label.styles.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { classNamesFunction } from '../../Utilities';\r\nvar getClassNames = classNamesFunction();\r\n// if the percentComplete is near 0, don't animate it.\r\n// This prevents animations on reset to 0 scenarios\r\nvar ZERO_THRESHOLD = 0.01;\r\n/**\r\n * ProgressIndicator with no default styles.\r\n * [Use the `styles` API to add your own styles.](https://github.com/OfficeDev/office-ui-fabric-react/wiki/Styling)\r\n */\r\nvar ProgressIndicatorBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ProgressIndicatorBase, _super);\r\n    function ProgressIndicatorBase() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this._onRenderProgress = function (props) {\r\n            var _a = _this.props, ariaValueText = _a.ariaValueText, barHeight = _a.barHeight, className = _a.className, styles = _a.styles, theme = _a.theme;\r\n            var percentComplete = typeof _this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, _this.props.percentComplete * 100)) : undefined;\r\n            var classNames = getClassNames(styles, {\r\n                theme: theme,\r\n                className: className,\r\n                barHeight: barHeight,\r\n                indeterminate: percentComplete === undefined ? true : false\r\n            });\r\n            var progressBarStyles = {\r\n                width: percentComplete !== undefined ? percentComplete + '%' : undefined,\r\n                transition: percentComplete !== undefined && percentComplete < ZERO_THRESHOLD ? 'none' : undefined\r\n            };\r\n            var ariaValueMin = percentComplete !== undefined ? 0 : undefined;\r\n            var ariaValueMax = percentComplete !== undefined ? 100 : undefined;\r\n            var ariaValueNow = percentComplete !== undefined ? Math.floor(percentComplete) : undefined;\r\n            return (React.createElement(\"div\", { className: classNames.itemProgress },\r\n                React.createElement(\"div\", { className: classNames.progressTrack }),\r\n                React.createElement(\"div\", { className: classNames.progressBar, style: progressBarStyles, role: \"progressbar\", \"aria-valuemin\": ariaValueMin, \"aria-valuemax\": ariaValueMax, \"aria-valuenow\": ariaValueNow, \"aria-valuetext\": ariaValueText })));\r\n        };\r\n        return _this;\r\n    }\r\n    ProgressIndicatorBase.prototype.render = function () {\r\n        var _a = this.props, barHeight = _a.barHeight, className = _a.className, _b = _a.label, label = _b === void 0 ? this.props.title : _b, // Fall back to deprecated value.\r\n        description = _a.description, styles = _a.styles, theme = _a.theme, progressHidden = _a.progressHidden, _c = _a.onRenderProgress, onRenderProgress = _c === void 0 ? this._onRenderProgress : _c;\r\n        var percentComplete = typeof this.props.percentComplete === 'number' ? Math.min(100, Math.max(0, this.props.percentComplete * 100)) : undefined;\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            barHeight: barHeight,\r\n            indeterminate: percentComplete === undefined ? true : false\r\n        });\r\n        return (React.createElement(\"div\", { className: classNames.root },\r\n            label ? React.createElement(\"div\", { className: classNames.itemName }, label) : null,\r\n            !progressHidden\r\n                ? onRenderProgress(tslib_1.__assign({}, this.props, { percentComplete: percentComplete }), this._onRenderProgress)\r\n                : null,\r\n            description ? React.createElement(\"div\", { className: classNames.itemDescription }, description) : null));\r\n    };\r\n    ProgressIndicatorBase.defaultProps = {\r\n        label: '',\r\n        description: '',\r\n        width: 180\r\n    };\r\n    return ProgressIndicatorBase;\r\n}(React.Component));\r\nexport { ProgressIndicatorBase };\r\n//# sourceMappingURL=ProgressIndicator.base.js.map","import { FontSizes, FontWeights, HighContrastSelector, keyframes, noWrap, getGlobalClassNames } from '../../Styling';\r\nimport { getRTL } from '../../Utilities';\r\nvar GlobalClassNames = {\r\n    root: 'ms-ProgressIndicator',\r\n    itemName: 'ms-ProgressIndicator-itemName',\r\n    itemDescription: 'ms-ProgressIndicator-itemDescription',\r\n    itemProgress: 'ms-ProgressIndicator-itemProgress',\r\n    progressTrack: 'ms-ProgressIndicator-progressTrack',\r\n    progressBar: 'ms-ProgressIndicator-progressBar'\r\n};\r\nvar IndeterminateProgress = keyframes({\r\n    '0%': {\r\n        left: '-30%'\r\n    },\r\n    '100%': {\r\n        left: '100%'\r\n    }\r\n});\r\nvar IndeterminateProgressRTL = keyframes({\r\n    '100%': {\r\n        right: '-30%'\r\n    },\r\n    '0%': {\r\n        right: '100%'\r\n    }\r\n});\r\nexport var getStyles = function (props) {\r\n    var isRTL = getRTL();\r\n    var className = props.className, indeterminate = props.indeterminate, theme = props.theme, _a = props.barHeight, barHeight = _a === void 0 ? 2 : _a;\r\n    var palette = theme.palette, semanticColors = theme.semanticColors;\r\n    var classNames = getGlobalClassNames(GlobalClassNames, theme);\r\n    var marginBetweenText = 8;\r\n    var textHeight = 18;\r\n    var progressTrackColor = palette.neutralLight;\r\n    return {\r\n        root: [\r\n            classNames.root,\r\n            theme.fonts.medium,\r\n            {\r\n                fontWeight: FontWeights.regular\r\n            },\r\n            className\r\n        ],\r\n        itemName: [\r\n            classNames.itemName,\r\n            noWrap,\r\n            {\r\n                color: semanticColors.bodyText,\r\n                fontSize: FontSizes.medium,\r\n                paddingTop: marginBetweenText / 2,\r\n                lineHeight: textHeight + 2\r\n            }\r\n        ],\r\n        itemDescription: [\r\n            classNames.itemDescription,\r\n            {\r\n                color: semanticColors.bodySubtext,\r\n                fontSize: FontSizes.xSmall,\r\n                lineHeight: textHeight\r\n            }\r\n        ],\r\n        itemProgress: [\r\n            classNames.itemProgress,\r\n            {\r\n                position: 'relative',\r\n                overflow: 'hidden',\r\n                height: barHeight,\r\n                padding: marginBetweenText + \"px 0\"\r\n            }\r\n        ],\r\n        progressTrack: [\r\n            classNames.progressTrack,\r\n            {\r\n                position: 'absolute',\r\n                width: '100%',\r\n                height: barHeight,\r\n                backgroundColor: progressTrackColor,\r\n                selectors: (_b = {},\r\n                    _b[HighContrastSelector] = {\r\n                        borderBottom: '1px solid WindowText'\r\n                    },\r\n                    _b)\r\n            }\r\n        ],\r\n        progressBar: [\r\n            {\r\n                backgroundColor: palette.themePrimary,\r\n                height: barHeight,\r\n                position: 'absolute',\r\n                transition: 'width .3s ease',\r\n                width: 0,\r\n                selectors: (_c = {},\r\n                    _c[HighContrastSelector] = {\r\n                        backgroundColor: 'WindowText'\r\n                    },\r\n                    _c)\r\n            },\r\n            indeterminate\r\n                ? {\r\n                    position: 'absolute',\r\n                    minWidth: '33%',\r\n                    background: \"linear-gradient(to right, \" + progressTrackColor + \" 0%, \" + palette.themePrimary + \" 50%, \" + progressTrackColor + \" 100%)\",\r\n                    animation: (isRTL ? IndeterminateProgressRTL : IndeterminateProgress) + \" 3s infinite\"\r\n                }\r\n                : {\r\n                    transition: 'width .15s linear'\r\n                },\r\n            classNames.progressBar\r\n        ]\r\n    };\r\n    var _b, _c;\r\n};\r\n//# sourceMappingURL=ProgressIndicator.styles.js.map","import { styled } from '../../Utilities';\r\nimport { ProgressIndicatorBase } from './ProgressIndicator.base';\r\nimport { getStyles } from './ProgressIndicator.styles';\r\n/**\r\n * ProgressIndicator description\r\n */\r\nexport var ProgressIndicator = styled(ProgressIndicatorBase, getStyles, undefined, { scope: 'ProgressIndicator' });\r\n//# sourceMappingURL=ProgressIndicator.js.map","import * as tslib_1 from \"tslib\";\r\nimport * as React from 'react';\r\nimport { BaseComponent, classNamesFunction, getId, inputProperties, getNativeProps } from '../../Utilities';\r\nimport { Label } from '../../Label';\r\nimport { KeytipData } from '../../KeytipData';\r\nvar getClassNames = classNamesFunction();\r\nvar ToggleBase = /** @class */ (function (_super) {\r\n    tslib_1.__extends(ToggleBase, _super);\r\n    function ToggleBase(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this._toggleButton = React.createRef();\r\n        _this._onClick = function (ev) {\r\n            var _a = _this.props, disabled = _a.disabled, checkedProp = _a.checked, onChange = _a.onChange, onChanged = _a.onChanged, onClick = _a.onClick;\r\n            var checked = _this.state.checked;\r\n            if (!disabled) {\r\n                // Only update the state if the user hasn't provided it.\r\n                if (checkedProp === undefined) {\r\n                    _this.setState({\r\n                        checked: !checked\r\n                    });\r\n                }\r\n                if (onChange) {\r\n                    onChange(ev, !checked);\r\n                }\r\n                if (onChanged) {\r\n                    onChanged(!checked);\r\n                }\r\n                if (onClick) {\r\n                    onClick(ev);\r\n                }\r\n            }\r\n        };\r\n        _this._warnMutuallyExclusive({\r\n            checked: 'defaultChecked'\r\n        });\r\n        _this._warnDeprecations({\r\n            onAriaLabel: 'ariaLabel',\r\n            offAriaLabel: undefined,\r\n            onChanged: 'onChange'\r\n        });\r\n        _this.state = {\r\n            checked: !!(props.checked || props.defaultChecked)\r\n        };\r\n        _this._id = props.id || getId('Toggle');\r\n        return _this;\r\n    }\r\n    Object.defineProperty(ToggleBase.prototype, \"checked\", {\r\n        /**\r\n         * Gets the current checked state of the toggle.\r\n         */\r\n        get: function () {\r\n            return this.state.checked;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    ToggleBase.prototype.componentWillReceiveProps = function (newProps) {\r\n        if (newProps.checked !== undefined) {\r\n            this.setState({\r\n                checked: !!newProps.checked // convert null to false\r\n            });\r\n        }\r\n    };\r\n    ToggleBase.prototype.render = function () {\r\n        var _this = this;\r\n        var _a = this.props, _b = _a.as, RootType = _b === void 0 ? 'div' : _b, className = _a.className, theme = _a.theme, disabled = _a.disabled, keytipProps = _a.keytipProps, label = _a.label, ariaLabel = _a.ariaLabel, onAriaLabel = _a.onAriaLabel, offAriaLabel = _a.offAriaLabel, offText = _a.offText, onText = _a.onText, styles = _a.styles, inlineLabel = _a.inlineLabel;\r\n        var checked = this.state.checked;\r\n        var stateText = checked ? onText : offText;\r\n        var badAriaLabel = checked ? onAriaLabel : offAriaLabel;\r\n        var toggleNativeProps = getNativeProps(this.props, inputProperties, ['defaultChecked']);\r\n        var classNames = getClassNames(styles, {\r\n            theme: theme,\r\n            className: className,\r\n            disabled: disabled,\r\n            checked: checked,\r\n            inlineLabel: inlineLabel,\r\n            onOffMissing: !onText && !offText\r\n        });\r\n        return (React.createElement(RootType, { className: classNames.root, hidden: toggleNativeProps.hidden },\r\n            label && (React.createElement(Label, { htmlFor: this._id, className: classNames.label }, label)),\r\n            React.createElement(\"div\", { className: classNames.container },\r\n                React.createElement(KeytipData, { keytipProps: keytipProps, ariaDescribedBy: toggleNativeProps['aria-describedby'], disabled: disabled }, function (keytipAttributes) { return (React.createElement(\"button\", tslib_1.__assign({}, toggleNativeProps, keytipAttributes, { className: classNames.pill, disabled: disabled, id: _this._id, type: \"button\", role: \"switch\" // ARIA 1.1 definition; \"checkbox\" in ARIA 1.0\r\n                    , ref: _this._toggleButton, \"aria-disabled\": disabled, \"aria-checked\": checked, \"aria-label\": ariaLabel ? ariaLabel : badAriaLabel, \"data-is-focusable\": true, onChange: _this._noop, onClick: _this._onClick }),\r\n                    React.createElement(\"div\", { className: classNames.thumb }))); }),\r\n                stateText && React.createElement(Label, { className: classNames.text }, stateText))));\r\n    };\r\n    ToggleBase.prototype.focus = function () {\r\n        if (this._toggleButton.current) {\r\n            this._toggleButton.current.focus();\r\n        }\r\n    };\r\n    ToggleBase.prototype._noop = function () {\r\n        /* no-op */\r\n    };\r\n    return ToggleBase;\r\n}(BaseComponent));\r\nexport { ToggleBase };\r\n//# sourceMappingURL=Toggle.base.js.map","import { styled } from '../../Utilities';\r\nimport { ToggleBase } from './Toggle.base';\r\nimport { getStyles } from './Toggle.styles';\r\nexport var Toggle = styled(ToggleBase, getStyles, undefined, { scope: 'Toggle' });\r\n//# sourceMappingURL=Toggle.js.map","import { HighContrastSelector, getFocusStyle } from '../../Styling';\r\nexport var getStyles = function (props) {\r\n    var theme = props.theme, className = props.className, disabled = props.disabled, checked = props.checked, inlineLabel = props.inlineLabel, onOffMissing = props.onOffMissing;\r\n    var semanticColors = theme.semanticColors;\r\n    var pillUncheckedBackground = semanticColors.bodyBackground;\r\n    var pillCheckedBackground = semanticColors.inputBackgroundChecked;\r\n    var pillCheckedHoveredBackground = semanticColors.inputBackgroundCheckedHovered;\r\n    var pillCheckedDisabledBackground = semanticColors.disabledBodySubtext;\r\n    var thumbBackground = semanticColors.inputBorderHovered;\r\n    var thumbCheckedBackground = semanticColors.inputForegroundChecked;\r\n    var thumbDisabledBackground = semanticColors.disabledBodySubtext;\r\n    var thumbCheckedDisabledBackground = semanticColors.disabledBackground;\r\n    var pillBorderColor = semanticColors.smallInputBorder;\r\n    var pillBorderHoveredColor = semanticColors.inputBorderHovered;\r\n    var pillBorderDisabledColor = semanticColors.disabledBodySubtext;\r\n    var textDisabledColor = semanticColors.disabledText;\r\n    return {\r\n        root: [\r\n            'ms-Toggle',\r\n            checked && 'is-checked',\r\n            !disabled && 'is-enabled',\r\n            disabled && 'is-disabled',\r\n            theme.fonts.medium,\r\n            {\r\n                marginBottom: '8px'\r\n            },\r\n            inlineLabel && {\r\n                display: 'flex',\r\n                alignItems: 'center'\r\n            },\r\n            className\r\n        ],\r\n        label: [\r\n            'ms-Toggle-label',\r\n            disabled && {\r\n                color: textDisabledColor,\r\n                selectors: (_a = {},\r\n                    _a[HighContrastSelector] = {\r\n                        color: 'GrayText'\r\n                    },\r\n                    _a)\r\n            },\r\n            inlineLabel &&\r\n                !onOffMissing && {\r\n                marginRight: 16\r\n            },\r\n            onOffMissing &&\r\n                inlineLabel && {\r\n                order: 1,\r\n                marginLeft: 16\r\n            }\r\n        ],\r\n        container: [\r\n            'ms-Toggle-innerContainer',\r\n            {\r\n                display: 'inline-flex',\r\n                position: 'relative'\r\n            }\r\n        ],\r\n        pill: [\r\n            'ms-Toggle-background',\r\n            getFocusStyle(theme, -3),\r\n            {\r\n                fontSize: '20px',\r\n                boxSizing: 'border-box',\r\n                width: '2.2em',\r\n                height: '1em',\r\n                borderRadius: '1em',\r\n                transition: 'all 0.1s ease',\r\n                borderWidth: '1px',\r\n                borderStyle: 'solid',\r\n                background: pillUncheckedBackground,\r\n                borderColor: pillBorderColor,\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                padding: '0 .2em'\r\n            },\r\n            !disabled && [\r\n                !checked && {\r\n                    selectors: {\r\n                        ':hover': [\r\n                            {\r\n                                borderColor: pillBorderHoveredColor\r\n                            }\r\n                        ],\r\n                        ':hover .ms-Toggle-thumb': [\r\n                            {\r\n                                selectors: (_b = {},\r\n                                    _b[HighContrastSelector] = {\r\n                                        borderColor: 'Highlight'\r\n                                    },\r\n                                    _b)\r\n                            }\r\n                        ]\r\n                    }\r\n                },\r\n                checked && [\r\n                    {\r\n                        background: pillCheckedBackground,\r\n                        borderColor: 'transparent',\r\n                        justifyContent: 'flex-end'\r\n                    },\r\n                    {\r\n                        selectors: (_c = {\r\n                                ':hover': [\r\n                                    {\r\n                                        backgroundColor: pillCheckedHoveredBackground,\r\n                                        borderColor: 'transparent',\r\n                                        selectors: (_d = {},\r\n                                            _d[HighContrastSelector] = {\r\n                                                backgroundColor: 'Highlight'\r\n                                            },\r\n                                            _d)\r\n                                    }\r\n                                ]\r\n                            },\r\n                            _c[HighContrastSelector] = {\r\n                                backgroundColor: 'WindowText'\r\n                            },\r\n                            _c)\r\n                    }\r\n                ]\r\n            ],\r\n            disabled && [\r\n                {\r\n                    cursor: 'default'\r\n                },\r\n                !checked && [\r\n                    {\r\n                        borderColor: pillBorderDisabledColor\r\n                    }\r\n                ],\r\n                checked && [\r\n                    {\r\n                        backgroundColor: pillCheckedDisabledBackground,\r\n                        borderColor: 'transparent',\r\n                        justifyContent: 'flex-end'\r\n                    }\r\n                ]\r\n            ],\r\n            !disabled && {\r\n                selectors: {\r\n                    '&:hover': {\r\n                        selectors: (_e = {},\r\n                            _e[HighContrastSelector] = {\r\n                                borderColor: 'Highlight'\r\n                            },\r\n                            _e)\r\n                    }\r\n                }\r\n            }\r\n        ],\r\n        thumb: [\r\n            'ms-Toggle-thumb',\r\n            {\r\n                width: '.5em',\r\n                height: '.5em',\r\n                borderRadius: '.5em',\r\n                transition: 'all 0.1s ease',\r\n                backgroundColor: thumbBackground,\r\n                /* Border is added to handle high contrast mode for Firefox */\r\n                borderColor: 'transparent',\r\n                borderWidth: '.28em',\r\n                borderStyle: 'solid',\r\n                boxSizing: 'border-box'\r\n            },\r\n            !disabled &&\r\n                checked && [\r\n                {\r\n                    backgroundColor: thumbCheckedBackground,\r\n                    selectors: (_f = {},\r\n                        _f[HighContrastSelector] = {\r\n                            backgroundColor: 'Window',\r\n                            borderColor: 'Window'\r\n                        },\r\n                        _f)\r\n                }\r\n            ],\r\n            disabled && [\r\n                !checked && [\r\n                    {\r\n                        backgroundColor: thumbDisabledBackground\r\n                    }\r\n                ],\r\n                checked && [\r\n                    {\r\n                        backgroundColor: thumbCheckedDisabledBackground\r\n                    }\r\n                ]\r\n            ]\r\n        ],\r\n        text: [\r\n            'ms-Toggle-stateText',\r\n            {\r\n                selectors: {\r\n                    // Workaround: make rules more specific than Label rules.\r\n                    '&&': {\r\n                        padding: '0',\r\n                        margin: '0 8px',\r\n                        userSelect: 'none'\r\n                    }\r\n                }\r\n            },\r\n            disabled && {\r\n                selectors: {\r\n                    '&&': {\r\n                        color: textDisabledColor,\r\n                        selectors: (_g = {},\r\n                            _g[HighContrastSelector] = {\r\n                                color: 'GrayText'\r\n                            },\r\n                            _g)\r\n                    }\r\n                }\r\n            }\r\n        ]\r\n    };\r\n    var _a, _b, _c, _d, _e, _f, _g;\r\n};\r\n//# sourceMappingURL=Toggle.styles.js.map"],"sourceRoot":""}