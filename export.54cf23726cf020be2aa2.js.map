{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./src/components/Export.tsx"],"names":["c","b","d","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","type","Blob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","ExportType","ExportComponent","props","exportType","text","delimiter","newline","CRLF","encoding","outputText","show","buttonOnClick","newOutputText","state","exportOptions","setState","store","csvStringAndName","saveOrOutput","exportTypeOptions","key","this","platform","Office","PlatformType","OfficeOnline","push","file","outputTextField","label","className","readOnly","multiline","rows","spellCheck","wrap","value","largeFileWarning","style","color","variant","helpLink","mac","Mac","options","responsiveMode","large","selectedKey","onChange","_","option","id","hidden","showAutoDetect","showLengthError","styles","root","display","content","buttonTooltipContent","onClick","disabled","largeFile","abort","progress","inlineLabel","defaultChecked","initialSaveStatus","checked","setSaveStatus","parserOutput","blob","string","initialized"],"mappings":"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","file":"export.54cf23726cf020be2aa2.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {Store} from '../Store';\nimport * as React from 'react';\nimport {connect} from '../connect';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {\n    Dropdown,\n    IDropdownOption,\n    PrimaryButton,\n    Text,\n    TextField,\n    Toggle,\n    TooltipHost,\n} from 'office-ui-fabric-react';\nimport {CsvStringAndName, ExportOptions, NewlineSequence} from '../Parser';\nimport * as FileSaver from 'file-saver';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport * as style from './style.css';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {StoredComponent} from './StoredComponent';\nimport {MemoryHistory} from 'history';\nimport {TitleBar} from './TitleBar';\nimport {\n    ResponsiveMode,\n} from \"office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode\";\n\nexport interface OutputText {\n    // If show is false, do not show text.\n    show: boolean;\n    text: string;\n}\n\ninterface Props {\n    store: Store;\n    history: MemoryHistory;\n}\n\nexport enum ExportType {file, text}\n\ninterface State extends ExportOptions {\n    exportType: ExportType;\n    outputText: OutputText;\n    encoding: string;\n}\n\nexport class ExportComponent extends StoredComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props, 'export', {\n            exportType: ExportType.text,\n            delimiter: '\\u002c',\n            newline: NewlineSequence.CRLF,\n            encoding: 'UTF-8',\n            outputText: {\n                show: false,\n                text: '',\n            },\n        }, ['exportType', 'delimiter', 'newline', 'encoding']);\n    }\n\n    public render(): React.ReactNode {\n        const exportTypeOptions: IDropdownOption[] = [{\n            key: ExportType.text,\n            text: 'Textbox',\n        }];\n        // Export file feature only works on Excel Online\n        // https://github.com/Emurasoft/excel-csv-import/issues/39\n        // eslint-disable-next-line no-undef\n        if (this.props.store.state.platform === Office.PlatformType.OfficeOnline) {\n            exportTypeOptions.push({\n                key: ExportType.file,\n                text: 'File',\n            });\n        }\n\n        const outputTextField = (\n            <TextField\n                label={'Export result'}\n                className={style.monospace}\n                readOnly={true}\n                multiline rows={15}\n                spellCheck={false}\n                wrap='off'\n                value={this.state.outputText.text}\n            />\n        );\n\n        const largeFileWarning = (\n            <Text style={{color: 'red'}} variant='medium'>\n                {'Large file export is not supported'}\n            </Text>\n        );\n\n        const helpLink\n            = 'https://github.com/Emurasoft/excel-csv-import-help/blob/master/en.md#export-csv';\n\n        return (\n            <>\n                <div className={style.pageMargin}>\n                    {/* eslint-disable no-undef */}\n                    <TitleBar\n                        text={'Export CSV'}\n                        helpLink={helpLink}\n                        mac={this.props.store.state.platform === Office.PlatformType.Mac}\n                    />\n                    {/* eslint-enable no-undef */}\n                    <Dropdown\n                        label={'Export type'}\n                        options={exportTypeOptions}\n                        responsiveMode={ResponsiveMode.large}\n                        selectedKey={this.state.exportType}\n                        onChange={\n                            (_, option) => this.setState({exportType: option.key as ExportType})\n                        }\n                        id={'exportTypeDropdown'}\n                    />\n                    <br />\n                    <EncodingDropdown\n                        value={this.state.encoding}\n                        onChange={(encoding) => this.setState({encoding})}\n                        hidden={this.state.exportType === ExportType.text}\n                        showAutoDetect={false}\n                    />\n                    <DelimiterInput\n                        value={this.state.delimiter}\n                        onChange={(delimiter) => this.setState({delimiter})}\n                        showLengthError={false}\n                    />\n                    <br />\n                    <NewlineDropdown\n                        value={this.state.newline}\n                        onChange={(newline) => this.setState({newline})}\n                        showAutoDetect={false}\n                    />\n                    <br />\n                    <TooltipHost\n                        styles={{root: {display: 'inline-block'}}}\n                        content={this.buttonTooltipContent()}\n                    >\n                        <PrimaryButton\n                            onClick={this.buttonOnClick}\n                            disabled={this.buttonTooltipContent() !== ''}\n                            text={'Export to CSV'}\n                        />\n                    </TooltipHost>\n                    <br />\n                    {this.props.store.state.largeFile ? largeFileWarning : null}\n                    <ProgressBar\n                        onClick={this.props.store.abort}\n                        progress={this.props.store.state.progress}\n                    />\n                    <Toggle\n                        inlineLabel label={'Save options'}\n                        defaultChecked={this.initialSaveStatus()}\n                        onChange={(_, checked) => this.setSaveStatus(checked)}\n                    />\n                    {this.state.outputText.show ? outputTextField : null}\n                    <ParserOutputBox parserOutput={this.props.store.state.parserOutput} />\n                    <BottomBar />\n                </div>\n            </>\n        );\n    }\n\n    private buttonOnClick = async () => {\n        function newOutputText(state, exportOptions): OutputText {\n            // If exportType is text:\n            //      If last outputText.show was true, flip twice otherwise change once later\n            // If exportType is a file, show is set to false once.\n            if (exportOptions.exportType === ExportType.text) {\n                if (exportOptions.outputText.show) {\n                    return {show: !state.outputText.show, text: state.outputText.text};\n                } else {\n                    return {show: state.outputText.show, text: state.outputText.text};\n                }\n            } else {\n                return {show: false, text: ''};\n            }\n        }\n\n        // Copy values before async operation\n        const exportOptions = {...this.state};\n\n        this.setState(state => ({outputText: newOutputText(state, exportOptions)}));\n\n        const csvStringAndName = await this.props.store.csvStringAndName(this.state);\n        if (csvStringAndName === null) {\n            return;\n        }\n\n        this.saveOrOutput(csvStringAndName, exportOptions);\n    }\n\n    private saveOrOutput(csvStringAndName: CsvStringAndName, exportOptions: State): void {\n        switch (exportOptions.exportType) {\n        case ExportType.file: {\n            const options = {type: 'text/csv;charset=' + exportOptions.encoding};\n            const blob = new Blob([csvStringAndName.string], options);\n            FileSaver.saveAs(blob, csvStringAndName.name + '.csv');\n            // state.outputText.show is already false\n            return;\n        }\n        case ExportType.text: {\n            this.setState(state => ({\n                outputText: {show: !state.outputText.show, text: csvStringAndName.string},\n            }));\n            return;\n        }\n        }\n    }\n\n    private buttonTooltipContent(): string {\n        if (!this.props.store.state.initialized) {\n            return 'Excel API is not initialized';\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default connect(ExportComponent);"],"sourceRoot":""}