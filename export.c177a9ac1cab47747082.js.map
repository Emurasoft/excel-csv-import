{"version":3,"sources":["webpack:///./src/connect.tsx","webpack:///./src/components/DelimiterInput.tsx","webpack:///./src/components/NewlineDropdown.tsx","webpack:///./src/components/ProgressBar.tsx","webpack:///./src/components/BottomBar.tsx","webpack:///./src/components/ParserOutputBox.tsx","webpack:///./src/components/StoredComponent.tsx","webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./src/components/EncodingDropdownOptions.ts","webpack:///./src/components/EncodingDropdown.tsx","webpack:///./src/components/ExportTypeDropdown.tsx","webpack:///./src/components/Export.tsx"],"names":["__webpack_require__","d","__webpack_exports__","connect","react__WEBPACK_IMPORTED_MODULE_0__","_Store__WEBPACK_IMPORTED_MODULE_1__","Component","props","Consumer","store","Object","assign","DropdownOptionKey","DelimiterInputComponent","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","dropdownOnChange","_","option","_dropdownToString","dropdownToString","_defineProperty","autoDetect","comma","space","tab","other","setState","otherSelected","key","onChange","getErrorMessage","value","showLengthError","length","t","state","_stringToDropdownKey",","," ","\t","DropdownOptionsNoAutoDetect","text","AutoDetectOption","showAutoDetect","_dropdownOptions","concat","_inherits","delimiter","codePoint","c","charCodeAt","toString","toUpperCase","padStart","_this2","customInput","className","_style_css__WEBPACK_IMPORTED_MODULE_3__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_1__","description","onGetErrorMessage","deferredValidationTime","placeholder","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_2__","label","options","responsiveMode","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_4__","large","selectedKey","showCustomInput","delimitersInDropdown","push","includes","DelimiterInput","react_i18next__WEBPACK_IMPORTED_MODULE_5__","NewlineDropdownComponent","autoDetectOption","_Parser__WEBPACK_IMPORTED_MODULE_3__","AutoDetect","newlineSequeneceMenu","CRLF","CR","LF","_options","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_1__","NewlineDropdown","react_i18next__WEBPACK_IMPORTED_MODULE_4__","ProgressBarComponent","apply","arguments","_style_css__WEBPACK_IMPORTED_MODULE_4__","contents","progress","show","variant","stopLink","percentComplete","percent","aborting","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_3__","onClick","ProgressBar","BottomBar","_style_css__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_3__","react_router_dom__WEBPACK_IMPORTED_MODULE_4__","_Pages__WEBPACK_IMPORTED_MODULE_5__","react_i18next__WEBPACK_IMPORTED_MODULE_6__","to","about","ParserOutputBox","_Store__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","parserOutput","type","hidden","info","output","rows","multiline","spellCheck","readOnly","error","StoredComponent","namespace","defaultState","saveKeys","_namespace","_saveKeys","_initialSave","localStorage","_save","loadedState","loadState","_arr2","entries","_i2","entry","substring","JSON","parse","children","_get","prototype","_typeof","saveState","save","setItem","clear","_arr","_i","stringify","global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","b","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","saveAs","HTMLAnchorElement","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","Blob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","EncodingDropdownOptions","EncodingDropdown_EncodingDropdownComponent","EncodingDropdownComponent","_toConsumableArray","react","Dropdown","EncodingDropdown","es","ExportType","ExportTypeDropdown_ExportTypeDropdownComponent","ExportTypeDropdownComponent","file","withResponsiveMode","ExportTypeDropdown","Export_ExportComponent","_StoredComponent","ExportComponent","Export_classCallCheck","Export_possibleConstructorReturn","Export_getPrototypeOf","exportType","newline","Parser","encoding","outputText","buttonOnClick","_asyncToGenerator","regeneratorRuntime","mark","_callee","newOutputText","exportOptions","csvStringAndName","wrap","_context","prev","next","sent","abrupt","saveOrOutput","stop","Export_inherits","outputTextField","TextField","style","largeFileWarning","Text","color","TooltipHost","styles","root","display","content","buttonTooltipContent","PrimaryButton","disabled","largeFile","abort","Toggle","inlineLabel","defaultChecked","initialSaveStatus","checked","setSaveStatus","blob","string","FileSaver_min","initialized"],"mappings":"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","file":"export.c177a9ac1cab47747082.js","sourcesContent":["import * as React from 'react';\nimport {Context, Store} from './Store';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect<P extends {store: Store}>(Component: React.ComponentClass): any {\n    // eslint-disable-next-line react/display-name\n    return (props: Pick<P, Exclude<keyof P, 'store'>>) => {\n        return (\n            <Context.Consumer>\n                {(store: Store) => <Component {...props} store={store}/>}\n            </Context.Consumer>\n        );\n    };\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {BaseProps} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\n\nexport enum DropdownOptionKey {autoDetect, comma, space, tab, other}\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    showLengthError: boolean;\n}\n\ninterface State {\n    otherSelected: boolean;\n}\n\nexport class DelimiterInputComponent extends React.Component<Props, State> {\n    public constructor(props) {\n        super(props);\n        this.state = {otherSelected: false};\n\n        this._stringToDropdownKey = {\n            '\\u002c': DropdownOptionKey.comma,\n            '\\u0020': DropdownOptionKey.space,\n            '\\u0009': DropdownOptionKey.tab,\n        };\n\n        const DropdownOptionsNoAutoDetect: IDropdownOption[] = [\n            {\n                key: DropdownOptionKey.comma,\n                text: 'Comma (U+002C)',\n            },\n            {\n                key: DropdownOptionKey.space,\n                text: 'Space (U+0020)',\n            },\n            {\n                key: DropdownOptionKey.tab,\n                text: 'Tab (U+0009)',\n            },\n            {\n                key: DropdownOptionKey.other,\n                text: props.t('Other'),\n            },\n        ];\n\n        const AutoDetectOption: IDropdownOption = {\n            key: DropdownOptionKey.autoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._stringToDropdownKey[''] = DropdownOptionKey.autoDetect;\n            this._dropdownOptions = [AutoDetectOption, ...DropdownOptionsNoAutoDetect];\n        } else {\n            this._dropdownOptions = DropdownOptionsNoAutoDetect;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const customInput = (\n            <div className={style.smallDivider}>\n                <TextField\n                    className={style.monospace}\n                    value={this.props.value}\n                    onChange={(_, value) => this.props.onChange(value)}\n                    description={DelimiterInputComponent.description(this.props.value)}\n                    onGetErrorMessage={this.getErrorMessage}\n                    deferredValidationTime={1}\n                    placeholder={t('Enter custom delimiter')}\n                />\n            </div>\n        );\n\n        return (\n            <>\n                <Dropdown\n                    label={t('Delimiter')}\n                    options={this._dropdownOptions}\n                    responsiveMode={ResponsiveMode.large}\n                    selectedKey={this.selectedKey()}\n                    onChange={this.dropdownOnChange}\n                />\n                {this.showCustomInput() ? customInput : null}\n            </>\n        );\n    }\n\n    private static description(delimiter: string): string {\n        if (delimiter.length == 1) {\n            return DelimiterInputComponent.codePoint(delimiter);\n        } else {\n            return '';\n        }\n    }\n\n    private static codePoint(c: string): string {\n        return 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n    private readonly _stringToDropdownKey: {[key: string]: DropdownOptionKey};\n\n    private showCustomInput(): boolean {\n        if (this.state.otherSelected) {\n            return true;\n        }\n\n        const delimitersInDropdown = ['\\u002c', '\\u0020', '\\u0009'];\n        if (this.props.showAutoDetect) {\n            delimitersInDropdown.push('');\n        }\n        return !delimitersInDropdown.includes(this.props.value);\n    }\n\n    private selectedKey(): DropdownOptionKey {\n        if (this.state.otherSelected) {\n            return DropdownOptionKey.other;\n        }\n\n        if (this.props.value in this._stringToDropdownKey) {\n            return this._stringToDropdownKey[this.props.value];\n        } else {\n            return DropdownOptionKey.other;\n        }\n    }\n\n    private dropdownOnChange = (_, option: IDropdownOption) => {\n        const dropdownToString = {\n            [DropdownOptionKey.autoDetect]: '',\n            [DropdownOptionKey.comma]: '\\u002c',\n            [DropdownOptionKey.space]: '\\u0020',\n            [DropdownOptionKey.tab]: '\\u0009',\n            [DropdownOptionKey.other]: '',\n        };\n\n        this.setState({otherSelected: option.key === DropdownOptionKey.other});\n        this.props.onChange(dropdownToString[option.key]);\n    }\n\n    private getErrorMessage = (value: string) => {\n        if (this.props.showLengthError && value.length > 1) {\n            return this.props.t('Delimiter length must be 0 or 1');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport const DelimiterInput = withTranslation('importExport')(DelimiterInputComponent);","import * as React from 'react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {BaseProps} from './BaseProps';\nimport {NewlineSequence} from '../Parser';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<NewlineSequence> {\n    showAutoDetect: boolean;\n}\n\nexport class NewlineDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n        const autoDetectOption: IDropdownOption = {\n            key: NewlineSequence.AutoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        const newlineSequeneceMenu = [\n            {\n                key: NewlineSequence.CRLF,\n                text: 'CRLF',\n            },\n            {\n                key: NewlineSequence.CR,\n                text: 'CR',\n            },\n            {\n                key: NewlineSequence.LF,\n                text: 'LF',\n            },\n        ];\n\n        if (props.showAutoDetect) {\n            this._options = [autoDetectOption, ...newlineSequeneceMenu];\n        } else {\n            this._options = newlineSequeneceMenu;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        return (\n            <Dropdown\n                label={t('Newline sequence')}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                options={this._options}\n                onChange={(_, option) => this.props.onChange(option.key as NewlineSequence)}\n            />\n        );\n    }\n\n    private readonly _options: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const NewlineDropdown = withTranslation('importExport')(NewlineDropdownComponent);","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {Progress} from '../Store';\nimport {withTranslation} from 'react-i18next';\nimport {TranslateFunction} from './BaseProps';\n\ninterface Props extends TranslateFunction{\n    // Fired when the \"Stop\" link is clicked.\n    onClick: () => void;\n    progress: Progress;\n}\n\nexport class ProgressBarComponent extends React.Component<Props, {}> {\n    public render(): JSX.Element {\n        return (\n            <div className={style.smallDivider}>{this.contents()}</div>\n        );\n    }\n\n    private contents(): React.ReactNode {\n        if (this.props.progress.show) {\n            return (\n                <>\n                    <Text variant='small'>{this.stopLink()}</Text>\n                    <ProgressIndicator percentComplete={this.props.progress.percent}/>\n                </>\n            );\n        } else {\n            return <Text variant='small'>&nbsp;</Text>;\n        }\n    }\n\n    private stopLink(): React.ReactNode {\n        if (this.props.progress.aborting) {\n            return this.props.t('Stopping');\n        } else {\n            return <Link onClick={this.props.onClick}>{this.props.t('Stop')}</Link>;\n        }\n    }\n}\n\n// @ts-ignore\nexport const ProgressBar = withTranslation('importExport')(ProgressBarComponent)","import * as style from './style.css';\nimport {Link, Text} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\nexport function BottomBar(): JSX.Element {\n    const {t} = useTranslation('importExport');\n    return (\n        <div className={style.bottomBar}>\n            <Text variant='medium'>\n                <RouterLink to={Pages.about} className={style.removeUnderline}>\n                    <Link>{t('About')}</Link>\n                </RouterLink>\n            </Text>\n        </div>\n    );\n}","import {OutputType, ParserOutput} from '../Store';\nimport {TextField} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\nexport function ParserOutputBox(props: {parserOutput: ParserOutput}): JSX.Element {\n    switch (props.parserOutput.type) {\n    case OutputType.hidden:\n        return null;\n    case OutputType.info:\n        return (\n            <TextField\n                className={style.monospace}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    case OutputType.error:\n        return (\n            <TextField\n                className={style.monospace  + ' ' + style.redText}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringKey {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport class StoredComponent<P = {}, S extends StringKey = {}> extends React.Component<P, S> {\n    public constructor(\n        props: Readonly<P>,\n        namespace: string,\n        defaultState: Readonly<S>,\n        saveKeys: ReadonlyArray<keyof S>\n    ) {\n        super(props);\n        this._namespace = namespace;\n        this._saveKeys = saveKeys;\n        this._initialSave = localStorage && localStorage['StoredComponent-save'] === '\"true\"';\n        this._save = this._initialSave;\n\n        let loadedState = {};\n        if (this._save) {\n            loadedState = StoredComponent.loadState(namespace, saveKeys as string[]);\n        }\n        this.state = {...defaultState, ...loadedState};\n    }\n\n    public render(): React.ReactNode {\n        return this.props.children;\n    }\n\n    // State is saved only if state is an object.\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null))\n        | (Pick<S, K> | S | null),\n    ): void {\n        super.setState(state);\n        if (this._save && typeof state === 'object') {\n            this.saveState(state);\n        }\n    }\n\n    public initialSaveStatus(): boolean {\n        return this._initialSave;\n    }\n\n    public setSaveStatus(save: boolean): void {\n        this._save = save;\n\n        if (save) {\n            localStorage.setItem('StoredComponent-save', '\"true\"');\n            this.saveState(this.state);\n        } else {\n            localStorage.clear();\n        }\n    }\n\n    private static loadState(namespace: string, saveKeys: string[]): {} {\n        const loadedState = {};\n        for (const entry of Object.entries(localStorage)) {\n            if (\n                entry[0].substring(0, namespace.length + 1) === namespace + '-'\n                && saveKeys.includes(entry[0].substring(namespace.length + 1))\n            ) {\n                loadedState[entry[0].substring(namespace.length + 1)] = JSON.parse(entry[1]);\n            }\n        }\n        return loadedState;\n    }\n\n    private readonly _namespace: string;\n    private readonly _saveKeys: ReadonlyArray<keyof S>;\n    private readonly _initialSave: boolean;\n    private _save: boolean;\n\n    private saveState<K extends keyof S>(state: Pick<S, K> | S | null): void {\n        for (const entry of Object.entries(state)) {\n            if (this._saveKeys.includes(entry[0])) {\n                const key = this._namespace + '-' + entry[0];\n                localStorage.setItem(key, JSON.stringify(entry[1]));\n            }\n        }\n    }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {IDropdownOption} from 'office-ui-fabric-react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n    // Use generateEncodingList.js to generate list\n    {\n        \"key\": \"Big5\",\n        \"text\": \"Big5\",\n    },\n    {\n        \"key\": \"EUC-JP\",\n        \"text\": \"EUC-JP\",\n    },\n    {\n        \"key\": \"EUC-KR\",\n        \"text\": \"EUC-KR\",\n    },\n    {\n        \"key\": \"GBK\",\n        \"text\": \"GBK\",\n    },\n    {\n        \"key\": \"IBM866\",\n        \"text\": \"IBM866 (Cyrillic)\",\n    },\n    {\n        \"key\": \"ISO-2022-JP\",\n        \"text\": \"ISO-2022-JP (JIS)\",\n    },\n    {\n        \"key\": \"ISO-8859-10\",\n        \"text\": \"ISO-8859-10 (Latin-6)\",\n    },\n    {\n        \"key\": \"ISO-8859-13\",\n        \"text\": \"ISO-8859-13 (Latin-7)\",\n    },\n    {\n        \"key\": \"ISO-8859-14\",\n        \"text\": \"ISO-8859-14 (Latin-8)\",\n    },\n    {\n        \"key\": \"ISO-8859-15\",\n        \"text\": \"ISO-8859-15 (Latin-9)\",\n    },\n    {\n        \"key\": \"ISO-8859-16\",\n        \"text\": \"ISO-8859-16 (Latin-10)\",\n    },\n    {\n        \"key\": \"ISO-8859-2\",\n        \"text\": \"ISO-8859-2 (Central European)\",\n    },\n    {\n        \"key\": \"ISO-8859-3\",\n        \"text\": \"ISO-8859-3 (Latin 3)\",\n    },\n    {\n        \"key\": \"ISO-8859-4\",\n        \"text\": \"ISO-8859-4 (Latin-4)\",\n    },\n    {\n        \"key\": \"ISO-8859-5\",\n        \"text\": \"ISO-8859-5 (Cryillic)\",\n    },\n    {\n        \"key\": \"ISO-8859-6\",\n        \"text\": \"ISO-8859-6 (Arabic)\",\n    },\n    {\n        \"key\": \"ISO-8859-7\",\n        \"text\": \"ISO-8859-7 (Greek)\",\n    },\n    {\n        \"key\": \"ISO-8859-8\",\n        \"text\": \"ISO-8859-8 (Hebrew)\",\n    },\n    {\n        \"key\": \"ISO-8859-8-I\",\n        \"text\": \"ISO-8859-8-I (Hebrew)\",\n    },\n    {\n        \"key\": \"KOI8-R\",\n        \"text\": \"KOI8-R\",\n    },\n    {\n        \"key\": \"KOI8-U\",\n        \"text\": \"KOI8-U\",\n    },\n    {\n        \"key\": \"Shift_JIS\",\n        \"text\": \"Shift_JIS\",\n    },\n    {\n        \"key\": \"UTF-16BE\",\n        \"text\": \"UTF-16BE\",\n    },\n    {\n        \"key\": \"UTF-16LE\",\n        \"text\": \"UTF-16LE\",\n    },\n    {\n        \"key\": \"UTF-8\",\n        \"text\": \"UTF-8\",\n    },\n    {\n        \"key\": \"gb18030\",\n        \"text\": \"gb18030\",\n    },\n    {\n        \"key\": \"macintosh\",\n        \"text\": \"macintosh\",\n    },\n    {\n        \"key\": \"replacement\",\n        \"text\": \"replacement\",\n    },\n    {\n        \"key\": \"windows-1250\",\n        \"text\": \"windows-1250 (Central European)\",\n    },\n    {\n        \"key\": \"windows-1251\",\n        \"text\": \"windows-1251 (Cyrillic)\",\n    },\n    {\n        \"key\": \"windows-1252\",\n        \"text\": \"windows-1252 (Western European)\",\n    },\n    {\n        \"key\": \"windows-1253\",\n        \"text\": \"windows-1253 (Greek)\",\n    },\n    {\n        \"key\": \"windows-1254\",\n        \"text\": \"windows-1254 (Turkish)\",\n    },\n    {\n        \"key\": \"windows-1255\",\n        \"text\": \"windows-1255 (Hebrew)\",\n    },\n    {\n        \"key\": \"windows-1256\",\n        \"text\": \"windows-1256 (Arabic)\",\n    },\n    {\n        \"key\": \"windows-1257\",\n        \"text\": \"windows-1257 (Baltic)\",\n    },\n    {\n        \"key\": \"windows-1258\",\n        \"text\": \"windows-1258 (Vietnamese)\",\n    },\n    {\n        \"key\": \"windows-874\",\n        \"text\": \"windows-874 (Thai)\",\n    },\n    {\n        \"key\": \"x-mac-cyrillic\",\n        \"text\": \"x-mac-cyrillic\",\n    },\n    {\n        \"key\": \"x-user-defined\",\n        \"text\": \"x-user-defined\",\n    },\n];","import {BaseProps} from './BaseProps';\nimport * as React from 'react';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    hidden: boolean;\n}\n\nexport class EncodingDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n\n        const AutoDetectOption: IDropdownOption = {\n            'key': '',\n            'text': props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._dropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n        } else {\n            this._dropdownOptions = EncodingDropdownOptions;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        if (this.props.hidden) {\n            return null;\n        } else {\n            return (\n                <>\n                    <Dropdown\n                        label={t('Encoding')}\n                        selectedKey={this.props.value}\n                        options={this._dropdownOptions}\n                        onChange={(_, option) => this.props.onChange(option.key as string)}\n                    />\n                    <br/>\n                </>\n            );\n        }\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const EncodingDropdown = withTranslation('importExport')(EncodingDropdownComponent);","import * as React from 'react';\nimport {BaseProps} from './BaseProps';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {withTranslation} from 'react-i18next';\nimport {ExportType} from './Export';\n\nexport class ExportTypeDropdownComponent extends React.Component<BaseProps<ExportType>, {}> {\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const options: IDropdownOption[] = [\n            {\n                key: ExportType.file,\n                text: t('File'),\n            },\n            {\n                key: ExportType.text,\n                text: t('Textbox'),\n            },\n        ];\n\n        return (\n            <Dropdown\n                label={t('Export type')}\n                options={options}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                onChange={(_, option) => this.props.onChange(option.key as ExportType)}\n            />\n        );\n    }\n}\n\n// @ts-ignore\nexport const ExportTypeDropdown = withTranslation('importExport')(ExportTypeDropdownComponent);","import {Store} from '../Store';\nimport * as React from 'react';\nimport {connect} from '../connect';\nimport {ExportTypeDropdown} from './ExportTypeDropdown';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {\n    CompoundButton,\n    PrimaryButton,\n    Text,\n    TextField,\n    Toggle,\n    TooltipHost,\n} from 'office-ui-fabric-react';\nimport {CsvStringAndName, ExportOptions, NewlineSequence} from '../Parser';\nimport * as FileSaver from 'file-saver';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport * as style from './style.css';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {StoredComponent} from './StoredComponent';\nimport {TranslateFunction} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\nimport {MemoryHistory} from 'history';\n\nexport interface OutputText {\n    // If show is false, do not show text.\n    show: boolean;\n    text: string;\n}\n\ninterface Props extends TranslateFunction {\n    store: Store;\n    history: MemoryHistory;\n}\n\nexport enum ExportType {file, text}\n\ninterface State extends ExportOptions {\n    exportType: ExportType;\n    outputText: OutputText;\n    encoding: string;\n}\n\nexport class ExportComponent extends StoredComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props, 'export', {\n            exportType: ExportType.file,\n            delimiter: '\\u002c',\n            newline: NewlineSequence.CRLF,\n            encoding: 'UTF-8',\n            outputText: {\n                show: false,\n                text: '',\n            },\n        }, ['exportType', 'delimiter', 'newline', 'encoding']);\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const outputTextField = (\n            <TextField\n                label={t('Export result')}\n                className={style.monospace}\n                readOnly={true}\n                multiline rows={15}\n                spellCheck={false}\n                wrap='off'\n                value={this.state.outputText.text}\n            />\n        );\n\n        const largeFileWarning = (\n            <Text style={{color: 'red'}} variant='medium'>\n                {t('Large file export is not supported')}\n            </Text>\n        );\n\n        return (\n            <>\n                <div className={style.pageMargin}>\n                    <Text variant='xLarge'><strong>{t('Export CSV')}</strong></Text>\n                    <ExportTypeDropdown\n                        value={this.state.exportType}\n                        onChange={(exportType) => this.setState({exportType})}\n                    />\n                    <br />\n                    <EncodingDropdown\n                        value={this.state.encoding}\n                        onChange={(encoding) => this.setState({encoding})}\n                        hidden={this.state.exportType === ExportType.text}\n                        showAutoDetect={false}\n                    />\n                    <DelimiterInput\n                        value={this.state.delimiter}\n                        onChange={(delimiter) => this.setState({delimiter})}\n                        showAutoDetect={false}\n                        showLengthError={false}\n                    />\n                    <br />\n                    <NewlineDropdown\n                        value={this.state.newline}\n                        onChange={(newline) => this.setState({newline})}\n                        showAutoDetect={false}\n                    />\n                    <br />\n                    <TooltipHost\n                        styles={{root: {display: 'inline-block'}}}\n                        content={this.buttonTooltipContent()}\n                    >\n                        <PrimaryButton\n                            onClick={this.buttonOnClick}\n                            disabled={this.buttonTooltipContent() !== ''}\n                            text={t('Export to CSV')}\n                        />\n                    </TooltipHost>\n                    <br />\n                    {this.props.store.state.largeFile ? largeFileWarning : null}\n                    <ProgressBar\n                        onClick={this.props.store.abort}\n                        progress={this.props.store.state.progress}\n                    />\n                    <Toggle\n                        inlineLabel label={t('Save options')}\n                        defaultChecked={this.initialSaveStatus()}\n                        onChange={(_, checked) => this.setSaveStatus(checked)}\n                    />\n                    {this.state.outputText.show ? outputTextField : null}\n                    <ParserOutputBox parserOutput={this.props.store.state.parserOutput} />\n                    <BottomBar />\n                </div>\n            </>\n        );\n    }\n\n    private buttonOnClick = async () => {\n        function newOutputText(state, exportOptions): OutputText {\n            // If exportType is text:\n            //      If last outputText.show was true, flip twice otherwise change once later\n            // If exportType is a file, show is set to false once.\n            if (exportOptions.exportType === ExportType.text) {\n                if (exportOptions.outputText.show) {\n                    return {show: !state.outputText.show, text: state.outputText.text};\n                } else {\n                    return {show: state.outputText.show, text: state.outputText.text};\n                }\n            } else {\n                return {show: false, text: ''};\n            }\n        }\n\n        // Copy values before async operation\n        const exportOptions = {...this.state};\n\n        this.setState(state => ({outputText: newOutputText(state, exportOptions)}));\n\n        const csvStringAndName = await this.props.store.csvStringAndName(this.state);\n        if (csvStringAndName === null) {\n            return;\n        }\n\n        this.saveOrOutput(csvStringAndName, exportOptions);\n    }\n\n    private saveOrOutput(csvStringAndName: CsvStringAndName, exportOptions: State): void {\n        switch (exportOptions.exportType) {\n        case ExportType.file: {\n            const options = {type: 'text/csv;charset=' + exportOptions.encoding};\n            const blob = new Blob([csvStringAndName.string], options);\n            FileSaver.saveAs(blob, csvStringAndName.name + '.csv');\n            // state.outputText.show is already false\n            return;\n        }\n        case ExportType.text: {\n            this.setState(state => ({\n                outputText: {show: !state.outputText.show, text: csvStringAndName.string},\n            }));\n            return;\n        }\n        }\n    }\n\n    private buttonTooltipContent(): string {\n        if (!this.props.store.state.initialized) {\n            return this.props.t('Excel API is not initialized');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default withTranslation('importExport')(connect(ExportComponent));"],"sourceRoot":""}