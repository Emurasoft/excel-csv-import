{"version":3,"sources":["webpack:///./src/connect.tsx","webpack:///./src/components/StoredComponent.tsx","webpack:///./src/components/DelimiterInput.tsx","webpack:///./src/components/NewlineDropdown.tsx","webpack:///./src/components/ProgressBar.tsx","webpack:///./src/components/BottomBar.tsx","webpack:///./src/components/ParserOutputBox.tsx","webpack:///./src/components/TitleBar.tsx","webpack:///./src/components/EncodingDropdownOptions.ts","webpack:///./src/components/EncodingDropdown.tsx"],"names":["connect","Component","props","Consumer","store","StoredComponent","namespace","defaultState","saveKeys","_namespace","_saveKeys","_initialSave","localStorage","_save","loadedState","loadState","state","Object","entries","entry","substring","length","includes","JSON","parse","this","children","saveState","save","setItem","clear","e","console","error","key","stringify","DelimiterInput","dropdownOnChange","_","option","dropdownToString","setState","otherSelected","onChange","getErrorMessage","value","showLengthError","_stringToDropdownKey","delimiter","codePoint","c","charCodeAt","toString","toUpperCase","padStart","customInput","className","description","onGetErrorMessage","deferredValidationTime","placeholder","spellCheck","label","options","text","responsiveMode","large","selectedKey","showCustomInput","NewlineDropdown","newlineSequeneceMenu","showAutoDetect","_options","ProgressBar","contents","progress","show","variant","stopLink","percentComplete","percent","aborting","onClick","BottomBar","style","marginTop","to","about","ParserOutputBox","parserOutput","type","output","rows","multiline","readOnly","TitleBar","firstVisit","visible","width","display","justifyContent","marginRight","mac","iconProps","iconName","title","ariaLabel","href","helpLink","target","rel","position","zIndex","height","backgroundColor","hidden","EncodingDropdownOptions","_dropdownOptions","Dropdown"],"mappings":"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","file":"export~import.8643fe935d6a7f12485c.js","sourcesContent":["import * as React from 'react';\nimport {Context, Store} from './Store';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect<P extends {store: Store}>(Component: React.ComponentClass): any {\n    // eslint-disable-next-line react/display-name\n    return (props: Pick<P, Exclude<keyof P, 'store'>>) => {\n        return (\n            <Context.Consumer>\n                {(store: Store) => <Component {...props} store={store}/>}\n            </Context.Consumer>\n        );\n    };\n}","import * as React from 'react';\n\ninterface StringKey {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport class StoredComponent<P = {}, S extends StringKey = {}> extends React.Component<P, S> {\n    /* eslint-disable @typescript-eslint/array-type */\n    public constructor(\n        props: Readonly<P>,\n        namespace: string,\n        defaultState: Readonly<S>,\n        saveKeys: ReadonlyArray<keyof S>\n    ) {\n        super(props);\n        this._namespace = namespace;\n        this._saveKeys = saveKeys;\n        try {\n            this._initialSave = localStorage && localStorage['StoredComponent-save'] === '\"true\"';\n            if (localStorage['check']){(() => {})()} // Additional check\n        } catch {\n            // Disables saving if calling localStorage causes an exception\n            this._initialSave = false;\n        }\n        this._save = this._initialSave;\n\n        let loadedState = {};\n        if (this._save) {\n            loadedState = StoredComponent.loadState(namespace, saveKeys as string[]);\n        }\n        this.state = {...defaultState, ...loadedState};\n    }\n\n    public render(): React.ReactNode {\n        return this.props.children;\n    }\n\n    // State is saved only if state is an object.\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null))\n        | (Pick<S, K> | S | null),\n    ): void {\n        super.setState(state);\n        if (this._save && typeof state === 'object') {\n            this.saveState(state);\n        }\n    }\n\n    public initialSaveStatus(): boolean {\n        return this._initialSave;\n    }\n\n    public setSaveStatus(save: boolean): void {\n        try {\n            if (save) {\n                localStorage.setItem('StoredComponent-save', '\"true\"');\n                this.saveState(this.state);\n            } else {\n                localStorage.clear();\n                localStorage.setItem('app-firstVisit', 'false'); // TODO refactor (if necessary)\n            }\n\n            this._save = save;\n        } catch (e) {\n            // eslint-disable-next-line no-console\n            console.error(e);\n        }\n    }\n\n    protected static loadState(namespace: string, saveKeys: string[]): {} {\n        const loadedState = {};\n        for (const entry of Object.entries(localStorage)) {\n            if (\n                entry[0].substring(0, namespace.length + 1) === namespace + '-'\n                && saveKeys.includes(entry[0].substring(namespace.length + 1))\n            ) {\n                loadedState[entry[0].substring(namespace.length + 1)] = JSON.parse(entry[1]);\n            }\n        }\n        return loadedState;\n    }\n\n    private readonly _namespace: string;\n    private readonly _saveKeys: ReadonlyArray<keyof S>;\n    private readonly _initialSave: boolean;\n    protected _save: boolean;\n\n    private saveState<K extends keyof S>(state: Pick<S, K> | S | null): void {\n        for (const entry of Object.entries(state)) {\n            if (this._saveKeys.includes(entry[0])) {\n                const key = this._namespace + '-' + entry[0];\n                localStorage.setItem(key, JSON.stringify(entry[1]));\n            }\n        }\n    }\n}","import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField, ResponsiveMode} from '@fluentui/react';\nimport * as style from './style.css';\nimport {BaseProps} from './BaseProps';\n\nexport const enum DropdownOptionKey {comma, space, tab, other}\n\ninterface Props extends BaseProps<string> {\n    showLengthError: boolean;\n}\n\ninterface State {\n    otherSelected: boolean;\n}\n\nexport class DelimiterInput extends React.Component<Props, State> {\n    public constructor(props) {\n        super(props);\n        this.state = {otherSelected: false};\n\n        this._stringToDropdownKey = {\n            '\\u002c': DropdownOptionKey.comma,\n            '\\u0020': DropdownOptionKey.space,\n            '\\u0009': DropdownOptionKey.tab,\n        };\n    }\n\n    public render(): React.ReactNode {\n\n        const dropdownOptions: IDropdownOption[] = [\n            {\n                key: DropdownOptionKey.comma,\n                text: 'Comma (U+002C)',\n            },\n            {\n                key: DropdownOptionKey.space,\n                text: 'Space (U+0020)',\n            },\n            {\n                key: DropdownOptionKey.tab,\n                text: 'Tab (U+0009)',\n            },\n            {\n                key: DropdownOptionKey.other,\n                text: 'Other',\n            },\n        ];\n\n        const customInput = (\n            <div className={style.smallDivider}>\n                <TextField\n                    className={style.monospace}\n                    value={this.props.value}\n                    onChange={(_, value) => this.props.onChange(value)}\n                    description={DelimiterInput.description(this.props.value)}\n                    onGetErrorMessage={this.getErrorMessage}\n                    deferredValidationTime={1}\n                    placeholder={'Enter custom delimiter'}\n                    spellCheck={false}\n                />\n            </div>\n        );\n\n        return (\n            <>\n                <Dropdown\n                    label={'Delimiter'}\n                    options={dropdownOptions}\n                    responsiveMode={ResponsiveMode.large}\n                    selectedKey={this.selectedKey()}\n                    onChange={this.dropdownOnChange}\n                />\n                {this.showCustomInput() ? customInput : null}\n            </>\n        );\n    }\n\n    private static description(delimiter: string): string {\n        if (delimiter.length == 1) {\n            return DelimiterInput.codePoint(delimiter);\n        } else {\n            return '\\u00A0';\n        }\n    }\n\n    private static codePoint(c: string): string {\n        return 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n    }\n\n    private readonly _stringToDropdownKey: {[key: string]: DropdownOptionKey};\n\n    private showCustomInput(): boolean {\n        if (this.state.otherSelected) {\n            return true;\n        }\n\n        return !['\\u002c', '\\u0020', '\\u0009'].includes(this.props.value);\n    }\n\n    private selectedKey(): DropdownOptionKey {\n        if (this.state.otherSelected) {\n            return DropdownOptionKey.other;\n        }\n\n        if (this.props.value in this._stringToDropdownKey) {\n            return this._stringToDropdownKey[this.props.value];\n        } else {\n            return DropdownOptionKey.other;\n        }\n    }\n\n    private dropdownOnChange = (_, option: IDropdownOption) => {\n        const dropdownToString = {\n            [DropdownOptionKey.comma]: '\\u002c',\n            [DropdownOptionKey.space]: '\\u0020',\n            [DropdownOptionKey.tab]: '\\u0009',\n            [DropdownOptionKey.other]: '',\n        };\n\n        this.setState({otherSelected: option.key === DropdownOptionKey.other});\n        this.props.onChange(dropdownToString[option.key]);\n    }\n\n    private getErrorMessage = (value: string) => {\n        if (this.props.showLengthError && value.length > 1) {\n            return 'Delimiter length must be 1';\n        } else {\n            return '';\n        }\n    }\n}\n","import * as React from 'react';\nimport {Dropdown, IDropdownOption, ResponsiveMode} from '@fluentui/react';\nimport {BaseProps} from './BaseProps';\nimport {NewlineSequence} from '../Parser';\n\ninterface Props extends BaseProps<NewlineSequence> {\n    showAutoDetect: boolean;\n}\n\nexport class NewlineDropdown extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n        const autoDetectOption: IDropdownOption = {\n            key: NewlineSequence.AutoDetect,\n            text: 'Auto-detect',\n        };\n\n        const newlineSequeneceMenu = [\n            {\n                key: NewlineSequence.CRLF,\n                text: 'CRLF',\n            },\n            {\n                key: NewlineSequence.CR,\n                text: 'CR',\n            },\n            {\n                key: NewlineSequence.LF,\n                text: 'LF',\n            },\n        ];\n\n        if (props.showAutoDetect) {\n            this._options = [autoDetectOption, ...newlineSequeneceMenu];\n        } else {\n            this._options = newlineSequeneceMenu;\n        }\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <Dropdown\n                label={'Newline sequence'}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                options={this._options}\n                onChange={(_, option) => this.props.onChange(option.key as NewlineSequence)}\n            />\n        );\n    }\n\n    private readonly _options: IDropdownOption[];\n}","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from '@fluentui/react';\nimport * as style from './style.css';\nimport {Progress} from '../Store';\n\ninterface Props {\n    // Fired when the \"Stop\" link is clicked.\n    onClick: () => void;\n    progress: Progress;\n}\n\nexport class ProgressBar extends React.Component<Props, {}> {\n    public render(): JSX.Element {\n        return (\n            <div className={style.smallDivider}>{this.contents()}</div>\n        );\n    }\n\n    private contents(): React.ReactNode {\n        if (this.props.progress.show) {\n            return (\n                <>\n                    <Text variant='small'>{this.stopLink()}</Text>\n                    <ProgressIndicator percentComplete={this.props.progress.percent}/>\n                </>\n            );\n        } else {\n            return <Text variant='small'>&nbsp;</Text>;\n        }\n    }\n\n    private stopLink(): React.ReactNode {\n        if (this.props.progress.aborting) {\n            return 'Stopping';\n        } else {\n            return <Link onClick={this.props.onClick}>Stop</Link>;\n        }\n    }\n}","import * as style from './style.css';\nimport {Link, Text} from '@fluentui/react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\n\nexport function BottomBar(): JSX.Element {\n    return (\n        <div\n            className={style.centerContent + ' ' + style.fullWidth}\n            style={{marginTop: '30px'}}\n        >\n            <Text variant='medium'>\n                <RouterLink to={Pages.about} className={style.removeUnderline}>\n                    <Link>About</Link>\n                </RouterLink>\n            </Text>\n        </div>\n    );\n}","import {OutputType, ParserOutput} from '../Store';\nimport {TextField} from '@fluentui/react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\nexport function ParserOutputBox(props: {parserOutput: ParserOutput}): JSX.Element {\n    switch (props.parserOutput.type) {\n    case OutputType.hidden:\n        return null;\n    case OutputType.info:\n        return (\n            <TextField\n                className={style.monospace}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    case OutputType.error:\n        return (\n            <TextField\n                className={style.monospace  + ' ' + style.redText}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    }\n}","import {StoredComponent} from './StoredComponent';\nimport {IconButton, PrimaryButton, Text} from '@fluentui/react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\ninterface Props {\n    text: string;\n    helpLink: string;\n    mac: boolean;\n}\n\ninterface State {\n    firstVisit: boolean;\n    visible: boolean;\n}\n\n// TitleBar contains the page title and a question mark icon in the top right corner for linking to\n// the help page. This app was designed to be self-explanatory, but Office Store policies demands\n// that a getting started prompt is provided. Their platform, their own stupid rules.\n// Policy 11.3: Your Office Add-in must provide a seamless first run experience, with a clear value\n// proposition.\n// Validation report: Please provide additional information on the first screen explaining how to\n// use the add-in, or directing the user to help / configuration information.\nexport class TitleBar extends StoredComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props, 'app', {firstVisit: true, visible: false}, ['firstVisit']);\n        this._save = true;\n        let firstVisit = {};\n        try {\n            firstVisit = StoredComponent.loadState('app', ['firstVisit']);\n        } catch { // localStorage may fail\n            firstVisit = {firstVisit: false};\n        }\n        this.state = {...this.state, ...firstVisit};\n    }\n\n    public render(): React.ReactNode {\n        return (\n            <>\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        justifyContent: 'space-between',\n                    }}\n                >\n                    <Text variant='xLarge'><strong>{this.props.text}</strong></Text>\n                    <div className={style.smallIcon}>\n                        <IconButton\n                            // Mac platform puts a big button in the top right corner\n                            style={{marginRight: this.props.mac ? '30px' : '4px'}}\n                            iconProps={{iconName: 'Help'}}\n                            title={'Help page'}\n                            ariaLabel={'Help page'}\n                            href={this.props.helpLink}\n                            target='_blank'\n                            rel='noopener noreferrer'\n                        />\n                    </div>\n                </div>\n                <div\n                    style={{\n                        position: 'absolute',\n                        zIndex: 1,\n                        width: '100%',\n                        height: '90%',\n                        backgroundColor: '#FFFFFF',\n                    }}\n                    hidden={!this.state.visible}\n                >\n                    <div className={style.pageMargin}>\n                        <Text variant='mediumPlus'>\n                            {/* eslint-disable-next-line max-len */}\n                            {'CSV Import+Export can open and save CSV files of various formats. If you need any help, the \"?\" icon in the top right corner will take you to the help page.'}\n                        </Text>\n                        <br /><br />\n                        <PrimaryButton\n                            text={'Continue'}\n                            onClick={() => this.setState({visible: false, firstVisit: false})}\n                        />\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    public componentDidMount(): void {\n        this.setState(state => ({visible: state.firstVisit}));\n    }\n}","import {IDropdownOption} from '@fluentui/react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n    // Use generateEncodingList.js to generate list\n    {\n        \"key\": \"Big5\",\n        \"text\": \"Big5\",\n    },\n    {\n        \"key\": \"EUC-JP\",\n        \"text\": \"EUC-JP\",\n    },\n    {\n        \"key\": \"EUC-KR\",\n        \"text\": \"EUC-KR\",\n    },\n    {\n        \"key\": \"gb18030\",\n        \"text\": \"gb18030\",\n    },\n    {\n        \"key\": \"GBK\",\n        \"text\": \"GBK\",\n    },\n    {\n        \"key\": \"IBM866\",\n        \"text\": \"IBM866 (Cyrillic)\",\n    },\n    {\n        \"key\": \"ISO-2022-JP\",\n        \"text\": \"ISO-2022-JP (JIS)\",\n    },\n    {\n        \"key\": \"ISO-8859-10\",\n        \"text\": \"ISO-8859-10 (Latin-6)\",\n    },\n    {\n        \"key\": \"ISO-8859-13\",\n        \"text\": \"ISO-8859-13 (Latin-7)\",\n    },\n    {\n        \"key\": \"ISO-8859-14\",\n        \"text\": \"ISO-8859-14 (Latin-8)\",\n    },\n    {\n        \"key\": \"ISO-8859-15\",\n        \"text\": \"ISO-8859-15 (Latin-9)\",\n    },\n    {\n        \"key\": \"ISO-8859-16\",\n        \"text\": \"ISO-8859-16 (Latin-10)\",\n    },\n    {\n        \"key\": \"ISO-8859-2\",\n        \"text\": \"ISO-8859-2 (Central European)\",\n    },\n    {\n        \"key\": \"ISO-8859-3\",\n        \"text\": \"ISO-8859-3 (Latin 3)\",\n    },\n    {\n        \"key\": \"ISO-8859-4\",\n        \"text\": \"ISO-8859-4 (Latin-4)\",\n    },\n    {\n        \"key\": \"ISO-8859-5\",\n        \"text\": \"ISO-8859-5 (Cryillic)\",\n    },\n    {\n        \"key\": \"ISO-8859-6\",\n        \"text\": \"ISO-8859-6 (Arabic)\",\n    },\n    {\n        \"key\": \"ISO-8859-7\",\n        \"text\": \"ISO-8859-7 (Greek)\",\n    },\n    {\n        \"key\": \"ISO-8859-8\",\n        \"text\": \"ISO-8859-8 (Hebrew)\",\n    },\n    {\n        \"key\": \"ISO-8859-8-I\",\n        \"text\": \"ISO-8859-8-I (Hebrew)\",\n    },\n    {\n        \"key\": \"KOI8-R\",\n        \"text\": \"KOI8-R\",\n    },\n    {\n        \"key\": \"KOI8-U\",\n        \"text\": \"KOI8-U\",\n    },\n    {\n        \"key\": \"x-mac-cyrillic\",\n        \"text\": \"Mac OS Cyrillic\",\n    },\n    {\n        \"key\": \"macintosh\",\n        \"text\": \"Mac OS Roman\",\n    },\n    {\n        \"key\": \"Shift_JIS\",\n        \"text\": \"Shift_JIS\",\n    },\n    {\n        \"key\": \"UTF-16BE\",\n        \"text\": \"UTF-16BE\",\n    },\n    {\n        \"key\": \"UTF-16LE\",\n        \"text\": \"UTF-16LE\",\n    },\n    {\n        \"key\": \"UTF-8\",\n        \"text\": \"UTF-8\",\n    },\n    {\n        \"key\": \"windows-1250\",\n        \"text\": \"windows-1250 (Central European)\",\n    },\n    {\n        \"key\": \"windows-1251\",\n        \"text\": \"windows-1251 (Cyrillic)\",\n    },\n    {\n        \"key\": \"windows-1252\",\n        \"text\": \"windows-1252 (Western European)\",\n    },\n    {\n        \"key\": \"windows-1253\",\n        \"text\": \"windows-1253 (Greek)\",\n    },\n    {\n        \"key\": \"windows-1254\",\n        \"text\": \"windows-1254 (Turkish)\",\n    },\n    {\n        \"key\": \"windows-1255\",\n        \"text\": \"windows-1255 (Hebrew)\",\n    },\n    {\n        \"key\": \"windows-1256\",\n        \"text\": \"windows-1256 (Arabic)\",\n    },\n    {\n        \"key\": \"windows-1257\",\n        \"text\": \"windows-1257 (Baltic)\",\n    },\n    {\n        \"key\": \"windows-1258\",\n        \"text\": \"windows-1258 (Vietnamese)\",\n    },\n    {\n        \"key\": \"windows-874\",\n        \"text\": \"windows-874 (Thai)\",\n    },\n];","import {BaseProps} from './BaseProps';\nimport * as React from 'react';\nimport {Dropdown, IDropdownOption} from '@fluentui/react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    hidden: boolean;\n}\n\nexport class EncodingDropdown extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n\n        const AutoDetectOption: IDropdownOption = {\n            'key': '',\n            'text': 'Auto-detect',\n        };\n\n        if (props.showAutoDetect) {\n            this._dropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n        } else {\n            this._dropdownOptions = EncodingDropdownOptions;\n        }\n    }\n\n    public render(): React.ReactNode {\n        if (this.props.hidden) {\n            return null;\n        } else {\n            return (\n                <>\n                    <Dropdown\n                        label={'Encoding'}\n                        selectedKey={this.props.value}\n                        options={this._dropdownOptions}\n                        onChange={(_, option) => this.props.onChange(option.key as string)}\n                    />\n                    <br/>\n                </>\n            );\n        }\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n}"],"sourceRoot":""}