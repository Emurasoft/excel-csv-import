{"version":3,"file":"import.2f0c527688a9af478772.js","mappings":"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","sources":["webpack://excel-csv-import/./components/SourceInput.tsx","webpack://excel-csv-import/./components/Import.tsx"],"sourcesContent":["import * as React from 'react';\nimport {InputType, Source} from '../parser';\nimport * as style from './style.css';\nimport {Dropdown, IDropdownOption, ResponsiveMode, TextField} from '@fluentui/react';\n\ninterface Props {\n\tvalue: Source;\n\tonChange: (value: Source) => void;\n}\n\nconst fileSourceMenu: IDropdownOption[] = [\n\t{\n\t\tkey: InputType.file,\n\t\ttext: 'File',\n\t},\n\t{\n\t\tkey: InputType.text,\n\t\ttext: 'Text input',\n\t},\n];\n\nfunction fileInput(onChange: (value: File) => void): React.ReactElement {\n\treturn (\n\t\t<>\n\t\t\t<input\n\t\t\t\tclassName={style.fullWidth}\n\t\t\t\ttype='file'\n\t\t\t\taccept='text/csv'\n\t\t\t\tonChange={e => onChange(e.target.files[0])}\n\t\t\t\tid='SourceInput-FileInput'\n\t\t\t/>\n\t\t\t<br />\n\t\t</>\n\t);\n}\n\nfunction textInput(value: string, onChange: (value: string) => void): React.ReactElement {\n\treturn (\n\t\t<TextField\n\t\t\tclassName={style.monospace}\n\t\t\tmultiline rows={10}\n\t\t\tspellCheck={false}\n\t\t\twrap='off'\n\t\t\tonChange={(_, text) => onChange(text)}\n\t\t\tvalue={value}\n\t\t\tid='SourceInput-TextInput'\n\t\t/>\n\t);\n}\n\nexport function SourceInput({value, onChange}: Props): React.ReactElement {\n\tlet input: React.ReactElement;\n\tswitch (value.inputType) {\n\tcase InputType.file:\n\t\tinput = fileInput(file => onChange({inputType: InputType.file, file, text: ''}));\n\t\tbreak;\n\tcase InputType.text:\n\t\tinput = textInput(\n\t\t\tvalue.text,\n\t\t\ttext => onChange({inputType: InputType.text, file: null, text}),\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Dropdown\n\t\t\t\tlabel={'Import type'}\n\t\t\t\toptions={fileSourceMenu}\n\t\t\t\tresponsiveMode={ResponsiveMode.large}\n\t\t\t\tselectedKey={value.inputType}\n\t\t\t\tonChange={\n\t\t\t\t\t(_, option) => onChange(\n\t\t\t\t\t\t{inputType: option.key as InputType, file: null, text: ''},\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tid='SourceInput-Dropdown'\n\t\t\t/>\n\t\t\t<div className={style.smallDivider} />\n\t\t\t{input}\n\t\t</>\n\t);\n}","import * as React from 'react';\nimport {useState} from 'react';\nimport {PrimaryButton, TooltipDelay, TooltipHost} from '@fluentui/react';\nimport {InputType, NewlineSequence, Source} from '../parser';\nimport {SourceInput} from './SourceInput';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {Page} from './Page';\nimport {namespacedUseLocalStorage} from '../useLocalStorage';\nimport {useDispatch, useSelector} from 'react-redux'\nimport {abort, Dispatch, importCSV} from '../action';\nimport {AppState} from '../state';\n\nconst useLocalStorage = namespacedUseLocalStorage('import');\n\nexport default function Import(): React.ReactElement {\n\tconst initialized = useSelector(state => state.initialized) as AppState['initialized'];\n\tconst platform = useSelector(state => state.platform) as AppState['platform'];\n\tconst progress = useSelector(state => state.progress) as AppState['progress'];\n\tconst output = useSelector(state => state.output) as AppState['output'];\n\tconst dispatch = useDispatch() as Dispatch;\n\n\tconst [source, setSource] = useState(\n\t\t{inputType: InputType.file, file: null, text: ''} as Source,\n\t);\n\tconst [delimiter, setDelimiter] = useLocalStorage('delimiter', '\\u002c');\n\tconst [newline, setNewline] = useLocalStorage('newline', NewlineSequence.AutoDetect);\n\tconst [encoding, setEncoding] = useLocalStorage('encoding', '');\n\n\tlet buttonTooltipContent: string;\n\tif (source.inputType == InputType.file && source.file == null) {\n\t\tbuttonTooltipContent = 'Import source is not selected';\n\t} else if (delimiter.length !== 1) {\n\t\tbuttonTooltipContent = 'Delimiter is invalid';\n\t} else if (!initialized) {\n\t\tbuttonTooltipContent = 'Excel API is not initialized';\n\t} else {\n\t\tbuttonTooltipContent = '';\n\t}\n\n\treturn (\n\t\t<Page\n\t\t\ttext={'Import CSV'}\n\t\t\thelpLink={'https://github.com/Emurasoft/excel-csv-import-help/blob/master/en.md'}\n\t\t\t// eslint-disable-next-line no-undef\n\t\t\tmac={platform === Office.PlatformType.Mac}\n\t\t>\n\t\t\t{/* eslint-enable no-undef */}\n\t\t\t<SourceInput\n\t\t\t\tvalue={source}\n\t\t\t\tonChange={setSource}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t{\n\t\t\t\tsource.inputType === InputType.file\n\t\t\t\t\t? <EncodingDropdown\n\t\t\t\t\t\tvalue={encoding}\n\t\t\t\t\t\tonChange={setEncoding}\n\t\t\t\t\t\tshowAutoDetect={true}\n\t\t\t\t\t/>\n\t\t\t\t\t: null\n\t\t\t}\n\t\t\t<DelimiterInput\n\t\t\t\tvalue={delimiter}\n\t\t\t\tonChange={setDelimiter}\n\t\t\t\tshowLengthError={true}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<NewlineDropdown\n\t\t\t\tvalue={newline}\n\t\t\t\tonChange={setNewline}\n\t\t\t\tshowAutoDetect={true}\n\t\t\t/>\n\t\t\t<br />\n\t\t\t<TooltipHost\n\t\t\t\tstyles={{root: {display: 'inline-block'}} /* Resize to fit button */}\n\t\t\t\tcontent={buttonTooltipContent}\n\t\t\t\tdelay={TooltipDelay.zero}\n\t\t\t>\n\t\t\t\t<PrimaryButton\n\t\t\t\t\tdisabled={buttonTooltipContent !== ''}\n\t\t\t\t\tonClick={\n\t\t\t\t\t\tasync () => dispatch(importCSV({source, newline, delimiter, encoding}))\n\t\t\t\t\t}\n\t\t\t\t\ttext={'Import CSV'}\n\t\t\t\t/>\n\t\t\t</TooltipHost>\n\t\t\t<br />\n\t\t\t<ProgressBar\n\t\t\t\tonClick={() => dispatch(abort())}\n\t\t\t\tprogress={progress}\n\t\t\t/>\n\t\t\t<ParserOutputBox output={output} />\n\t\t\t<BottomBar />\n\t\t</Page>\n\t);\n}"],"names":["fileSourceMenu","key","text","SourceInput","input","value","onChange","inputType","file","className","style","fullWidth","type","accept","e","target","files","id","TextField","monospace","multiline","rows","spellCheck","wrap","_","textInput","Dropdown","label","options","responsiveMode","selectedKey","option","smallDivider","Import","buttonTooltipContent","initialized","state","platform","progress","output","dispatch","useState","source","setSource","delimiter","setDelimiter","newline","setNewline","encoding","setEncoding","length","Page","helpLink","mac","Office","PlatformType","Mac","EncodingDropdown","showAutoDetect","DelimiterInput","showLengthError","NewlineDropdown","TooltipHost","styles","root","display","content","delay","PrimaryButton","disabled","onClick","ProgressBar","ParserOutputBox","BottomBar"],"sourceRoot":""}