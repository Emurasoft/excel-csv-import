{"version":3,"sources":["webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./src/components/Export.tsx"],"names":["global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","c","b","d","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","type","Blob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","apply","ExportType","ExportComponent","_StoredComponent","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","exportType","file","delimiter","newline","_Parser__WEBPACK_IMPORTED_MODULE_10__","CRLF","encoding","outputText","show","text","buttonOnClick","_asyncToGenerator","regeneratorRuntime","mark","_callee","newOutputText","exportOptions","csvStringAndName","wrap","_context","prev","next","state","Object","assign","setState","store","sent","abrupt","saveOrOutput","stop","_inherits","_StoredComponent__WEBPACK_IMPORTED_MODULE_17__","key","value","_this2","outputTextField","react__WEBPACK_IMPORTED_MODULE_0__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_4__","label","className","_style_css__WEBPACK_IMPORTED_MODULE_14__","readOnly","multiline","rows","spellCheck","largeFileWarning","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_5__","style","color","variant","_TitleBar__WEBPACK_IMPORTED_MODULE_18__","helpLink","mac","platform","Office","PlatformType","Mac","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_6__","options","responsiveMode","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_19__","large","selectedKey","onChange","_","option","id","_EncodingDropdown__WEBPACK_IMPORTED_MODULE_12__","hidden","showAutoDetect","_DelimiterInput__WEBPACK_IMPORTED_MODULE_2__","showLengthError","_NewlineDropdown__WEBPACK_IMPORTED_MODULE_3__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_7__","styles","root","display","content","buttonTooltipContent","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_8__","onClick","disabled","largeFile","_ProgressBar__WEBPACK_IMPORTED_MODULE_13__","abort","progress","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_9__","inlineLabel","defaultChecked","initialSaveStatus","checked","setSaveStatus","_ParserOutputBox__WEBPACK_IMPORTED_MODULE_16__","parserOutput","_BottomBar__WEBPACK_IMPORTED_MODULE_15__","blob","string","file_saver__WEBPACK_IMPORTED_MODULE_11__","initialized","__webpack_exports__","_connect__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"export.bcb418d2c6c78080a828.js","sourcesContent":["(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {Store} from '../Store';\nimport * as React from 'react';\nimport {connect} from '../connect';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {\n    Dropdown,\n    PrimaryButton,\n    Text,\n    TextField,\n    Toggle,\n    TooltipHost,\n} from 'office-ui-fabric-react';\nimport {CsvStringAndName, ExportOptions, NewlineSequence} from '../Parser';\nimport * as FileSaver from 'file-saver';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport * as style from './style.css';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {StoredComponent} from './StoredComponent';\nimport {MemoryHistory} from 'history';\nimport {TitleBar} from './TitleBar';\nimport {\n    ResponsiveMode,\n} from \"office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode\";\n\nexport interface OutputText {\n    // If show is false, do not show text.\n    show: boolean;\n    text: string;\n}\n\ninterface Props {\n    store: Store;\n    history: MemoryHistory;\n}\n\nexport enum ExportType {file, text}\n\ninterface State extends ExportOptions {\n    exportType: ExportType;\n    outputText: OutputText;\n    encoding: string;\n}\n\nexport class ExportComponent extends StoredComponent<Props, State> {\n    public constructor(props: Props) {\n        super(props, 'export', {\n            exportType: ExportType.file,\n            delimiter: '\\u002c',\n            newline: NewlineSequence.CRLF,\n            encoding: 'UTF-8',\n            outputText: {\n                show: false,\n                text: '',\n            },\n        }, ['exportType', 'delimiter', 'newline', 'encoding']);\n    }\n\n    public render(): React.ReactNode {\n        const outputTextField = (\n            <TextField\n                label={'Export result'}\n                className={style.monospace}\n                readOnly={true}\n                multiline rows={15}\n                spellCheck={false}\n                wrap='off'\n                value={this.state.outputText.text}\n            />\n        );\n\n        const largeFileWarning = (\n            <Text style={{color: 'red'}} variant='medium'>\n                {'Large file export is not supported'}\n            </Text>\n        );\n\n        const helpLink\n            = 'https://github.com/Emurasoft/excel-csv-import-help/blob/master/en.md#export-csv';\n\n        return (\n            <>\n                <div className={style.pageMargin}>\n                    <TitleBar\n                        text={'Export CSV'}\n                        helpLink={helpLink}\n                        // eslint-disable-next-line no-undef\n                        mac={this.props.store.state.platform === Office.PlatformType.Mac}\n                    />\n                    <Dropdown\n                        label={'Export type'}\n                        options={[\n                            {\n                                key: ExportType.file,\n                                text: 'File',\n                            },\n                            {\n                                key: ExportType.text,\n                                text: 'Textbox',\n                            },\n                        ]}\n                        responsiveMode={ResponsiveMode.large}\n                        selectedKey={this.state.exportType}\n                        onChange={\n                            (_, option) => this.setState({exportType: option.key as ExportType})\n                        }\n                        id={'exportTypeDropdown'}\n                    />\n                    <br />\n                    <EncodingDropdown\n                        value={this.state.encoding}\n                        onChange={(encoding) => this.setState({encoding})}\n                        hidden={this.state.exportType === ExportType.text}\n                        showAutoDetect={false}\n                    />\n                    <DelimiterInput\n                        value={this.state.delimiter}\n                        onChange={(delimiter) => this.setState({delimiter})}\n                        showLengthError={false}\n                    />\n                    <br />\n                    <NewlineDropdown\n                        value={this.state.newline}\n                        onChange={(newline) => this.setState({newline})}\n                        showAutoDetect={false}\n                    />\n                    <br />\n                    <TooltipHost\n                        styles={{root: {display: 'inline-block'}}}\n                        content={this.buttonTooltipContent()}\n                    >\n                        <PrimaryButton\n                            onClick={this.buttonOnClick}\n                            disabled={this.buttonTooltipContent() !== ''}\n                            text={'Export to CSV'}\n                        />\n                    </TooltipHost>\n                    <br />\n                    {this.props.store.state.largeFile ? largeFileWarning : null}\n                    <ProgressBar\n                        onClick={this.props.store.abort}\n                        progress={this.props.store.state.progress}\n                    />\n                    <Toggle\n                        inlineLabel label={'Save options'}\n                        defaultChecked={this.initialSaveStatus()}\n                        onChange={(_, checked) => this.setSaveStatus(checked)}\n                    />\n                    {this.state.outputText.show ? outputTextField : null}\n                    <ParserOutputBox parserOutput={this.props.store.state.parserOutput} />\n                    <BottomBar />\n                </div>\n            </>\n        );\n    }\n\n    private buttonOnClick = async () => {\n        function newOutputText(state, exportOptions): OutputText {\n            // If exportType is text:\n            //      If last outputText.show was true, flip twice otherwise change once later\n            // If exportType is a file, show is set to false once.\n            if (exportOptions.exportType === ExportType.text) {\n                if (exportOptions.outputText.show) {\n                    return {show: !state.outputText.show, text: state.outputText.text};\n                } else {\n                    return {show: state.outputText.show, text: state.outputText.text};\n                }\n            } else {\n                return {show: false, text: ''};\n            }\n        }\n\n        // Copy values before async operation\n        const exportOptions = {...this.state};\n\n        this.setState(state => ({outputText: newOutputText(state, exportOptions)}));\n\n        const csvStringAndName = await this.props.store.csvStringAndName(this.state);\n        if (csvStringAndName === null) {\n            return;\n        }\n\n        this.saveOrOutput(csvStringAndName, exportOptions);\n    }\n\n    private saveOrOutput(csvStringAndName: CsvStringAndName, exportOptions: State): void {\n        switch (exportOptions.exportType) {\n        case ExportType.file: {\n            const options = {type: 'text/csv;charset=' + exportOptions.encoding};\n            const blob = new Blob([csvStringAndName.string], options);\n            FileSaver.saveAs(blob, csvStringAndName.name + '.csv');\n            // state.outputText.show is already false\n            return;\n        }\n        case ExportType.text: {\n            this.setState(state => ({\n                outputText: {show: !state.outputText.show, text: csvStringAndName.string},\n            }));\n            return;\n        }\n        }\n    }\n\n    private buttonTooltipContent(): string {\n        if (!this.props.store.state.initialized) {\n            return 'Excel API is not initialized';\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default connect(ExportComponent);"],"sourceRoot":""}