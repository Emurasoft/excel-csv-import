{"version":3,"sources":["webpack:///./src/components/DelimiterInput.tsx","webpack:///./src/components/NewlineDropdown.tsx","webpack:///./src/components/ProgressBar.tsx","webpack:///./src/components/BottomBar.tsx","webpack:///./src/components/ParserOutputBox.tsx","webpack:///./src/components/StoredComponent.tsx","webpack:///./node_modules/file-saver/dist/FileSaver.min.js","webpack:///./src/components/EncodingDropdownOptions.ts","webpack:///./src/components/EncodingDropdown.tsx","webpack:///./src/components/ExportTypeDropdown.tsx","webpack:///./src/components/Export.tsx","webpack:///./src/connect.tsx"],"names":["__webpack_require__","d","__webpack_exports__","DelimiterInput","DropdownOptionKey","react__WEBPACK_IMPORTED_MODULE_0__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_1__","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_2__","_style_css__WEBPACK_IMPORTED_MODULE_3__","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_4__","react_i18next__WEBPACK_IMPORTED_MODULE_5__","DelimiterInputComponent","[object Object]","props","super","this","dropdownOnChange","_","option","dropdownToString","autoDetect","comma","space","tab","other","setState","otherSelected","key","onChange","getErrorMessage","value","showLengthError","length","t","state","_stringToDropdownKey",","," ","\t","DropdownOptionsNoAutoDetect","text","AutoDetectOption","showAutoDetect","_dropdownOptions","customInput","className","description","onGetErrorMessage","deferredValidationTime","placeholder","label","options","responsiveMode","large","selectedKey","showCustomInput","delimiter","codePoint","c","charCodeAt","toString","toUpperCase","padStart","delimitersInDropdown","push","includes","Object","NewlineDropdown","office_ui_fabric_react_lib_commonjs_utilities_decorators_withResponsiveMode__WEBPACK_IMPORTED_MODULE_1__","_Parser__WEBPACK_IMPORTED_MODULE_3__","react_i18next__WEBPACK_IMPORTED_MODULE_4__","autoDetectOption","AutoDetect","newlineSequeneceMenu","CRLF","CR","LF","_options","ProgressBar","office_ui_fabric_react__WEBPACK_IMPORTED_MODULE_3__","_style_css__WEBPACK_IMPORTED_MODULE_4__","contents","progress","show","variant","onClick","percentComplete","percent","BottomBar","_style_css__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_2__","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","_Pages__WEBPACK_IMPORTED_MODULE_4__","to","about","ParserOutputBox","_Store__WEBPACK_IMPORTED_MODULE_0__","parserOutput","type","hidden","info","output","rows","multiline","spellCheck","readOnly","error","StoredComponent","namespace","defaultState","saveKeys","_namespace","_saveKeys","_initialSave","localStorage","_save","loadedState","loadState","assign","children","saveState","save","setItem","clear","entry","entries","substring","JSON","parse","stringify","global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","undefined","b","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","saveAs","HTMLAnchorElement","prototype","g","h","i","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","Blob","title","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","apply","EncodingDropdownOptions","EncodingDropdown","es","react","Dropdown","ExportTypeDropdown","Parser","file","withResponsiveMode","Export_ExportComponent","exportType","newline","encoding","outputText","buttonOnClick","async","newOutputText","exportOptions","csvStringAndName","store","saveOrOutput","outputTextField","TextField","style","wrap","largeFileWarning","Text","color","TooltipHost","styles","root","display","content","buttonTooltipContent","PrimaryButton","disabled","largeFile","abort","Toggle","inlineLabel","defaultChecked","initialSaveStatus","checked","setSaveStatus","blob","string","FileSaver_min","initialized","connect","_Store__WEBPACK_IMPORTED_MODULE_1__","Component","Consumer"],"mappings":"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","file":"export.240afb5f335d2e6cde0a.js","sourcesContent":["import * as React from 'react';\nimport {Dropdown, IDropdownOption, TextField} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {BaseProps} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\n\nexport enum DropdownOptionKey {autoDetect, comma, space, tab, other}\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    showLengthError: boolean;\n}\n\ninterface State {\n    otherSelected: boolean;\n}\n\nexport class DelimiterInputComponent extends React.Component<Props, State> {\n    public constructor(props) {\n        super(props);\n        this.state = {otherSelected: false};\n\n        this._stringToDropdownKey = {\n            '\\u002c': DropdownOptionKey.comma,\n            '\\u0020': DropdownOptionKey.space,\n            '\\u0009': DropdownOptionKey.tab,\n        };\n\n        const DropdownOptionsNoAutoDetect: IDropdownOption[] = [\n            {\n                key: DropdownOptionKey.comma,\n                text: 'Comma (U+002C)',\n            },\n            {\n                key: DropdownOptionKey.space,\n                text: 'Space (U+0020)',\n            },\n            {\n                key: DropdownOptionKey.tab,\n                text: 'Tab (U+0009)',\n            },\n            {\n                key: DropdownOptionKey.other,\n                text: props.t('Other'),\n            },\n        ];\n\n        const AutoDetectOption: IDropdownOption = {\n            key: DropdownOptionKey.autoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._stringToDropdownKey[''] = DropdownOptionKey.autoDetect;\n            this._dropdownOptions = [AutoDetectOption, ...DropdownOptionsNoAutoDetect];\n        } else {\n            this._dropdownOptions = DropdownOptionsNoAutoDetect;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const customInput = (\n            <div className={style.smallDivider}>\n                <TextField\n                    className={style.monospace}\n                    value={this.props.value}\n                    onChange={(_, value) => this.props.onChange(value)}\n                    description={DelimiterInputComponent.description(this.props.value)}\n                    onGetErrorMessage={this.getErrorMessage}\n                    deferredValidationTime={1}\n                    placeholder={t('Enter custom delimiter')}\n                />\n            </div>\n        );\n\n        return (\n            <>\n                <Dropdown\n                    label={t('Delimiter')}\n                    options={this._dropdownOptions}\n                    responsiveMode={ResponsiveMode.large}\n                    selectedKey={this.selectedKey()}\n                    onChange={this.dropdownOnChange}\n                />\n                {this.showCustomInput() ? customInput : null}\n            </>\n        );\n    }\n\n    private static description(delimiter: string): string {\n        if (delimiter.length == 1) {\n            return DelimiterInputComponent.codePoint(delimiter);\n        } else {\n            return '';\n        }\n    }\n\n    private static codePoint(c: string): string {\n        return 'U+' + c[0].charCodeAt(0).toString(16).toUpperCase().padStart(4, '0');\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n    private readonly _stringToDropdownKey: {[key: string]: DropdownOptionKey};\n\n    private showCustomInput(): boolean {\n        if (this.state.otherSelected) {\n            return true;\n        }\n\n        const delimitersInDropdown = ['\\u002c', '\\u0020', '\\u0009'];\n        if (this.props.showAutoDetect) {\n            delimitersInDropdown.push('');\n        }\n        return !delimitersInDropdown.includes(this.props.value);\n    }\n\n    private selectedKey(): DropdownOptionKey {\n        if (this.state.otherSelected) {\n            return DropdownOptionKey.other;\n        }\n\n        if (this.props.value in this._stringToDropdownKey) {\n            return this._stringToDropdownKey[this.props.value];\n        } else {\n            return DropdownOptionKey.other;\n        }\n    }\n\n    private dropdownOnChange = (_, option: IDropdownOption) => {\n        const dropdownToString = {\n            [DropdownOptionKey.autoDetect]: '',\n            [DropdownOptionKey.comma]: '\\u002c',\n            [DropdownOptionKey.space]: '\\u0020',\n            [DropdownOptionKey.tab]: '\\u0009',\n            [DropdownOptionKey.other]: '',\n        };\n\n        this.setState({otherSelected: option.key === DropdownOptionKey.other});\n        this.props.onChange(dropdownToString[option.key]);\n    }\n\n    private getErrorMessage = (value: string) => {\n        if (this.props.showLengthError && value.length > 1) {\n            return this.props.t('Delimiter length must be 0 or 1');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport const DelimiterInput = withTranslation('importExport')(DelimiterInputComponent);","import * as React from 'react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {BaseProps} from './BaseProps';\nimport {NewlineSequence} from '../Parser';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<NewlineSequence> {\n    showAutoDetect: boolean;\n}\n\nexport class NewlineDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n        const autoDetectOption: IDropdownOption = {\n            key: NewlineSequence.AutoDetect,\n            text: props.t('Auto-detect'),\n        };\n\n        const newlineSequeneceMenu = [\n            {\n                key: NewlineSequence.CRLF,\n                text: 'CRLF',\n            },\n            {\n                key: NewlineSequence.CR,\n                text: 'CR',\n            },\n            {\n                key: NewlineSequence.LF,\n                text: 'LF',\n            },\n        ];\n\n        if (props.showAutoDetect) {\n            this._options = [autoDetectOption, ...newlineSequeneceMenu];\n        } else {\n            this._options = newlineSequeneceMenu;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        return (\n            <Dropdown\n                label={t('Newline sequence')}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                options={this._options}\n                onChange={(_, option) => this.props.onChange(option.key as NewlineSequence)}\n            />\n        );\n    }\n\n    private readonly _options: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const NewlineDropdown = withTranslation('importExport')(NewlineDropdownComponent);","import * as React from 'react';\nimport {Link, ProgressIndicator, Text} from 'office-ui-fabric-react';\nimport * as style from './style.css';\nimport {Progress} from '../Store';\nimport {withTranslation} from 'react-i18next';\nimport {TranslateFunction} from './BaseProps';\n\ninterface Props extends TranslateFunction{\n    // Fired when the \"Stop\" link is clicked.\n    onClick: () => void;\n    progress: Progress;\n}\n\nexport class ProgressBarComponent extends React.Component<Props, {}> {\n    public render(): React.ReactNode {\n        let contents: React.ReactNode;\n        if (this.props.progress.show) {\n            contents = (\n                <>\n                    <Text variant='small'>\n                        <Link onClick={this.props.onClick}>{this.props.t('Stop')}</Link>\n                    </Text>\n                    <ProgressIndicator percentComplete={this.props.progress.percent} />\n                </>\n            );\n        } else {\n            contents = <Text variant='small'>&nbsp;</Text>;\n        }\n\n        return (\n            <div className={style.smallDivider}>\n                {contents}\n            </div>\n        );\n    }\n}\n\n// @ts-ignore\nexport const ProgressBar = withTranslation('importExport')(ProgressBarComponent)","import * as style from './style.css';\nimport {Text} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport {Link as RouterLink} from 'react-router-dom';\nimport {Pages} from '../Pages';\nimport {useTranslation} from 'react-i18next';\n\nexport function BottomBar(): JSX.Element {\n    const {t} = useTranslation('importExport');\n    return (\n        <div className={style.bottomBar}>\n            <Text variant='medium'>\n                <RouterLink to={Pages.about}>{t('About')}</RouterLink>\n            </Text>\n        </div>\n    );\n}","import {OutputType, ParserOutput} from '../Store';\nimport {TextField} from 'office-ui-fabric-react';\nimport * as React from 'react';\nimport * as style from './style.css';\n\nexport function ParserOutputBox(props: {parserOutput: ParserOutput}): JSX.Element {\n    switch (props.parserOutput.type) {\n    case OutputType.hidden:\n        return null;\n    case OutputType.info:\n        return (\n            <TextField\n                className={style.monospace}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    case OutputType.error:\n        return (\n            <TextField\n                className={style.monospace  + ' ' + style.redText}\n                value={props.parserOutput.output}\n                rows={20} multiline\n                spellCheck={false}\n                readOnly\n            />\n        );\n    }\n}","import * as React from 'react';\n\ninterface StringKey {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\n\nexport class StoredComponent<P = {}, S extends StringKey = {}> extends React.Component<P, S> {\n    public constructor(\n        props: Readonly<P>,\n        namespace: string,\n        defaultState: Readonly<S>,\n        saveKeys: ReadonlyArray<keyof S>\n    ) {\n        super(props);\n        this._namespace = namespace;\n        this._saveKeys = saveKeys;\n        this._initialSave = localStorage && localStorage['StoredComponent-save'] === '\"true\"';\n        this._save = this._initialSave;\n\n        let loadedState = {};\n        if (this._save) {\n            loadedState = StoredComponent.loadState(namespace, saveKeys as string[]);\n        }\n        this.state = {...defaultState, ...loadedState};\n    }\n\n    public render(): React.ReactNode {\n        return this.props.children;\n    }\n\n    // State is saved only if state is an object.\n    public setState<K extends keyof S>(\n        state: ((prevState: Readonly<S>, props: Readonly<P>) => (Pick<S, K> | S | null))\n        | (Pick<S, K> | S | null),\n    ): void {\n        super.setState(state);\n        if (this._save && typeof state === 'object') {\n            this.saveState(state);\n        }\n    }\n\n    public initialSaveStatus(): boolean {\n        return this._initialSave;\n    }\n\n    public setSaveStatus(save: boolean): void {\n        this._save = save;\n\n        if (save) {\n            localStorage.setItem('StoredComponent-save', '\"true\"');\n            this.saveState(this.state);\n        } else {\n            localStorage.clear();\n        }\n    }\n\n    private static loadState(namespace: string, saveKeys: string[]): {} {\n        const loadedState = {};\n        for (const entry of Object.entries(localStorage)) {\n            if (\n                entry[0].substring(0, namespace.length + 1) === namespace + '-'\n                && saveKeys.includes(entry[0].substring(namespace.length + 1))\n            ) {\n                loadedState[entry[0].substring(namespace.length + 1)] = JSON.parse(entry[1]);\n            }\n        }\n        return loadedState;\n    }\n\n    private readonly _namespace: string;\n    private readonly _saveKeys: ReadonlyArray<keyof S>;\n    private readonly _initialSave: boolean;\n    private _save: boolean;\n\n    private saveState<K extends keyof S>(state: Pick<S, K> | S | null): void {\n        for (const entry of Object.entries(state)) {\n            if (this._saveKeys.includes(entry[0])) {\n                const key = this._namespace + '-' + entry[0];\n                localStorage.setItem(key, JSON.stringify(entry[1]));\n            }\n        }\n    }\n}","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(b,c,d){var e=new XMLHttpRequest;e.open(\"GET\",b),e.responseType=\"blob\",e.onload=function(){a(e.response,c,d)},e.onerror=function(){console.error(\"could not download file\")},e.send()}function d(a){var b=new XMLHttpRequest;return b.open(\"HEAD\",a,!1),b.send(),200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(a,b,d,e){if(e=e||open(\"\",\"_blank\"),e&&(e.document.title=e.document.body.innerText=\"downloading...\"),\"string\"==typeof a)return c(a,b,d);var g=\"application/octet-stream\"===a.type,h=/constructor/i.test(f.HTMLElement)||f.safari,i=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((i||g&&h)&&\"object\"==typeof FileReader){var j=new FileReader;j.onloadend=function(){var a=j.result;a=i?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),e?e.location.href=a:location=a,e=null},j.readAsDataURL(a)}else{var k=f.URL||f.webkitURL,l=k.createObjectURL(a);e?e.location=l:location.href=l,e=null,setTimeout(function(){k.revokeObjectURL(l)},4E4)}});f.saveAs=a.saveAs=a,\"undefined\"!=typeof module&&(module.exports=a)});\n\n//# sourceMappingURL=FileSaver.min.js.map","import {IDropdownOption} from 'office-ui-fabric-react';\n\nexport const EncodingDropdownOptions: IDropdownOption[] = [\n    // Use generateEncodingList.js to generate list\n    {\n        \"key\": \"Big5\",\n        \"text\": \"Big5\",\n    },\n    {\n        \"key\": \"EUC-JP\",\n        \"text\": \"EUC-JP\",\n    },\n    {\n        \"key\": \"EUC-KR\",\n        \"text\": \"EUC-KR\",\n    },\n    {\n        \"key\": \"GBK\",\n        \"text\": \"GBK\",\n    },\n    {\n        \"key\": \"IBM866\",\n        \"text\": \"IBM866 (Cyrillic)\",\n    },\n    {\n        \"key\": \"ISO-2022-JP\",\n        \"text\": \"ISO-2022-JP (JIS)\",\n    },\n    {\n        \"key\": \"ISO-8859-10\",\n        \"text\": \"ISO-8859-10 (Latin-6)\",\n    },\n    {\n        \"key\": \"ISO-8859-13\",\n        \"text\": \"ISO-8859-13 (Latin-7)\",\n    },\n    {\n        \"key\": \"ISO-8859-14\",\n        \"text\": \"ISO-8859-14 (Latin-8)\",\n    },\n    {\n        \"key\": \"ISO-8859-15\",\n        \"text\": \"ISO-8859-15 (Latin-9)\",\n    },\n    {\n        \"key\": \"ISO-8859-16\",\n        \"text\": \"ISO-8859-16 (Latin-10)\",\n    },\n    {\n        \"key\": \"ISO-8859-2\",\n        \"text\": \"ISO-8859-2 (Central European)\",\n    },\n    {\n        \"key\": \"ISO-8859-3\",\n        \"text\": \"ISO-8859-3 (Latin 3)\",\n    },\n    {\n        \"key\": \"ISO-8859-4\",\n        \"text\": \"ISO-8859-4 (Latin-4)\",\n    },\n    {\n        \"key\": \"ISO-8859-5\",\n        \"text\": \"ISO-8859-5 (Cryillic)\",\n    },\n    {\n        \"key\": \"ISO-8859-6\",\n        \"text\": \"ISO-8859-6 (Arabic)\",\n    },\n    {\n        \"key\": \"ISO-8859-7\",\n        \"text\": \"ISO-8859-7 (Greek)\",\n    },\n    {\n        \"key\": \"ISO-8859-8\",\n        \"text\": \"ISO-8859-8 (Hebrew)\",\n    },\n    {\n        \"key\": \"ISO-8859-8-I\",\n        \"text\": \"ISO-8859-8-I (Hebrew)\",\n    },\n    {\n        \"key\": \"KOI8-R\",\n        \"text\": \"KOI8-R\",\n    },\n    {\n        \"key\": \"KOI8-U\",\n        \"text\": \"KOI8-U\",\n    },\n    {\n        \"key\": \"Shift_JIS\",\n        \"text\": \"Shift_JIS\",\n    },\n    {\n        \"key\": \"UTF-16BE\",\n        \"text\": \"UTF-16BE\",\n    },\n    {\n        \"key\": \"UTF-16LE\",\n        \"text\": \"UTF-16LE\",\n    },\n    {\n        \"key\": \"UTF-8\",\n        \"text\": \"UTF-8\",\n    },\n    {\n        \"key\": \"gb18030\",\n        \"text\": \"gb18030\",\n    },\n    {\n        \"key\": \"macintosh\",\n        \"text\": \"macintosh\",\n    },\n    {\n        \"key\": \"replacement\",\n        \"text\": \"replacement\",\n    },\n    {\n        \"key\": \"windows-1250\",\n        \"text\": \"windows-1250 (Central European)\",\n    },\n    {\n        \"key\": \"windows-1251\",\n        \"text\": \"windows-1251 (Cyrillic)\",\n    },\n    {\n        \"key\": \"windows-1252\",\n        \"text\": \"windows-1252 (Western European)\",\n    },\n    {\n        \"key\": \"windows-1253\",\n        \"text\": \"windows-1253 (Greek)\",\n    },\n    {\n        \"key\": \"windows-1254\",\n        \"text\": \"windows-1254 (Turkish)\",\n    },\n    {\n        \"key\": \"windows-1255\",\n        \"text\": \"windows-1255 (Hebrew)\",\n    },\n    {\n        \"key\": \"windows-1256\",\n        \"text\": \"windows-1256 (Arabic)\",\n    },\n    {\n        \"key\": \"windows-1257\",\n        \"text\": \"windows-1257 (Baltic)\",\n    },\n    {\n        \"key\": \"windows-1258\",\n        \"text\": \"windows-1258 (Vietnamese)\",\n    },\n    {\n        \"key\": \"windows-874\",\n        \"text\": \"windows-874 (Thai)\",\n    },\n    {\n        \"key\": \"x-mac-cyrillic\",\n        \"text\": \"x-mac-cyrillic\",\n    },\n    {\n        \"key\": \"x-user-defined\",\n        \"text\": \"x-user-defined\",\n    },\n];","import {BaseProps} from './BaseProps';\nimport * as React from 'react';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {EncodingDropdownOptions} from './EncodingDropdownOptions';\nimport {withTranslation} from 'react-i18next';\n\ninterface Props extends BaseProps<string> {\n    showAutoDetect: boolean;\n    hidden: boolean;\n}\n\nexport class EncodingDropdownComponent extends React.Component<Props, {}> {\n    public constructor(props: Props) {\n        super(props);\n\n        const AutoDetectOption: IDropdownOption = {\n            'key': '',\n            'text': props.t('Auto-detect'),\n        };\n\n        if (props.showAutoDetect) {\n            this._dropdownOptions = [AutoDetectOption, ...EncodingDropdownOptions];\n        } else {\n            this._dropdownOptions = EncodingDropdownOptions;\n        }\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        if (this.props.hidden) {\n            return null;\n        } else {\n            return (\n                <>\n                    <Dropdown\n                        label={t('Encoding')}\n                        selectedKey={this.props.value}\n                        options={this._dropdownOptions}\n                        onChange={(_, option) => this.props.onChange(option.key as string)}\n                    />\n                    <br/>\n                </>\n            );\n        }\n    }\n\n    private readonly _dropdownOptions: IDropdownOption[];\n}\n\n// @ts-ignore\nexport const EncodingDropdown = withTranslation('importExport')(EncodingDropdownComponent);","import * as React from 'react';\nimport {BaseProps} from './BaseProps';\nimport {Dropdown, IDropdownOption} from 'office-ui-fabric-react';\nimport {\n    ResponsiveMode,\n} from 'office-ui-fabric-react/lib-commonjs/utilities/decorators/withResponsiveMode';\nimport {ExportType} from '../Parser';\nimport {withTranslation} from 'react-i18next';\n\nexport class ExportTypeDropdownComponent extends React.Component<BaseProps<ExportType>, {}> {\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const options: IDropdownOption[] = [\n            {\n                key: ExportType.file,\n                text: t('File'),\n            },\n            {\n                key: ExportType.text,\n                text: t('Textbox'),\n            },\n        ];\n\n        return (\n            <Dropdown\n                label={t('Export type')}\n                options={options}\n                responsiveMode={ResponsiveMode.large}\n                selectedKey={this.props.value}\n                onChange={(_, option) => this.props.onChange(option.key as ExportType)}\n            />\n        );\n    }\n}\n\n// @ts-ignore\nexport const ExportTypeDropdown = withTranslation('importExport')(ExportTypeDropdownComponent);","import {StoreComponent} from '../Store';\nimport * as React from 'react';\nimport {connect} from '../connect';\nimport {ExportTypeDropdown} from './ExportTypeDropdown';\nimport {DelimiterInput} from './DelimiterInput';\nimport {NewlineDropdown} from './NewlineDropdown';\nimport {PrimaryButton, Text, TextField, Toggle, TooltipHost} from 'office-ui-fabric-react';\nimport {CsvStringAndName, ExportOptions, ExportType, NewlineSequence} from '../Parser';\nimport * as FileSaver from 'file-saver';\nimport {EncodingDropdown} from './EncodingDropdown';\nimport {ProgressBar} from './ProgressBar';\nimport * as style from './style.css';\nimport {BottomBar} from './BottomBar';\nimport {ParserOutputBox} from './ParserOutputBox';\nimport {StoredComponent} from './StoredComponent';\nimport {TranslateFunction} from './BaseProps';\nimport {withTranslation} from 'react-i18next';\n\nexport interface OutputText {\n    // If show is false, do not show text.\n    show: boolean;\n    text: string;\n}\n\ninterface Props extends TranslateFunction {\n    store: StoreComponent;\n}\n\ninterface State extends ExportOptions {\n    outputText: OutputText;\n}\n\nexport class ExportComponent extends StoredComponent<Props, State> {\n    public constructor(props: {store: StoreComponent} & TranslateFunction) {\n        super(props, 'export', {\n            exportType: ExportType.file,\n            delimiter: '\\u002c',\n            newline: NewlineSequence.CRLF,\n            encoding: 'UTF-8',\n            outputText: {\n                show: false,\n                text: '',\n            },\n        }, ['exportType', 'delimiter', 'newline', 'encoding']);\n    }\n\n    public render(): React.ReactNode {\n        const t = this.props.t;\n        const outputTextField = (\n            <TextField\n                label={t('Export result')}\n                className={style.monospace}\n                readOnly={true}\n                multiline rows={15}\n                wrap='off'\n                value={this.state.outputText.text}\n            />\n        );\n\n        const largeFileWarning = ( // TODO Check what is considered large file for exporting\n            <Text style={{color: 'red'}} variant='medium'>\n                {t('Large file export is not supported')}\n            </Text>\n        );\n\n        return (\n            <div className={style.pageMargin}>\n                <ExportTypeDropdown\n                    value={this.state.exportType}\n                    onChange={(exportType) => this.setState({exportType})}\n                />\n                <br />\n                <EncodingDropdown\n                    value={this.state.encoding}\n                    onChange={(encoding) => this.setState({encoding})}\n                    hidden={this.state.exportType === ExportType.text}\n                    showAutoDetect={false}\n                />\n                <DelimiterInput\n                    value={this.state.delimiter}\n                    onChange={(delimiter) => this.setState({delimiter})}\n                    showAutoDetect={false}\n                    showLengthError={false}\n                />\n                <br />\n                <NewlineDropdown\n                    value={this.state.newline}\n                    onChange={(newline) => this.setState({newline})}\n                    showAutoDetect={false}\n                />\n                <br />\n                <TooltipHost\n                    styles={{root: {display: 'inline-block'}}}\n                    content={this.buttonTooltipContent()}\n                >\n                    <PrimaryButton\n                        onClick={this.buttonOnClick}\n                        disabled={this.buttonTooltipContent() !== ''}\n                        text={t('Export to CSV')}\n                    />\n                </TooltipHost>\n                <br />\n                {this.props.store.state.largeFile ? largeFileWarning : null}\n                <ProgressBar\n                    onClick={this.props.store.abort}\n                    progress={this.props.store.state.progress}\n                />\n                <Toggle\n                    inlineLabel label={t('Save options')}\n                    defaultChecked={this.initialSaveStatus()}\n                    onChange={(_, checked) => this.setSaveStatus(checked)}\n                />\n                {this.state.outputText.show ? outputTextField : null}\n                <ParserOutputBox parserOutput={this.props.store.state.parserOutput} />\n                <BottomBar />\n            </div>\n        );\n    }\n\n    private buttonOnClick = async () => {\n        function newOutputText(state, exportOptions): OutputText {\n            // If exportType is text:\n            //      If last outputText.show was true, flip twice otherwise change once later\n            // If exportType is a file, show is set to false once.\n            if (exportOptions.exportType === ExportType.text) {\n                if (exportOptions.outputText.show) {\n                    return {show: !state.outputText.show, text: state.outputText.text};\n                } else {\n                    return {show: state.outputText.show, text: state.outputText.text};\n                }\n            } else {\n                return {show: false, text: ''};\n            }\n        }\n\n        // Copy values before async operation\n        const exportOptions = {...this.state};\n\n        this.setState(state => ({outputText: newOutputText(state, exportOptions)}));\n\n        const csvStringAndName = await this.props.store.csvStringAndName(this.state);\n        if (csvStringAndName === null) {\n            return;\n        }\n\n        this.saveOrOutput(csvStringAndName, exportOptions);\n    }\n\n    private saveOrOutput(csvStringAndName: CsvStringAndName, exportOptions: ExportOptions): void {\n        switch (exportOptions.exportType) {\n        case ExportType.file: {\n            const options = {type: 'text/csv;charset=' + exportOptions.encoding};\n            const blob = new Blob([csvStringAndName.string], options);\n            FileSaver.saveAs(blob, csvStringAndName.name + '.csv');\n            // state.outputText.show is already false\n            return;\n        }\n        case ExportType.text: {\n            this.setState(state => ({\n                outputText: {show: !state.outputText.show, text: csvStringAndName.string},\n            }));\n            return;\n        }\n        }\n    }\n\n    private buttonTooltipContent(): string {\n        if (!this.props.store.state.initialized) {\n            return this.props.t('Excel API is not initialized');\n        } else {\n            return '';\n        }\n    }\n}\n\nexport default withTranslation('importExport')(connect(ExportComponent));","import * as React from 'react';\nimport {Context, StoreComponent} from './Store';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function connect<P extends {store: StoreComponent}>(Component: React.ComponentClass): any {\n    // eslint-disable-next-line react/display-name\n    return (props: Pick<P, Exclude<keyof P, 'store'>>) => {\n        return (\n            <Context.Consumer>\n                {(store: StoreComponent) => <Component {...props} store={store}/>}\n            </Context.Consumer>\n        );\n    };\n}"],"sourceRoot":""}